(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort C_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort A_c_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort C_a_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort A_b_sp_nu$ 0 )
(declare-sort A_c_sp_nu$ 0 )
(declare-sort C_b_sp_nu$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_b_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun$ 0 )
(declare-sort A_b_b_fun_fun$ 0 )
(declare-sort A_c_sp_nu_set$ 0 )
(declare-sort B_a_a_fun_fun$ 0 )
(declare-sort B_a_b_fun_fun$ 0 )
(declare-sort B_b_a_fun_fun$ 0 )
(declare-sort B_b_b_fun_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort C_b_sp_nu_set$ 0 )
(declare-sort A_stream_a_fun$ 0 )
(declare-sort B_stream_b_fun$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort B_stream_bool_fun$ 0 )
(declare-sort A_c_sp_nu_bool_fun$ 0 )
(declare-sort C_b_sp_nu_bool_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_c_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu$ 0 )
(declare-sort A_c_fun_a_a_fun_fun$ 0 )
(declare-sort A_c_fun_a_c_fun_fun$ 0 )
(declare-sort C_a_fun_c_a_fun_fun$ 0 )
(declare-sort C_a_fun_c_c_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu$ 0 )
(declare-sort C_c_fun_c_a_fun_fun$ 0 )
(declare-sort C_c_fun_c_c_fun_fun$ 0 )
(declare-sort A_a_stream_a_fun_fun$ 0 )
(declare-sort B_b_stream_b_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort B_stream_b_stream_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_set$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_set$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_c_a_c_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_a_c_fun_a_c_fun_fun_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_a_fun$ 0 )
(declare-sort A_c_b_c_b_sp_nu_sp_mu_fun$ 0 )
(declare-sort B_bool_fun_b_bool_fun_fun$ 0 )
(declare-sort C_a_c_a_c_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_a_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_fun$ 0 )
(declare-sort C_c_a_fun_c_a_fun_fun_fun$ 0 )
(declare-sort C_c_b_c_b_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_c_c_fun_c_c_fun_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_bool_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_bool_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_c_set_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_b_set_fun$ 0 )
(declare-sort A_stream_a_stream_bool_fun_fun$ 0 )
(declare-sort B_stream_b_stream_bool_fun_fun$ 0 )
(declare-sort A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ 0 )
(declare-sort A_bool_fun_a_stream_a_stream_fun_fun$ 0 )
(declare-sort B_bool_fun_b_stream_b_stream_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_a_c_sp_nu_set_fun$ 0 )
(declare-sort A_c_fun_a_c_b_c_b_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort C_a_fun_c_a_c_a_c_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_b_sp_nu_set_fun$ 0 )
(declare-sort C_c_b_c_b_sp_nu_sp_mu_fun_c_a_fun_fun$ 0 )
(declare-sort C_c_b_c_b_sp_nu_sp_mu_fun_c_c_fun_fun$ 0 )
(declare-sort C_c_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_bool_fun_a_stream_prod_a_stream_bool_fun_fun$ 0 )
(declare-sort B_bool_fun_b_stream_prod_b_stream_bool_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_set$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ 0 )
(declare-sort B_c_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort C_a_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort A_c_sp_nu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort C_b_sp_nu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort A_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun_fun$ 0 )
(declare-sort A_a_c_a_c_sp_nu_sp_mu_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort C_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort A_a_a_c_a_c_sp_nu_sp_mu_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort C_c_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun_fun$ 0 )
(declare-sort A_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ 0 )
(declare-sort C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_set_a_c_a_c_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_c_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_bool_fun_fun$ 0 )
(declare-sort B_stream$ 0)
(declare-sort A_stream$ 0)
(declare-sort C_stream$ 0)
(declare-fun shd$ (B_stream$)B$)
(declare-fun stl$ (B_stream$)B_stream$)
(declare-fun sCons$ (B$ B_stream$ )B_stream$)
(declare-fun shd$a (A_stream$)A$)
(declare-fun stl$a (A_stream$)A_stream$)
(declare-fun sCons$a (A$ A_stream$ )A_stream$)
(declare-fun shd$b (C_stream$)C$)
(declare-fun stl$b (C_stream$)C_stream$)
(declare-fun sCons$b (C$ C_stream$ )C_stream$)
(declare-sort C_a_c_sp_nu_prod$ 0)
(declare-sort C_a_c_sp_nu_prod_a_stream_prod$ 0)
(declare-sort B_c_b_sp_nu_prod$ 0)
(declare-sort B_c_b_sp_nu_prod_c_stream_prod$ 0)
(declare-sort C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$ 0)
(declare-sort A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$ 0)
(declare-sort C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$ 0)
(declare-sort A_a_prod$ 0)
(declare-fun fst$ (C_a_c_sp_nu_prod$)C$)
(declare-fun snd$ (C_a_c_sp_nu_prod$)A_c_sp_nu$)
(declare-fun pair$ (C$ A_c_sp_nu$ )C_a_c_sp_nu_prod$)
(declare-fun fst$a (C_a_c_sp_nu_prod_a_stream_prod$)C_a_c_sp_nu_prod$)
(declare-fun snd$a (C_a_c_sp_nu_prod_a_stream_prod$)A_stream$)
(declare-fun pair$a (C_a_c_sp_nu_prod$ A_stream$ )C_a_c_sp_nu_prod_a_stream_prod$)
(declare-fun fst$b (B_c_b_sp_nu_prod$)B$)
(declare-fun snd$b (B_c_b_sp_nu_prod$)C_b_sp_nu$)
(declare-fun pair$b (B$ C_b_sp_nu$ )B_c_b_sp_nu_prod$)
(declare-fun fst$c (B_c_b_sp_nu_prod_c_stream_prod$)B_c_b_sp_nu_prod$)
(declare-fun snd$c (B_c_b_sp_nu_prod_c_stream_prod$)C_stream$)
(declare-fun pair$c (B_c_b_sp_nu_prod$ C_stream$ )B_c_b_sp_nu_prod_c_stream_prod$)
(declare-fun fst$d (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$)C_b_c_b_sp_nu_sp_mu$)
(declare-fun snd$d (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$)A_c_a_c_sp_nu_sp_mu$)
(declare-fun pair$d (C_b_c_b_sp_nu_sp_mu$ A_c_a_c_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$)
(declare-fun fst$e (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$)A_c_a_c_sp_nu_sp_mu$)
(declare-fun snd$e (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$)A_c_a_c_sp_nu_sp_mu$)
(declare-fun pair$e (A_c_a_c_sp_nu_sp_mu$ A_c_a_c_sp_nu_sp_mu$ )A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$)
(declare-fun fst$f (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$)C_b_c_b_sp_nu_sp_mu$)
(declare-fun snd$f (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$)C_b_c_b_sp_nu_sp_mu$)
(declare-fun pair$f (C_b_c_b_sp_nu_sp_mu$ C_b_c_b_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$)
(declare-fun fst$g (A_a_prod$)A$)
(declare-fun snd$g (A_a_prod$)A$)
(declare-fun pair$g (A$ A$ )A_a_prod$)
(declare-sort A_a_prod_stream$ 0)
(declare-fun shd$c (A_a_prod_stream$)A_a_prod$)
(declare-fun stl$c (A_a_prod_stream$)A_a_prod_stream$)
(declare-fun sCons$c (A_a_prod$ A_a_prod_stream$ )A_a_prod_stream$)
(declare-sort A_b_prod$ 0)
(declare-fun fst$h (A_b_prod$)A$)
(declare-fun snd$h (A_b_prod$)B$)
(declare-fun pair$h (A$ B$ )A_b_prod$)
(declare-sort A_b_prod_stream$ 0)
(declare-fun shd$d (A_b_prod_stream$)A_b_prod$)
(declare-fun stl$d (A_b_prod_stream$)A_b_prod_stream$)
(declare-fun sCons$d (A_b_prod$ A_b_prod_stream$ )A_b_prod_stream$)
(declare-sort B_a_prod$ 0)
(declare-fun fst$i (B_a_prod$)B$)
(declare-fun snd$i (B_a_prod$)A$)
(declare-fun pair$i (B$ A$ )B_a_prod$)
(declare-sort B_a_prod_stream$ 0)
(declare-fun shd$e (B_a_prod_stream$)B_a_prod$)
(declare-fun stl$e (B_a_prod_stream$)B_a_prod_stream$)
(declare-fun sCons$e (B_a_prod$ B_a_prod_stream$ )B_a_prod_stream$)
(declare-sort B_b_prod$ 0)
(declare-fun fst$j (B_b_prod$)B$)
(declare-fun snd$j (B_b_prod$)B$)
(declare-fun pair$j (B$ B$ )B_b_prod$)
(declare-sort B_b_prod_stream$ 0)
(declare-fun shd$f (B_b_prod_stream$)B_b_prod$)
(declare-fun stl$f (B_b_prod_stream$)B_b_prod_stream$)
(declare-fun sCons$f (B_b_prod$ B_b_prod_stream$ )B_b_prod_stream$)
(declare-sort C_b_sp_nu_a_c_sp_nu_prod$ 0)
(declare-sort A_bool_fun_a_stream_prod$ 0)
(declare-sort B_bool_fun_b_stream_prod$ 0)
(declare-fun fst$k (C_b_sp_nu_a_c_sp_nu_prod$)C_b_sp_nu$)
(declare-fun snd$k (C_b_sp_nu_a_c_sp_nu_prod$)A_c_sp_nu$)
(declare-fun pair$k (C_b_sp_nu$ A_c_sp_nu$ )C_b_sp_nu_a_c_sp_nu_prod$)
(declare-fun select$ (A_bool_fun_a_stream_prod$)A_bool_fun$)
(declare-fun selecta$ (A_bool_fun_a_stream_prod$)A_stream$)
(declare-fun pair$l (A_bool_fun$ A_stream$ )A_bool_fun_a_stream_prod$)
(declare-fun selectb$ (B_bool_fun_b_stream_prod$)B_bool_fun$)
(declare-fun selectc$ (B_bool_fun_b_stream_prod$)B_stream$)
(declare-fun pair$m (B_bool_fun$ B_stream$ )B_bool_fun_b_stream_prod$)
(declare-fun f$ ()C_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun h$ ()A_a_c_a_c_sp_nu_sp_mu_fun$ )
(declare-fun in$ (A_c_a_c_sp_nu_sp_mu$ )A_c_sp_nu$ )
(declare-fun sc$ ()A_stream$ )
(declare-fun uu$ (C_b_c_b_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_bool_fun$ )
(declare-fun get$ (C_c_b_c_b_sp_nu_sp_mu_fun$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun in$a (C_b_c_b_sp_nu_sp_mu$ )C_b_sp_nu$ )
(declare-fun out$ (C_b_sp_nu$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun put$ (C$ A_c_sp_nu$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun spc$ ()C_b_sp_nu$ )
(declare-fun sub$ ()A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_set$ )
(declare-fun top$ ()C_set$ )
(declare-fun uua$ (A_c_a_c_sp_nu_sp_mu_set$ )A_c_a_c_sp_nu_sp_mu_bool_fun$ )
(declare-fun uub$ ()Bool_bool_fun$ )
(declare-fun uuc$ (C_c_b_c_b_sp_nu_sp_mu_fun$ A_a_c_a_c_sp_nu_sp_mu_fun$ )A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ )
(declare-fun uud$ ()B_b_stream_b_fun_fun$ )
(declare-fun uue$ ()A_a_stream_a_fun_fun$ )
(declare-fun uuf$ (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )C_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ )
(declare-fun uug$ (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )A_a_c_a_c_sp_nu_sp_mu_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ )
(declare-fun uuh$ (C_c_b_c_b_sp_nu_sp_mu_fun$ )C_c_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ )
(declare-fun uui$ (A_a_c_a_c_sp_nu_sp_mu_fun$ )A_a_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ )
(declare-fun uuj$ (C_c_b_c_b_sp_nu_sp_mu_fun$ )C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uuk$ (C_c_b_c_b_sp_nu_sp_mu_fun$ )C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun_fun$ )
(declare-fun uul$ (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )C_b_c_b_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uum$ (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )C_b_c_b_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uun$ (A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )A_c_a_c_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uuo$ (A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )A_c_a_c_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uup$ (A_a_c_a_c_sp_nu_sp_mu_fun$ )A_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uuq$ (A_a_c_a_c_sp_nu_sp_mu_fun$ )A_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_bool_fun_fun_fun$ )
(declare-fun uur$ (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )C_b_c_b_sp_nu_sp_mu_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uus$ (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )C_b_c_b_sp_nu_sp_mu_set_a_c_a_c_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uut$ (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )A_c_a_c_sp_nu_sp_mu_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uuu$ (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )A_c_a_c_sp_nu_sp_mu_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun accp$ (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_c_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_bool_fun_fun$ C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$ )Bool )
(declare-fun comp$ (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )A_a_c_a_c_sp_nu_sp_mu_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ )
(declare-fun get$a (A_a_c_a_c_sp_nu_sp_mu_fun$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun get$b (A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ )A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ )
(declare-fun out$a (A_c_sp_nu$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun put$a (B$ C_b_sp_nu$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun put$b (B$ C_b_sp_nu_a_c_sp_nu_prod$ )A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ )
(declare-fun sp_c$ ()A_c_sp_nu$ )
(declare-fun sub$a ()C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ )
(declare-fun swap$ (C$ )C_c_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun_fun$ )
(declare-fun szip$ (A_stream$ A_stream$ )A_a_prod_stream$ )
(declare-fun top$a ()A_set$ )
(declare-fun top$b ()C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun top$c ()A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun top$d ()C_bool_fun$ )
(declare-fun top$e ()A_bool_fun$ )
(declare-fun top$f (C_b_c_b_sp_nu_sp_mu$ )Bool )
(declare-fun top$g (A_c_a_c_sp_nu_sp_mu$ )Bool )
(declare-fun comp$a (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )C_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ )
(declare-fun comp$b (C_c_b_c_b_sp_nu_sp_mu_fun$ )C_c_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ )
(declare-fun comp$c (A_a_c_a_c_sp_nu_sp_mu_fun$ )A_a_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ )
(declare-fun comp$d (C_c_fun$ )C_c_fun_c_c_fun_fun$ )
(declare-fun comp$e (C_a_fun$ )C_c_fun_c_a_fun_fun$ )
(declare-fun comp$f (A_c_fun$ )C_a_fun_c_c_fun_fun$ )
(declare-fun comp$g (A_a_fun$ )C_a_fun_c_a_fun_fun$ )
(declare-fun comp$h (C_c_fun$ )A_c_fun_a_c_fun_fun$ )
(declare-fun comp$i (C_a_fun$ )A_c_fun_a_a_fun_fun$ )
(declare-fun comp$j (A_c_fun$ )A_a_fun_a_c_fun_fun$ )
(declare-fun comp$k (A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun comp$l (C_b_c_b_sp_nu_sp_mu_c_fun$ )C_c_b_c_b_sp_nu_sp_mu_fun_c_c_fun_fun$ )
(declare-fun comp$m (C_b_c_b_sp_nu_sp_mu_a_fun$ )C_c_b_c_b_sp_nu_sp_mu_fun_c_a_fun_fun$ )
(declare-fun comp$n (A_a_c_a_c_sp_nu_sp_mu_fun$ )C_a_fun_c_a_c_a_c_sp_nu_sp_mu_fun_fun$ )
(declare-fun comp$o (C_c_b_c_b_sp_nu_sp_mu_fun$ )A_c_fun_a_c_b_c_b_sp_nu_sp_mu_fun_fun$ )
(declare-fun comp$p (Bool_bool_fun$ )A_bool_fun_a_bool_fun_fun$ )
(declare-fun comp$q (Bool_bool_fun$ )B_bool_fun_b_bool_fun_fun$ )
(declare-fun image$ (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ C_b_c_b_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun smap2$ (B_b_b_fun_fun$ B_stream$ B_stream$ )B_stream$ )
(declare-fun swap$a (C$ )C_c_c_fun_c_c_fun_fun_fun$ )
(declare-fun swap$b (C$ )C_c_a_fun_c_a_fun_fun_fun$ )
(declare-fun swap$c (A$ )A_a_a_c_a_c_sp_nu_sp_mu_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun_fun$ )
(declare-fun swap$d (A$ )A_a_c_fun_a_c_fun_fun_fun$ )
(declare-fun swap$e (A$ )A_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun szip$a (A_stream$ B_stream$ )A_b_prod_stream$ )
(declare-fun szip$b (B_stream$ A_stream$ )B_a_prod_stream$ )
(declare-fun szip$c (B_stream$ B_stream$ )B_b_prod_stream$ )
(declare-fun image$a (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ C_b_c_b_sp_nu_sp_mu_set$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun image$b (A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ A_c_a_c_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun image$c (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ A_c_a_c_sp_nu_sp_mu_set$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun image$d (C_c_b_c_b_sp_nu_sp_mu_fun$ C_set$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun image$e (A_a_c_a_c_sp_nu_sp_mu_fun$ A_set$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun image$f (C_c_fun$ C_set$ )C_set$ )
(declare-fun image$g (C_a_fun$ C_set$ )A_set$ )
(declare-fun image$h (A_c_fun$ A_set$ )C_set$ )
(declare-fun image$i (A_a_fun$ A_set$ )A_set$ )
(declare-fun image$j (C_a_c_a_c_sp_nu_sp_mu_fun$ C_set$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun image$k (A_c_b_c_b_sp_nu_sp_mu_fun$ A_set$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun image$l (C_b_c_b_sp_nu_sp_mu_c_fun$ C_b_c_b_sp_nu_sp_mu_set$ )C_set$ )
(declare-fun image$m (C_b_c_b_sp_nu_sp_mu_a_fun$ C_b_c_b_sp_nu_sp_mu_set$ )A_set$ )
(declare-fun member$ (C_b_c_b_sp_nu_sp_mu$ C_b_c_b_sp_nu_sp_mu_set$ )Bool )
(declare-fun run_mu$ (A_c_a_c_sp_nu_sp_mu$ A_stream$ )C_a_c_sp_nu_prod_a_stream_prod$ )
(declare-fun run_nu$ (A_b_sp_nu$ A_stream$ )B_stream$ )
(declare-fun smap2$a (B_a_b_fun_fun$ B_stream$ A_stream$ )B_stream$ )
(declare-fun smap2$b (A_b_b_fun_fun$ A_stream$ B_stream$ )B_stream$ )
(declare-fun smap2$c (A_a_b_fun_fun$ A_stream$ A_stream$ )B_stream$ )
(declare-fun smap2$d (B_b_a_fun_fun$ B_stream$ B_stream$ )A_stream$ )
(declare-fun smap2$e (B_a_a_fun_fun$ B_stream$ A_stream$ )A_stream$ )
(declare-fun smap2$f (A_b_a_fun_fun$ A_stream$ B_stream$ )A_stream$ )
(declare-fun smap2$g (A_a_a_fun_fun$ A_stream$ A_stream$ )A_stream$ )
(declare-fun collect$ (C_bool_fun$ )C_set$ )
(declare-fun fun_app$ (Bool_bool_fun$ Bool )Bool )
(declare-fun member$a (A_c_a_c_sp_nu_sp_mu$ A_c_a_c_sp_nu_sp_mu_set$ )Bool )
(declare-fun member$b (C$ C_set$ )Bool )
(declare-fun member$c (A$ A_set$ )Bool )
(declare-fun member$d (A_c_sp_nu$ A_c_sp_nu_set$ )Bool )
(declare-fun member$e (C_b_sp_nu$ C_b_sp_nu_set$ )Bool )
(declare-fun member$f (B$ B_set$ )Bool )
(declare-fun member$g (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$ A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_set$ )Bool )
(declare-fun member$h (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$ C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ )Bool )
(declare-fun run_mu$a (C_b_c_b_sp_nu_sp_mu$ C_stream$ )B_c_b_sp_nu_prod_c_stream_prod$ )
(declare-fun run_nu$a (C_b_sp_nu$ C_stream$ )B_stream$ )
(declare-fun run_nu$b (A_c_sp_nu$ A_stream$ )C_stream$ )
(declare-fun sfilter$ (A_bool_fun$ A_stream$ )A_stream$ )
(declare-fun collect$a (A_bool_fun$ )A_set$ )
(declare-fun collect$b (C_b_c_b_sp_nu_sp_mu_bool_fun$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun collect$c (A_c_a_c_sp_nu_sp_mu_bool_fun$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun fun_app$a (C_b_c_b_sp_nu_sp_mu_bool_fun$ C_b_c_b_sp_nu_sp_mu$ )Bool )
(declare-fun fun_app$b (A_c_a_c_sp_nu_sp_mu_bool_fun$ A_c_a_c_sp_nu_sp_mu$ )Bool )
(declare-fun fun_app$c (A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ A$ )A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ )
(declare-fun fun_app$d (A_a_c_a_c_sp_nu_sp_mu_fun$ A$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun fun_app$e (C_c_b_c_b_sp_nu_sp_mu_fun$ C$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun fun_app$f (C_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ C_c_b_c_b_sp_nu_sp_mu_fun$ )C_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$g (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ C_b_c_b_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun fun_app$h (A_a_c_a_c_sp_nu_sp_mu_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ A_a_c_a_c_sp_nu_sp_mu_fun$ )A_a_c_a_c_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$i (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ A_c_a_c_sp_nu_sp_mu$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun fun_app$j (C_c_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ C_c_fun$ )C_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$k (C_c_fun$ C$ )C$ )
(declare-fun fun_app$l (A_a_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ A_a_fun$ )A_a_c_a_c_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$m (A_a_fun$ A$ )A$ )
(declare-fun fun_app$n (C_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ C_b_c_b_sp_nu_sp_mu_bool_fun$ )C_b_c_b_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$o (C_b_c_b_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ C_b_c_b_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun fun_app$p (A_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ A_c_a_c_sp_nu_sp_mu_bool_fun$ )A_c_a_c_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$q (C_b_c_b_sp_nu_sp_mu_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ C_b_c_b_sp_nu_sp_mu_set$ )A_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun fun_app$r (A_c_a_c_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ A_c_a_c_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun fun_app$s (A_c_a_c_sp_nu_sp_mu_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ A_c_a_c_sp_nu_sp_mu_set$ )A_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun fun_app$t (C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ C_set$ )C_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun fun_app$u (A_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ A_set$ )A_c_a_c_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun fun_app$v (A_c_a_c_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ A_c_a_c_sp_nu_sp_mu_bool_fun$ )C_b_c_b_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$w (C_b_c_b_sp_nu_sp_mu_set_a_c_a_c_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ C_b_c_b_sp_nu_sp_mu_set$ )A_c_a_c_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun fun_app$x (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ C_b_c_b_sp_nu_sp_mu$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun fun_app$y (C_b_c_b_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ C_b_c_b_sp_nu_sp_mu_bool_fun$ )A_c_a_c_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$z (A_c_a_c_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun_fun$ A_c_a_c_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun pred_fun$ (A_c_a_c_sp_nu_sp_mu_bool_fun$ A_a_c_a_c_sp_nu_sp_mu_fun$ )Bool )
(declare-fun sfilter$a (B_bool_fun$ B_stream$ )B_stream$ )
(declare-fun supremum$ (A_c_a_c_sp_nu_sp_mu_set$ A_c_a_c_sp_nu_sp_mu_c_set_fun$ )C_set$ )
(declare-fun fun_app$aa (A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ A_c_a_c_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun fun_app$ab (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$ac (C_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun$ C_b_c_b_sp_nu_sp_mu_bool_fun$ )C_bool_fun$ )
(declare-fun fun_app$ad (C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun_fun$ C_set$ )C_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun$ )
(declare-fun fun_app$ae (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$af (A_c_a_c_sp_nu_sp_mu_bool_fun_a_bool_fun_fun$ A_c_a_c_sp_nu_sp_mu_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$ag (A_set_a_c_a_c_sp_nu_sp_mu_bool_fun_a_bool_fun_fun_fun$ A_set$ )A_c_a_c_sp_nu_sp_mu_bool_fun_a_bool_fun_fun$ )
(declare-fun fun_app$ah (B_stream_b_fun$ B_stream$ )B$ )
(declare-fun fun_app$ai (B_b_stream_b_fun_fun$ B$ )B_stream_b_fun$ )
(declare-fun fun_app$aj (A_stream_a_fun$ A_stream$ )A$ )
(declare-fun fun_app$ak (A_a_stream_a_fun_fun$ A$ )A_stream_a_fun$ )
(declare-fun fun_app$al (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun fun_app$am (A_stream_a_stream_bool_fun_fun$ A_stream$ )A_stream_bool_fun$ )
(declare-fun fun_app$an (B_stream_bool_fun$ B_stream$ )Bool )
(declare-fun fun_app$ao (B_stream_b_stream_bool_fun_fun$ B_stream$ )B_stream_bool_fun$ )
(declare-fun fun_app$ap (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$aq (C_a_fun$ C$ )A$ )
(declare-fun fun_app$ar (A_c_fun$ A$ )C$ )
(declare-fun fun_app$as (C_b_c_b_sp_nu_sp_mu_c_fun$ C_b_c_b_sp_nu_sp_mu$ )C$ )
(declare-fun fun_app$at (A_c_a_c_sp_nu_sp_mu_a_fun$ A_c_a_c_sp_nu_sp_mu$ )A$ )
(declare-fun fun_app$au (C_a_c_a_c_sp_nu_sp_mu_fun$ C$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun fun_app$av (A_c_b_c_b_sp_nu_sp_mu_fun$ A$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun fun_app$aw (A_c_a_c_sp_nu_sp_mu_a_c_sp_nu_set_fun$ A_c_a_c_sp_nu_sp_mu$ )A_c_sp_nu_set$ )
(declare-fun fun_app$ax (C_b_c_b_sp_nu_sp_mu_c_b_sp_nu_set_fun$ C_b_c_b_sp_nu_sp_mu$ )C_b_sp_nu_set$ )
(declare-fun fun_app$ay (A_c_a_c_sp_nu_sp_mu_c_set_fun$ A_c_a_c_sp_nu_sp_mu$ )C_set$ )
(declare-fun fun_app$az (C_b_c_b_sp_nu_sp_mu_b_set_fun$ C_b_c_b_sp_nu_sp_mu$ )B_set$ )
(declare-fun fun_app$ba (C_c_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun_fun$ C$ )C_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ )
(declare-fun fun_app$bb (C_c_fun_c_c_fun_fun$ C_c_fun$ )C_c_fun$ )
(declare-fun fun_app$bc (C_c_c_fun_c_c_fun_fun_fun$ C$ )C_c_fun_c_c_fun_fun$ )
(declare-fun fun_app$bd (C_a_fun_c_a_fun_fun$ C_a_fun$ )C_a_fun$ )
(declare-fun fun_app$be (C_c_a_fun_c_a_fun_fun_fun$ C$ )C_a_fun_c_a_fun_fun$ )
(declare-fun fun_app$bf (A_a_a_c_a_c_sp_nu_sp_mu_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun_fun$ A$ )A_a_c_a_c_sp_nu_sp_mu_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ )
(declare-fun fun_app$bg (A_c_fun_a_c_fun_fun$ A_c_fun$ )A_c_fun$ )
(declare-fun fun_app$bh (A_a_c_fun_a_c_fun_fun_fun$ A$ )A_c_fun_a_c_fun_fun$ )
(declare-fun fun_app$bi (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$bj (A_a_a_fun_a_a_fun_fun_fun$ A$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$bk (B_b_fun$ B$ )B$ )
(declare-fun fun_app$bl (B_b_b_fun_fun$ B$ )B_b_fun$ )
(declare-fun fun_app$bm (A_b_fun$ A$ )B$ )
(declare-fun fun_app$bn (B_a_b_fun_fun$ B$ )A_b_fun$ )
(declare-fun fun_app$bo (A_b_b_fun_fun$ A$ )B_b_fun$ )
(declare-fun fun_app$bp (A_a_b_fun_fun$ A$ )A_b_fun$ )
(declare-fun fun_app$bq (B_a_fun$ B$ )A$ )
(declare-fun fun_app$br (B_b_a_fun_fun$ B$ )B_a_fun$ )
(declare-fun fun_app$bs (B_a_a_fun_fun$ B$ )A_a_fun$ )
(declare-fun fun_app$bt (A_b_a_fun_fun$ A$ )B_a_fun$ )
(declare-fun fun_app$bu (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$bv (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ C_b_c_b_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun fun_app$bw (A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ A_c_a_c_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun fun_app$bx (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ C_b_c_b_sp_nu_sp_mu$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun fun_app$by (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ A_c_a_c_sp_nu_sp_mu$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun fun_app$bz (A_c_sp_nu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ A_c_sp_nu_bool_fun$ )A_c_a_c_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$ca (C_b_sp_nu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ C_b_sp_nu_bool_fun$ )C_b_c_b_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$cb (A_c_sp_nu_bool_fun$ A_c_sp_nu$ )Bool )
(declare-fun fun_app$cc (C_c_fun_c_a_fun_fun$ C_c_fun$ )C_a_fun$ )
(declare-fun fun_app$cd (C_a_fun_c_c_fun_fun$ C_a_fun$ )C_c_fun$ )
(declare-fun fun_app$ce (A_c_fun_a_a_fun_fun$ A_c_fun$ )A_a_fun$ )
(declare-fun fun_app$cf (A_a_fun_a_c_fun_fun$ A_a_fun$ )A_c_fun$ )
(declare-fun fun_app$cg (C_c_b_c_b_sp_nu_sp_mu_fun_c_c_fun_fun$ C_c_b_c_b_sp_nu_sp_mu_fun$ )C_c_fun$ )
(declare-fun fun_app$ch (C_c_b_c_b_sp_nu_sp_mu_fun_c_a_fun_fun$ C_c_b_c_b_sp_nu_sp_mu_fun$ )C_a_fun$ )
(declare-fun fun_app$ci (C_a_fun_c_a_c_a_c_sp_nu_sp_mu_fun_fun$ C_a_fun$ )C_a_c_a_c_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$cj (A_c_fun_a_c_b_c_b_sp_nu_sp_mu_fun_fun$ A_c_fun$ )A_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$ck (A_bool_fun_a_bool_fun_fun$ A_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$cl (B_bool_fun_b_bool_fun_fun$ B_bool_fun$ )B_bool_fun$ )
(declare-fun fun_app$cm (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ C_b_c_b_sp_nu_sp_mu$ )A_c_a_c_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$cn (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun fun_app$co (A_bool_fun_a_stream_a_stream_fun_fun$ A_bool_fun$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$cp (A_bool_fun_a_stream_prod_a_stream_bool_fun_fun$ A_bool_fun_a_stream_prod$ )A_stream_bool_fun$ )
(declare-fun fun_app$cq (B_stream_b_stream_fun$ B_stream$ )B_stream$ )
(declare-fun fun_app$cr (B_bool_fun_b_stream_b_stream_fun_fun$ B_bool_fun$ )B_stream_b_stream_fun$ )
(declare-fun fun_app$cs (B_bool_fun_b_stream_prod_b_stream_bool_fun_fun$ B_bool_fun_b_stream_prod$ )B_stream_bool_fun$ )
(declare-fun pred_fun$a (C_b_c_b_sp_nu_sp_mu_bool_fun$ C_c_b_c_b_sp_nu_sp_mu_fun$ )Bool )
(declare-fun supremum$a (C_b_c_b_sp_nu_sp_mu_set$ C_b_c_b_sp_nu_sp_mu_b_set_fun$ )B_set$ )
(declare-fun supremum$b (A_c_a_c_sp_nu_sp_mu_set$ A_c_a_c_sp_nu_sp_mu_a_c_sp_nu_set_fun$ )A_c_sp_nu_set$ )
(declare-fun supremum$c (C_b_c_b_sp_nu_sp_mu_set$ C_b_c_b_sp_nu_sp_mu_c_b_sp_nu_set_fun$ )C_b_sp_nu_set$ )
(declare-fun supremum$d (C_b_c_b_sp_nu_sp_mu_set$ C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun supremum$e (A_c_a_c_sp_nu_sp_mu_set$ A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun supremum$f (C_b_c_b_sp_nu_sp_mu_set$ C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun supremum$g (A_c_a_c_sp_nu_sp_mu_set$ A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun undefined$ ()A_stream$ )
(declare-fun pred_sp_mu$ (C_bool_fun$ )A_c_sp_nu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun pred_sp_nu$ (C_bool_fun$ )A_c_sp_nu_bool_fun$ )
(declare-fun set1_sp_mu$ ()A_c_a_c_sp_nu_sp_mu_c_set_fun$ )
(declare-fun set2_sp_mu$ ()A_c_a_c_sp_nu_sp_mu_a_c_sp_nu_set_fun$ )
(declare-fun sp_mu_comp$ (C_b_c_b_sp_nu_sp_mu$ A_c_a_c_sp_nu_sp_mu$ )A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ )
(declare-fun undefined$a ()B_stream$ )
(declare-fun case_stream$ (B_b_stream_b_fun_fun$ B_stream$ )B$ )
(declare-fun pred_sp_mu$a (B_bool_fun$ )C_b_sp_nu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun sdrop_while$ (A_bool_fun$ A_stream$ )A_stream$ )
(declare-fun set1_sp_mu$a ()C_b_c_b_sp_nu_sp_mu_b_set_fun$ )
(declare-fun set2_sp_mu$a ()C_b_c_b_sp_nu_sp_mu_c_b_sp_nu_set_fun$ )
(declare-fun sinterleave$ (A_stream$ A_stream$ )A_stream$ )
(declare-fun sp_nu_comp2$ (C_b_sp_nu$ A_c_sp_nu$ )A_b_sp_nu$ )
(declare-fun case_stream$a (A_a_stream_a_fun_fun$ A_stream$ )A$ )
(declare-fun sdrop_while$a (B_bool_fun$ B_stream$ )B_stream$ )
(declare-fun sinterleave$a (B_stream$ B_stream$ )B_stream$ )
(declare-fun sp_mu_comp2R$ (C_a_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun_fun$ )A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )
(declare-fun sp_mu_comp2R$a (B_c_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun_fun$ )C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun sp_mu_comp_rel$ ()C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_c_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_bool_fun_fun$ )
(assert (! (forall ((?v0 Bool ))(! (= (fun_app$ uub$ ?v0 )(not ?v0 )):pattern ((fun_app$ uub$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$a (uu$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$a (uu$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ )(?v1 A_c_a_c_sp_nu_sp_mu$ ))(! (= (fun_app$b (uua$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$b (uua$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A$ ))(! (= (fun_app$c (uuc$ ?v0 ?v1 )?v2 )(sp_mu_comp$ (get$ ?v0 )(fun_app$d ?v1 ?v2 ))):pattern ((fun_app$c (uuc$ ?v0 ?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C$ ))(! (= (fun_app$e (fun_app$f (uuf$ ?v0 )?v1 )?v2 )(fun_app$g ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$f (uuf$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A$ ))(! (= (fun_app$d (fun_app$h (uug$ ?v0 )?v1 )?v2 )(fun_app$i ?v0 (fun_app$d ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$h (uug$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_fun$ )(?v2 C$ ))(! (= (fun_app$e (fun_app$j (uuh$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$k ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$j (uuh$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$d (fun_app$l (uui$ ?v0 )?v1 )?v2 )(fun_app$d ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$l (uui$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$a (fun_app$n (fun_app$o (uul$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$a ?v2 ?v3 ))):pattern ((fun_app$a (fun_app$n (fun_app$o (uul$ ?v0 )?v1 )?v2 )?v3 )))):named a8 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ )(?v3 A_c_a_c_sp_nu_sp_mu$ ))(! (= (fun_app$b (fun_app$p (fun_app$q (uur$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 (image$a ?v0 ?v1 ))(fun_app$b ?v2 ?v3 ))):pattern ((fun_app$b (fun_app$p (fun_app$q (uur$ ?v0 )?v1 )?v2 )?v3 )))):named a9 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$a (fun_app$n (fun_app$r (uun$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 (image$b ?v0 ?v1 ))(fun_app$a ?v2 ?v3 ))):pattern ((fun_app$a (fun_app$n (fun_app$r (uun$ ?v0 )?v1 )?v2 )?v3 )))):named a10 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ )(?v3 A_c_a_c_sp_nu_sp_mu$ ))(! (= (fun_app$b (fun_app$p (fun_app$s (uut$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 (image$c ?v0 ?v1 ))(fun_app$b ?v2 ?v3 ))):pattern ((fun_app$b (fun_app$p (fun_app$s (uut$ ?v0 )?v1 )?v2 )?v3 )))):named a11 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$a (fun_app$n (fun_app$t (uuj$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 (image$d ?v0 ?v1 ))(fun_app$a ?v2 ?v3 ))):pattern ((fun_app$a (fun_app$n (fun_app$t (uuj$ ?v0 )?v1 )?v2 )?v3 )))):named a12 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ )(?v3 A_c_a_c_sp_nu_sp_mu$ ))(! (= (fun_app$b (fun_app$p (fun_app$u (uup$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 (image$e ?v0 ?v1 ))(fun_app$b ?v2 ?v3 ))):pattern ((fun_app$b (fun_app$p (fun_app$u (uup$ ?v0 )?v1 )?v2 )?v3 )))):named a13 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$a (fun_app$n (fun_app$o (uum$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 ?v1 )(fun_app$a ?v2 (fun_app$g ?v0 ?v3 )))):pattern ((fun_app$a (fun_app$n (fun_app$o (uum$ ?v0 )?v1 )?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$a (fun_app$v (fun_app$w (uus$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 ?v1 )(fun_app$b ?v2 (fun_app$x ?v0 ?v3 )))):pattern ((fun_app$a (fun_app$v (fun_app$w (uus$ ?v0 )?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v3 A_c_a_c_sp_nu_sp_mu$ ))(! (= (fun_app$b (fun_app$y (fun_app$z (uuo$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 ?v1 )(fun_app$a ?v2 (fun_app$aa ?v0 ?v3 )))):pattern ((fun_app$b (fun_app$y (fun_app$z (uuo$ ?v0 )?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ )(?v3 A_c_a_c_sp_nu_sp_mu$ ))(! (= (fun_app$b (fun_app$p (fun_app$s (uuu$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 ?v1 )(fun_app$b ?v2 (fun_app$i ?v0 ?v3 )))):pattern ((fun_app$b (fun_app$p (fun_app$s (uuu$ ?v0 )?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v3 C$ ))(! (= (fun_app$ab (fun_app$ac (fun_app$ad (uuk$ ?v0 )?v1 )?v2 )?v3 )(and (member$b ?v3 ?v1 )(fun_app$a ?v2 (fun_app$e ?v0 ?v3 )))):pattern ((fun_app$ab (fun_app$ac (fun_app$ad (uuk$ ?v0 )?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ )(?v3 A$ ))(! (= (fun_app$ae (fun_app$af (fun_app$ag (uuq$ ?v0 )?v1 )?v2 )?v3 )(and (member$c ?v3 ?v1 )(fun_app$b ?v2 (fun_app$d ?v0 ?v3 )))):pattern ((fun_app$ae (fun_app$af (fun_app$ag (uuq$ ?v0 )?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(! (= (fun_app$ah (fun_app$ai uud$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ah (fun_app$ai uud$ ?v0 )?v1 )))):named a20 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(! (= (fun_app$aj (fun_app$ak uue$ ?v0 )?v1 )?v0 ):pattern ((fun_app$aj (fun_app$ak uue$ ?v0 )?v1 )))):named a21 ))
(assert (! (not (and (= (shd$ (run_nu$ (sp_nu_comp2$ spc$ sp_c$ )sc$ ))(shd$ (run_nu$a spc$ (run_nu$b sp_c$ sc$ ))))(exists ((?v0 C_b_sp_nu$ )(?v1 A_c_sp_nu$ )(?v2 A_stream$ ))(and (= (stl$ (run_nu$ (sp_nu_comp2$ spc$ sp_c$ )sc$ ))(run_nu$ (sp_nu_comp2$ ?v0 ?v1 )?v2 ))(= (stl$ (run_nu$a spc$ (run_nu$b sp_c$ sc$ )))(run_nu$a ?v0 (run_nu$b ?v1 ?v2 ))))))):named a22 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 A_c_sp_nu$ )(?v2 A_stream$ ))(=> (member$ (out$ ?v0 )(image$d f$ top$ ))(and (= (shd$ (run_nu$ (sp_nu_comp2$ ?v0 ?v1 )?v2 ))(shd$ (run_nu$a ?v0 (run_nu$b ?v1 ?v2 ))))(exists ((?v3 C_b_sp_nu$ )(?v4 A_c_sp_nu$ )(?v5 A_stream$ ))(and (= (stl$ (run_nu$ (sp_nu_comp2$ ?v0 ?v1 )?v2 ))(run_nu$ (sp_nu_comp2$ ?v3 ?v4 )?v5 ))(= (stl$ (run_nu$a ?v0 (run_nu$b ?v1 ?v2 )))(run_nu$a ?v3 (run_nu$b ?v4 ?v5 )))))))):named a23 ))
(assert (! (forall ((?v0 A_stream$ ))(=> (and (member$a (out$a (in$ (fun_app$d h$ (shd$a sc$ ))))(image$e h$ top$a ))(forall ((?v1 C_b_sp_nu$ )(?v2 A_c_sp_nu$ )(?v3 A_stream$ ))(=> (member$ (out$ ?v1 )(image$d f$ top$ ))(member$ (out$ ?v1 )(image$d f$ top$ )))))(and (= (shd$ (run_nu$ (sp_nu_comp2$ spc$ (in$ (fun_app$d h$ (shd$a sc$ ))))?v0 ))(shd$ (run_nu$a spc$ (run_nu$b (in$ (fun_app$d h$ (shd$a sc$ )))?v0 ))))(exists ((?v1 C_b_sp_nu$ )(?v2 A_c_sp_nu$ )(?v3 A_stream$ ))(and (= (stl$ (run_nu$ (sp_nu_comp2$ spc$ (in$ (fun_app$d h$ (shd$a sc$ ))))?v0 ))(run_nu$ (sp_nu_comp2$ ?v1 ?v2 )?v3 ))(= (stl$ (run_nu$a spc$ (run_nu$b (in$ (fun_app$d h$ (shd$a sc$ )))?v0 )))(run_nu$a ?v1 (run_nu$b ?v2 ?v3 )))))))):named a24 ))
(assert (! (= (get$a h$ )(out$a sp_c$ )):named a25 ))
(assert (! (= (get$ f$ )(out$ spc$ )):named a26 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(=> (and (= (shd$a ?v0 )(shd$a ?v1 ))(= (stl$a ?v0 )(stl$a ?v1 )))(= ?v0 ?v1 ))):named a27 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(=> (and (= (shd$ ?v0 )(shd$ ?v1 ))(= (stl$ ?v0 )(stl$ ?v1 )))(= ?v0 ?v1 ))):named a28 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$al (fun_app$am ?v0 ?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream$ ))(=> (fun_app$al (fun_app$am ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(or (fun_app$al (fun_app$am ?v0 (stl$a ?v3 ))(stl$a ?v4 ))(= (stl$a ?v3 )(stl$a ?v4 )))))))(= ?v1 ?v2 ))):named a29 ))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(=> (and (fun_app$an (fun_app$ao ?v0 ?v1 )?v2 )(forall ((?v3 B_stream$ )(?v4 B_stream$ ))(=> (fun_app$an (fun_app$ao ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(or (fun_app$an (fun_app$ao ?v0 (stl$ ?v3 ))(stl$ ?v4 ))(= (stl$ ?v3 )(stl$ ?v4 )))))))(= ?v1 ?v2 ))):named a30 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$al (fun_app$am ?v0 ?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream$ ))(=> (fun_app$al (fun_app$am ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(fun_app$al (fun_app$am ?v0 (stl$a ?v3 ))(stl$a ?v4 ))))))(= ?v1 ?v2 ))):named a31 ))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(=> (and (fun_app$an (fun_app$ao ?v0 ?v1 )?v2 )(forall ((?v3 B_stream$ )(?v4 B_stream$ ))(=> (fun_app$an (fun_app$ao ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(fun_app$an (fun_app$ao ?v0 (stl$ ?v3 ))(stl$ ?v4 ))))))(= ?v1 ?v2 ))):named a32 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu$ ))(= (= (in$ ?v0 )(in$ ?v1 ))(= ?v0 ?v1 ))):named a33 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 C_b_sp_nu$ )(?v2 A_stream$ ))(=> (and (member$a (out$a ?v0 )(image$e h$ top$a ))(and (forall ((?v3 C_b_sp_nu$ )(?v4 A_c_sp_nu$ )(?v5 A_stream$ ))(=> (member$ (out$ ?v3 )(image$d f$ top$ ))(and (= (shd$ (run_nu$ (sp_nu_comp2$ ?v3 ?v4 )?v5 ))(shd$ (run_nu$a ?v3 (run_nu$b ?v4 ?v5 ))))(exists ((?v6 C_b_sp_nu$ )(?v7 A_c_sp_nu$ )(?v8 A_stream$ ))(and (= (stl$ (run_nu$ (sp_nu_comp2$ ?v3 ?v4 )?v5 ))(run_nu$ (sp_nu_comp2$ ?v6 ?v7 )?v8 ))(= (stl$ (run_nu$a ?v3 (run_nu$b ?v4 ?v5 )))(run_nu$a ?v6 (run_nu$b ?v7 ?v8 ))))))))(= (get$ f$ )(out$ ?v1 ))))(and (= (shd$ (run_nu$ (sp_nu_comp2$ ?v1 ?v0 )?v2 ))(shd$ (run_nu$a ?v1 (run_nu$b ?v0 ?v2 ))))(exists ((?v3 C_b_sp_nu$ )(?v4 A_c_sp_nu$ )(?v5 A_stream$ ))(and (= (stl$ (run_nu$ (sp_nu_comp2$ ?v1 ?v0 )?v2 ))(run_nu$ (sp_nu_comp2$ ?v3 ?v4 )?v5 ))(= (stl$ (run_nu$a ?v1 (run_nu$b ?v0 ?v2 )))(run_nu$a ?v3 (run_nu$b ?v4 ?v5 )))))))):named a34 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (sdrop_while$ ?v0 ?v1 )(ite (fun_app$ae ?v0 (shd$a ?v1 ))(sdrop_while$ ?v0 (stl$a ?v1 ))?v1 ))):named a35 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_stream$ ))(= (sdrop_while$a ?v0 ?v1 )(ite (fun_app$ap ?v0 (shd$ ?v1 ))(sdrop_while$a ?v0 (stl$ ?v1 ))?v1 ))):named a36 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(= (= (get$a ?v0 )(get$a ?v1 ))(= ?v0 ?v1 ))):named a37 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (= (get$ ?v0 )(get$ ?v1 ))(= ?v0 ?v1 ))):named a38 ))
(assert (! (forall ((?v0 C_b_sp_nu$ ))(= (in$a (out$ ?v0 ))?v0 )):named a39 ))
(assert (! (forall ((?v0 A_c_sp_nu$ ))(= (in$ (out$a ?v0 ))?v0 )):named a40 ))
(assert (! (forall ((?v0 C_b_sp_nu$ ))(=> (=> (= ?v0 (in$a (out$ ?v0 )))false )false )):named a41 ))
(assert (! (forall ((?v0 A_c_sp_nu$ ))(=> (=> (= ?v0 (in$ (out$a ?v0 )))false )false )):named a42 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(! (= (out$ (in$a ?v0 ))?v0 ):pattern ((in$a ?v0 )))):named a43 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(! (= (out$a (in$ ?v0 ))?v0 ):pattern ((in$ ?v0 )))):named a44 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_sp_nu$ ))(=> (= (out$ ?v0 )(out$ ?v1 ))(= ?v0 ?v1 ))):named a45 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 A_c_sp_nu$ ))(=> (= (out$a ?v0 )(out$a ?v1 ))(= ?v0 ?v1 ))):named a46 ))
(assert (! (forall ((?v0 A_c_sp_nu$ ))(=> (forall ((?v1 A_c_a_c_sp_nu_sp_mu$ ))(=> (= ?v0 (in$ ?v1 ))false ))false )):named a47 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_stream$ ))(! (= (run_mu$ (get$a ?v0 )?v1 )(run_mu$ (fun_app$d ?v0 (shd$a ?v1 ))(stl$a ?v1 ))):pattern ((run_mu$ (get$a ?v0 )?v1 )))):named a48 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_stream$ ))(! (= (run_mu$a (get$ ?v0 )?v1 )(run_mu$a (fun_app$e ?v0 (shd$b ?v1 ))(stl$b ?v1 ))):pattern ((run_mu$a (get$ ?v0 )?v1 )))):named a49 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C$ )(?v3 C_set$ ))(=> (and (= ?v0 (fun_app$e ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$ ?v0 (image$d ?v1 ?v3 )))):named a50 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$d ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$a ?v0 (image$e ?v1 ?v3 )))):named a51 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (and (= ?v0 (fun_app$g ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (image$ ?v1 ?v3 )))):named a52 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (and (= ?v0 (fun_app$x ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$a ?v1 ?v3 )))):named a53 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu$ )(?v3 A_c_a_c_sp_nu_sp_mu_set$ ))(=> (and (= ?v0 (fun_app$aa ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$b ?v1 ?v3 )))):named a54 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu$ )(?v3 A_c_a_c_sp_nu_sp_mu_set$ ))(=> (and (= ?v0 (fun_app$i ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (image$c ?v1 ?v3 )))):named a55 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(= (member$ ?v0 top$b )true )):named a56 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(= (member$a ?v0 top$c )true )):named a57 ))
(assert (! (forall ((?v0 C$ ))(= (member$b ?v0 top$ )true )):named a58 ))
(assert (! (forall ((?v0 A$ ))(= (member$c ?v0 top$a )true )):named a59 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(member$ ?v0 top$b )):named a60 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(member$a ?v0 top$c )):named a61 ))
(assert (! (forall ((?v0 C$ ))(member$b ?v0 top$ )):named a62 ))
(assert (! (forall ((?v0 A$ ))(member$c ?v0 top$a )):named a63 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (= (image$d ?v0 top$ )top$b )(forall ((?v1 C_b_c_b_sp_nu_sp_mu$ ))(exists ((?v2 C$ ))(= ?v1 (fun_app$e ?v0 ?v2 )))))):named a64 ))
(assert (! (forall ((?v0 C_c_fun$ ))(= (= (image$f ?v0 top$ )top$ )(forall ((?v1 C$ ))(exists ((?v2 C$ ))(= ?v1 (fun_app$k ?v0 ?v2 )))))):named a65 ))
(assert (! (forall ((?v0 C_a_fun$ ))(= (= (image$g ?v0 top$ )top$a )(forall ((?v1 A$ ))(exists ((?v2 C$ ))(= ?v1 (fun_app$aq ?v0 ?v2 )))))):named a66 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(= (= (image$e ?v0 top$a )top$c )(forall ((?v1 A_c_a_c_sp_nu_sp_mu$ ))(exists ((?v2 A$ ))(= ?v1 (fun_app$d ?v0 ?v2 )))))):named a67 ))
(assert (! (forall ((?v0 A_c_fun$ ))(= (= (image$h ?v0 top$a )top$ )(forall ((?v1 C$ ))(exists ((?v2 A$ ))(= ?v1 (fun_app$ar ?v0 ?v2 )))))):named a68 ))
(assert (! (forall ((?v0 A_a_fun$ ))(= (= (image$i ?v0 top$a )top$a )(forall ((?v1 A$ ))(exists ((?v2 A$ ))(= ?v1 (fun_app$m ?v0 ?v2 )))))):named a69 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_fun$ ))(=> (forall ((?v2 C_b_c_b_sp_nu_sp_mu$ ))(= (fun_app$e ?v0 (fun_app$as ?v1 ?v2 ))?v2 ))(= (image$d ?v0 top$ )top$b ))):named a70 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ ))(=> (forall ((?v2 C$ ))(= (fun_app$k ?v0 (fun_app$k ?v1 ?v2 ))?v2 ))(= (image$f ?v0 top$ )top$ ))):named a71 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 A_c_fun$ ))(=> (forall ((?v2 A$ ))(= (fun_app$aq ?v0 (fun_app$ar ?v1 ?v2 ))?v2 ))(= (image$g ?v0 top$ )top$a ))):named a72 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu_a_fun$ ))(=> (forall ((?v2 A_c_a_c_sp_nu_sp_mu$ ))(= (fun_app$d ?v0 (fun_app$at ?v1 ?v2 ))?v2 ))(= (image$e ?v0 top$a )top$c ))):named a73 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 C_a_fun$ ))(=> (forall ((?v2 C$ ))(= (fun_app$ar ?v0 (fun_app$aq ?v1 ?v2 ))?v2 ))(= (image$h ?v0 top$a )top$ ))):named a74 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ ))(=> (forall ((?v2 A$ ))(= (fun_app$m ?v0 (fun_app$m ?v1 ?v2 ))?v2 ))(= (image$i ?v0 top$a )top$a ))):named a75 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (= (image$d ?v0 top$ )top$b )(forall ((?v2 C$ ))(=> (= ?v1 (fun_app$e ?v0 ?v2 ))false )))false )):named a76 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ ))(=> (and (= (image$f ?v0 top$ )top$ )(forall ((?v2 C$ ))(=> (= ?v1 (fun_app$k ?v0 ?v2 ))false )))false )):named a77 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 A$ ))(=> (and (= (image$g ?v0 top$ )top$a )(forall ((?v2 C$ ))(=> (= ?v1 (fun_app$aq ?v0 ?v2 ))false )))false )):named a78 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (= (image$e ?v0 top$a )top$c )(forall ((?v2 A$ ))(=> (= ?v1 (fun_app$d ?v0 ?v2 ))false )))false )):named a79 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 C$ ))(=> (and (= (image$h ?v0 top$a )top$ )(forall ((?v2 A$ ))(=> (= ?v1 (fun_app$ar ?v0 ?v2 ))false )))false )):named a80 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(=> (and (= (image$i ?v0 top$a )top$a )(forall ((?v2 A$ ))(=> (= ?v1 (fun_app$m ?v0 ?v2 ))false )))false )):named a81 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(=> (= (image$d ?v0 top$ )top$b )(exists ((?v2 C$ ))(= ?v1 (fun_app$e ?v0 ?v2 ))))):named a82 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ ))(=> (= (image$f ?v0 top$ )top$ )(exists ((?v2 C$ ))(= ?v1 (fun_app$k ?v0 ?v2 ))))):named a83 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 A$ ))(=> (= (image$g ?v0 top$ )top$a )(exists ((?v2 C$ ))(= ?v1 (fun_app$aq ?v0 ?v2 ))))):named a84 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu$ ))(=> (= (image$e ?v0 top$a )top$c )(exists ((?v2 A$ ))(= ?v1 (fun_app$d ?v0 ?v2 ))))):named a85 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 C$ ))(=> (= (image$h ?v0 top$a )top$ )(exists ((?v2 A$ ))(= ?v1 (fun_app$ar ?v0 ?v2 ))))):named a86 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(=> (= (image$i ?v0 top$a )top$a )(exists ((?v2 A$ ))(= ?v1 (fun_app$m ?v0 ?v2 ))))):named a87 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C$ ))(=> (= ?v0 (fun_app$e ?v1 ?v2 ))(member$ ?v0 (image$d ?v1 top$ )))):named a88 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 C_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 C$ ))(=> (= ?v0 (fun_app$au ?v1 ?v2 ))(member$a ?v0 (image$j ?v1 top$ )))):named a89 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 A_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 A$ ))(=> (= ?v0 (fun_app$av ?v1 ?v2 ))(member$ ?v0 (image$k ?v1 top$a )))):named a90 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A$ ))(=> (= ?v0 (fun_app$d ?v1 ?v2 ))(member$a ?v0 (image$e ?v1 top$a )))):named a91 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C$ ))(member$ (fun_app$e ?v0 ?v1 )(image$d ?v0 top$ ))):named a92 ))
(assert (! (forall ((?v0 C_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C$ ))(member$a (fun_app$au ?v0 ?v1 )(image$j ?v0 top$ ))):named a93 ))
(assert (! (forall ((?v0 A_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A$ ))(member$ (fun_app$av ?v0 ?v1 )(image$k ?v0 top$a ))):named a94 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A$ ))(member$a (fun_app$d ?v0 ?v1 )(image$e ?v0 top$a ))):named a95 ))
(assert (! (= top$ (collect$ top$d )):named a96 ))
(assert (! (= top$a (collect$a top$e )):named a97 ))
(assert (! (exists ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(member$ ?v0 top$b )):named a98 ))
(assert (! (exists ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(member$a ?v0 top$c )):named a99 ))
(assert (! (exists ((?v0 C$ ))(member$b ?v0 top$ )):named a100 ))
(assert (! (exists ((?v0 A$ ))(member$c ?v0 top$a )):named a101 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (forall ((?v1 C_b_c_b_sp_nu_sp_mu$ ))(member$ ?v1 ?v0 ))(= top$b ?v0 ))):named a102 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ ))(=> (forall ((?v1 A_c_a_c_sp_nu_sp_mu$ ))(member$a ?v1 ?v0 ))(= top$c ?v0 ))):named a103 ))
(assert (! (forall ((?v0 C_set$ ))(=> (forall ((?v1 C$ ))(member$b ?v1 ?v0 ))(= top$ ?v0 ))):named a104 ))
(assert (! (forall ((?v0 A_set$ ))(=> (forall ((?v1 A$ ))(member$c ?v1 ?v0 ))(= top$a ?v0 ))):named a105 ))
(assert (! (forall ((?v0 C$ )(?v1 C_set$ )(?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (member$b ?v0 ?v1 )(member$ (fun_app$e ?v2 ?v0 )(image$d ?v2 ?v1 )))):named a106 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (member$c ?v0 ?v1 )(member$a (fun_app$d ?v2 ?v0 )(image$e ?v2 ?v1 )))):named a107 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$g ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a108 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (member$ ?v0 ?v1 )(member$a (fun_app$x ?v2 ?v0 )(image$a ?v2 ?v1 )))):named a109 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (member$a ?v0 ?v1 )(member$ (fun_app$aa ?v2 ?v0 )(image$b ?v2 ?v1 )))):named a110 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (member$a ?v0 ?v1 )(member$a (fun_app$i ?v2 ?v0 )(image$c ?v2 ?v1 )))):named a111 ))
(assert (! (forall ((?v0 C$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$e ?v3 ?v0 )))(member$ ?v2 (image$d ?v3 ?v1 )))):named a112 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_c_a_c_sp_nu_sp_mu$ )(?v3 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$d ?v3 ?v0 )))(member$a ?v2 (image$e ?v3 ?v1 )))):named a113 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$g ?v3 ?v0 )))(member$ ?v2 (image$ ?v3 ?v1 )))):named a114 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$x ?v3 ?v0 )))(member$a ?v2 (image$a ?v3 ?v1 )))):named a115 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$aa ?v3 ?v0 )))(member$ ?v2 (image$b ?v3 ?v1 )))):named a116 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu$ )(?v3 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$i ?v3 ?v0 )))(member$a ?v2 (image$c ?v3 ?v1 )))):named a117 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 (image$d ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 C$ ))(=> (member$b ?v3 ?v1 )(fun_app$a ?v2 (fun_app$e ?v0 ?v3 )))))):named a118 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 ?v1 )(fun_app$a ?v2 (fun_app$g ?v0 ?v3 )))))):named a119 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 (image$b ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 ?v1 )(fun_app$a ?v2 (fun_app$aa ?v0 ?v3 )))))):named a120 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(=> (forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 (image$e ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$c ?v3 ?v1 )(fun_app$b ?v2 (fun_app$d ?v0 ?v3 )))))):named a121 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(=> (forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 (image$a ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 ?v1 )(fun_app$b ?v2 (fun_app$x ?v0 ?v3 )))))):named a122 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(=> (forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 (image$c ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 ?v1 )(fun_app$b ?v2 (fun_app$i ?v0 ?v3 )))))):named a123 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 (image$d ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 C$ ))(and (member$b ?v3 ?v1 )(fun_app$a ?v2 (fun_app$e ?v0 ?v3 )))))):named a124 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v1 )(fun_app$a ?v2 (fun_app$g ?v0 ?v3 )))))):named a125 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 (image$b ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v1 )(fun_app$a ?v2 (fun_app$aa ?v0 ?v3 )))))):named a126 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(=> (exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 (image$e ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$c ?v3 ?v1 )(fun_app$b ?v2 (fun_app$d ?v0 ?v3 )))))):named a127 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(=> (exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 (image$a ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v1 )(fun_app$b ?v2 (fun_app$x ?v0 ?v3 )))))):named a128 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(=> (exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 (image$c ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v1 )(fun_app$b ?v2 (fun_app$i ?v0 ?v3 )))))):named a129 ))
(assert (! (forall ((?v0 C_set$ )(?v1 C_set$ )(?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 C$ ))(=> (member$b ?v4 ?v1 )(= (fun_app$e ?v2 ?v4 )(fun_app$e ?v3 ?v4 )))))(= (image$d ?v2 ?v0 )(image$d ?v3 ?v1 )))):named a130 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v3 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$c ?v4 ?v1 )(= (fun_app$d ?v2 ?v4 )(fun_app$d ?v3 ?v4 )))))(= (image$e ?v2 ?v0 )(image$e ?v3 ?v1 )))):named a131 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_set$ ))(= (member$ ?v0 (image$d ?v1 ?v2 ))(exists ((?v3 C$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$e ?v1 ?v3 )))))):named a132 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_set$ ))(= (member$ ?v0 (image$ ?v1 ?v2 ))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$g ?v1 ?v3 )))))):named a133 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_set$ ))(= (member$ ?v0 (image$b ?v1 ?v2 ))(exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$aa ?v1 ?v3 )))))):named a134 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A_set$ ))(= (member$a ?v0 (image$e ?v1 ?v2 ))(exists ((?v3 A$ ))(and (member$c ?v3 ?v2 )(= ?v0 (fun_app$d ?v1 ?v3 )))))):named a135 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_set$ ))(= (member$a ?v0 (image$a ?v1 ?v2 ))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$x ?v1 ?v3 )))))):named a136 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_set$ ))(= (member$a ?v0 (image$c ?v1 ?v2 ))(exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$i ?v1 ?v3 )))))):named a137 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A_c_sp_nu$ ))(=> (and (member$a ?v0 (image$e ?v1 top$a ))(member$d ?v2 (fun_app$aw set2_sp_mu$ ?v0 )))(member$d ?v2 (fun_app$aw set2_sp_mu$ (get$a ?v1 ))))):named a138 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_sp_nu$ ))(=> (and (member$ ?v0 (image$d ?v1 top$ ))(member$e ?v2 (fun_app$ax set2_sp_mu$a ?v0 )))(member$e ?v2 (fun_app$ax set2_sp_mu$a (get$ ?v1 ))))):named a139 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 C$ ))(=> (and (member$a ?v0 (image$e ?v1 top$a ))(member$b ?v2 (fun_app$ay set1_sp_mu$ ?v0 )))(member$b ?v2 (fun_app$ay set1_sp_mu$ (get$a ?v1 ))))):named a140 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 B$ ))(=> (and (member$ ?v0 (image$d ?v1 top$ ))(member$f ?v2 (fun_app$az set1_sp_mu$a ?v0 )))(member$f ?v2 (fun_app$az set1_sp_mu$a (get$ ?v1 ))))):named a141 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ )(?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (= (image$d (fun_app$f (fun_app$ba (swap$ ?v0 )?v1 )?v2 )top$ )top$b )(= (image$d ?v2 top$ )top$b ))):named a142 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ )(?v2 C_c_fun$ ))(= (= (image$f (fun_app$bb (fun_app$bc (swap$a ?v0 )?v1 )?v2 )top$ )top$ )(= (image$f ?v2 top$ )top$ ))):named a143 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ )(?v2 C_a_fun$ ))(= (= (image$g (fun_app$bd (fun_app$be (swap$b ?v0 )?v1 )?v2 )top$ )top$a )(= (image$g ?v2 top$ )top$a ))):named a144 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(= (= (image$e (fun_app$h (fun_app$bf (swap$c ?v0 )?v1 )?v2 )top$a )top$c )(= (image$e ?v2 top$a )top$c ))):named a145 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_c_fun$ ))(= (= (image$h (fun_app$bg (fun_app$bh (swap$d ?v0 )?v1 )?v2 )top$a )top$ )(= (image$h ?v2 top$a )top$ ))):named a146 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_a_fun$ ))(= (= (image$i (fun_app$bi (fun_app$bj (swap$e ?v0 )?v1 )?v2 )top$a )top$a )(= (image$i ?v2 top$a )top$a ))):named a147 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ ))(= (collect$b (uu$ ?v0 ))?v0 )):named a148 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ ))(= (collect$c (uua$ ?v0 ))?v0 )):named a149 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (member$ ?v0 (collect$b ?v1 ))(fun_app$a ?v1 ?v0 ))):named a150 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (member$a ?v0 (collect$c ?v1 ))(fun_app$b ?v1 ?v0 ))):named a151 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(! (= (top$f ?v0 )(member$ ?v0 top$b )):pattern ((top$f ?v0 )))):named a152 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(! (= (top$g ?v0 )(member$a ?v0 top$c )):pattern ((top$g ?v0 )))):named a153 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$ab top$d ?v0 )(member$b ?v0 top$ )):pattern ((fun_app$ab top$d ?v0 )))):named a154 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$ae top$e ?v0 )(member$c ?v0 top$a )):pattern ((fun_app$ae top$e ?v0 )))):named a155 ))
(assert (! (forall ((?v0 C$ )(?v1 C_set$ )(?v2 C$ )(?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (member$b ?v0 ?v1 )(member$b ?v2 ?v1 ))(= (image$d (fun_app$f (fun_app$ba (swap$ ?v0 )?v2 )?v3 )?v1 )(image$d ?v3 ?v1 )))):named a156 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A$ )(?v3 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (and (member$c ?v0 ?v1 )(member$c ?v2 ?v1 ))(= (image$e (fun_app$h (fun_app$bf (swap$c ?v0 )?v2 )?v3 )?v1 )(image$e ?v3 ?v1 )))):named a157 ))
(assert (! (forall ((?v0 A_stream$ ))(= (sCons$a (shd$a ?v0 )(stl$a ?v0 ))?v0 )):named a158 ))
(assert (! (forall ((?v0 B_stream$ ))(= (sCons$ (shd$ ?v0 )(stl$ ?v0 ))?v0 )):named a159 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(! (= (shd$ (sCons$ ?v0 ?v1 ))?v0 ):pattern ((sCons$ ?v0 ?v1 )))):named a160 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(! (= (shd$a (sCons$a ?v0 ?v1 ))?v0 ):pattern ((sCons$a ?v0 ?v1 )))):named a161 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(! (= (stl$ (sCons$ ?v0 ?v1 ))?v1 ):pattern ((sCons$ ?v0 ?v1 )))):named a162 ))
(assert (! (forall ((?v0 A_stream$ ))(=> (=> (= ?v0 (sCons$a (shd$a ?v0 )(stl$a ?v0 )))false )false )):named a163 ))
(assert (! (forall ((?v0 B_stream$ ))(=> (=> (= ?v0 (sCons$ (shd$ ?v0 )(stl$ ?v0 )))false )false )):named a164 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C$ )(?v2 C$ ))(=> (= (image$d ?v0 top$ )top$b )(= (image$d (fun_app$f (fun_app$ba (swap$ ?v1 )?v2 )?v0 )top$ )top$b ))):named a165 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ )(?v2 C$ ))(=> (= (image$f ?v0 top$ )top$ )(= (image$f (fun_app$bb (fun_app$bc (swap$a ?v1 )?v2 )?v0 )top$ )top$ ))):named a166 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C$ )(?v2 C$ ))(=> (= (image$g ?v0 top$ )top$a )(= (image$g (fun_app$bd (fun_app$be (swap$b ?v1 )?v2 )?v0 )top$ )top$a ))):named a167 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A$ )(?v2 A$ ))(=> (= (image$e ?v0 top$a )top$c )(= (image$e (fun_app$h (fun_app$bf (swap$c ?v1 )?v2 )?v0 )top$a )top$c ))):named a168 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 A$ )(?v2 A$ ))(=> (= (image$h ?v0 top$a )top$ )(= (image$h (fun_app$bg (fun_app$bh (swap$d ?v1 )?v2 )?v0 )top$a )top$ ))):named a169 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A$ ))(=> (= (image$i ?v0 top$a )top$a )(= (image$i (fun_app$bi (fun_app$bj (swap$e ?v1 )?v2 )?v0 )top$a )top$a ))):named a170 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (sinterleave$ ?v0 ?v1 )(sCons$a (shd$a ?v0 )(sinterleave$ ?v1 (stl$a ?v0 ))))):named a171 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (sinterleave$a ?v0 ?v1 )(sCons$ (shd$ ?v0 )(sinterleave$a ?v1 (stl$ ?v0 ))))):named a172 ))
(assert (! (forall ((?v0 C$ )(?v1 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (member$b ?v0 (fun_app$ay set1_sp_mu$ ?v1 ))(and (forall ((?v2 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (= ?v1 (get$a ?v2 ))(and (member$a ?v3 (image$e ?v2 top$a ))(member$b ?v0 (fun_app$ay set1_sp_mu$ ?v3 ))))false ))(forall ((?v2 A_c_sp_nu$ ))(=> (= ?v1 (put$ ?v0 ?v2 ))false ))))false )):named a173 ))
(assert (! (forall ((?v0 B$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (member$f ?v0 (fun_app$az set1_sp_mu$a ?v1 ))(and (forall ((?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (= ?v1 (get$ ?v2 ))(and (member$ ?v3 (image$d ?v2 top$ ))(member$f ?v0 (fun_app$az set1_sp_mu$a ?v3 ))))false ))(forall ((?v2 C_b_sp_nu$ ))(=> (= ?v1 (put$a ?v0 ?v2 ))false ))))false )):named a174 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (member$d ?v0 (fun_app$aw set2_sp_mu$ ?v1 ))(and (forall ((?v2 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (= ?v1 (get$a ?v2 ))(and (member$a ?v3 (image$e ?v2 top$a ))(member$d ?v0 (fun_app$aw set2_sp_mu$ ?v3 ))))false ))(forall ((?v2 C$ ))(=> (= ?v1 (put$ ?v2 ?v0 ))false ))))false )):named a175 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (member$e ?v0 (fun_app$ax set2_sp_mu$a ?v1 ))(and (forall ((?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (= ?v1 (get$ ?v2 ))(and (member$ ?v3 (image$d ?v2 top$ ))(member$e ?v0 (fun_app$ax set2_sp_mu$a ?v3 ))))false ))(forall ((?v2 B$ ))(=> (= ?v1 (put$a ?v2 ?v0 ))false ))))false )):named a176 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(! (= (fun_app$ay set1_sp_mu$ (get$a ?v0 ))(supremum$ (image$e ?v0 top$a )set1_sp_mu$ )):pattern ((get$a ?v0 )))):named a177 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(! (= (fun_app$az set1_sp_mu$a (get$ ?v0 ))(supremum$a (image$d ?v0 top$ )set1_sp_mu$a )):pattern ((get$ ?v0 )))):named a178 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(! (= (fun_app$aw set2_sp_mu$ (get$a ?v0 ))(supremum$b (image$e ?v0 top$a )set2_sp_mu$ )):pattern ((get$a ?v0 )))):named a179 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(! (= (fun_app$ax set2_sp_mu$a (get$ ?v0 ))(supremum$c (image$d ?v0 top$ )set2_sp_mu$a )):pattern ((get$ ?v0 )))):named a180 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C$ )(?v2 A_c_sp_nu$ ))(not (= (get$a ?v0 )(put$ ?v1 ?v2 )))):named a181 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 B$ )(?v2 C_b_sp_nu$ ))(not (= (get$ ?v0 )(put$a ?v1 ?v2 )))):named a182 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (forall ((?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (= ?v0 (get$a ?v1 ))false ))(forall ((?v1 C$ )(?v2 A_c_sp_nu$ ))(=> (= ?v0 (put$ ?v1 ?v2 ))false )))false )):named a183 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (forall ((?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (= ?v0 (get$ ?v1 ))false ))(forall ((?v1 B$ )(?v2 C_b_sp_nu$ ))(=> (= ?v0 (put$a ?v1 ?v2 ))false )))false )):named a184 ))
(assert (! (forall ((?v0 B_b_b_fun_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(= (shd$ (smap2$ ?v0 ?v1 ?v2 ))(fun_app$bk (fun_app$bl ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a185 ))
(assert (! (forall ((?v0 B_a_b_fun_fun$ )(?v1 B_stream$ )(?v2 A_stream$ ))(= (shd$ (smap2$a ?v0 ?v1 ?v2 ))(fun_app$bm (fun_app$bn ?v0 (shd$ ?v1 ))(shd$a ?v2 )))):named a186 ))
(assert (! (forall ((?v0 A_b_b_fun_fun$ )(?v1 A_stream$ )(?v2 B_stream$ ))(= (shd$ (smap2$b ?v0 ?v1 ?v2 ))(fun_app$bk (fun_app$bo ?v0 (shd$a ?v1 ))(shd$ ?v2 )))):named a187 ))
(assert (! (forall ((?v0 A_a_b_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (shd$ (smap2$c ?v0 ?v1 ?v2 ))(fun_app$bm (fun_app$bp ?v0 (shd$a ?v1 ))(shd$a ?v2 )))):named a188 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(= (shd$a (smap2$d ?v0 ?v1 ?v2 ))(fun_app$bq (fun_app$br ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a189 ))
(assert (! (forall ((?v0 B_a_a_fun_fun$ )(?v1 B_stream$ )(?v2 A_stream$ ))(= (shd$a (smap2$e ?v0 ?v1 ?v2 ))(fun_app$m (fun_app$bs ?v0 (shd$ ?v1 ))(shd$a ?v2 )))):named a190 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A_stream$ )(?v2 B_stream$ ))(= (shd$a (smap2$f ?v0 ?v1 ?v2 ))(fun_app$bq (fun_app$bt ?v0 (shd$a ?v1 ))(shd$ ?v2 )))):named a191 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (shd$a (smap2$g ?v0 ?v1 ?v2 ))(fun_app$m (fun_app$bu ?v0 (shd$a ?v1 ))(shd$a ?v2 )))):named a192 ))
(assert (! (forall ((?v0 B_b_b_fun_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(= (stl$ (smap2$ ?v0 ?v1 ?v2 ))(smap2$ ?v0 (stl$ ?v1 )(stl$ ?v2 )))):named a193 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (shd$ (sinterleave$a ?v0 ?v1 ))(shd$ ?v0 ))):named a194 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (shd$a (sinterleave$ ?v0 ?v1 ))(shd$a ?v0 ))):named a195 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (stl$ (sinterleave$a ?v0 ?v1 ))(sinterleave$a ?v1 (stl$ ?v0 )))):named a196 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 (supremum$d ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 ?v0 )(forall ((?v4 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v4 (fun_app$bv ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a197 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ )(?v1 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 (supremum$e ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 ?v0 )(forall ((?v4 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v4 (fun_app$bw ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a198 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ )(?v1 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 (supremum$f ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 ?v0 )(forall ((?v4 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v4 (fun_app$bx ?v1 ?v3 ))(fun_app$b ?v2 ?v4 ))))))):named a199 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ )(?v1 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 (supremum$g ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 ?v0 )(forall ((?v4 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v4 (fun_app$by ?v1 ?v3 ))(fun_app$b ?v2 ?v4 ))))))):named a200 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 (supremum$d ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 ?v0 )(forall ((?v4 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v4 (fun_app$bv ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a201 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ )(?v1 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 (supremum$e ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 ?v0 )(forall ((?v4 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v4 (fun_app$bw ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a202 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ )(?v1 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 (supremum$f ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 ?v0 )(forall ((?v4 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v4 (fun_app$bx ?v1 ?v3 ))(fun_app$b ?v2 ?v4 ))))))):named a203 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ )(?v1 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 (supremum$g ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v3 ?v0 )(forall ((?v4 A_c_a_c_sp_nu_sp_mu$ ))(=> (member$a ?v4 (fun_app$by ?v1 ?v3 ))(fun_app$b ?v2 ?v4 ))))))):named a204 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 (supremum$d ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v0 )(exists ((?v4 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v4 (fun_app$bv ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a205 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ )(?v1 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 (supremum$e ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v0 )(exists ((?v4 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v4 (fun_app$bw ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a206 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ )(?v1 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 (supremum$f ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v0 )(exists ((?v4 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v4 (fun_app$bx ?v1 ?v3 ))(fun_app$b ?v2 ?v4 ))))))):named a207 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ )(?v1 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 (supremum$g ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v0 )(exists ((?v4 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v4 (fun_app$by ?v1 ?v3 ))(fun_app$b ?v2 ?v4 ))))))):named a208 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 (supremum$d ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v0 )(exists ((?v4 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v4 (fun_app$bv ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a209 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ )(?v1 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 (supremum$e ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v0 )(exists ((?v4 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v4 (fun_app$bw ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a210 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ )(?v1 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 (supremum$f ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v0 )(exists ((?v4 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v4 (fun_app$bx ?v1 ?v3 ))(fun_app$b ?v2 ?v4 ))))))):named a211 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ )(?v1 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 (supremum$g ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v0 )(exists ((?v4 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v4 (fun_app$by ?v1 ?v3 ))(fun_app$b ?v2 ?v4 ))))))):named a212 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 A_c_sp_nu_bool_fun$ )(?v2 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(! (= (fun_app$b (fun_app$bz (pred_sp_mu$ ?v0 )?v1 )(get$a ?v2 ))(pred_fun$ (fun_app$bz (pred_sp_mu$ ?v0 )?v1 )?v2 )):pattern ((fun_app$b (fun_app$bz (pred_sp_mu$ ?v0 )?v1 )(get$a ?v2 ))))):named a213 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 C_b_sp_nu_bool_fun$ )(?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(! (= (fun_app$a (fun_app$ca (pred_sp_mu$a ?v0 )?v1 )(get$ ?v2 ))(pred_fun$a (fun_app$ca (pred_sp_mu$a ?v0 )?v1 )?v2 )):pattern ((fun_app$a (fun_app$ca (pred_sp_mu$a ?v0 )?v1 )(get$ ?v2 ))))):named a214 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C$ )(?v2 A_c_sp_nu$ ))(! (= (sp_mu_comp$ (get$ ?v0 )(put$ ?v1 ?v2 ))(sp_mu_comp$ (fun_app$e ?v0 ?v1 )(out$a ?v2 ))):pattern ((sp_mu_comp$ (get$ ?v0 )(put$ ?v1 ?v2 ))))):named a215 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu$ ))(! (= (fun_app$cb (pred_sp_nu$ ?v0 )(in$ ?v1 ))(fun_app$b (fun_app$bz (pred_sp_mu$ ?v0 )(pred_sp_nu$ ?v0 ))?v1 )):pattern ((fun_app$cb (pred_sp_nu$ ?v0 )(in$ ?v1 ))))):named a216 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$ ))(=> (and (forall ((?v1 B$ )(?v2 C_b_sp_nu$ )(?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (= ?v0 (pair$d (put$a ?v1 ?v2 )?v3 ))false ))(and (forall ((?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C$ )(?v3 A_c_sp_nu$ ))(=> (= ?v0 (pair$d (get$ ?v1 )(put$ ?v2 ?v3 )))false ))(forall ((?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (= ?v0 (pair$d (get$ ?v1 )(get$a ?v2 )))false ))))false )):named a217 ))
(assert (! (forall ((?v0 C_a_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun_fun$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(! (= (fun_app$i (sp_mu_comp2R$ ?v0 )(get$a ?v1 ))(get$a (fun_app$h (comp$ (sp_mu_comp2R$ ?v0 ))?v1 ))):pattern ((fun_app$i (sp_mu_comp2R$ ?v0 )(get$a ?v1 ))))):named a218 ))
(assert (! (forall ((?v0 B_c_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(! (= (fun_app$g (sp_mu_comp2R$a ?v0 )(get$ ?v1 ))(get$ (fun_app$f (comp$a (sp_mu_comp2R$a ?v0 ))?v1 ))):pattern ((fun_app$g (sp_mu_comp2R$a ?v0 )(get$ ?v1 ))))):named a219 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_set$ ))(= (image$ ?v0 (image$d ?v1 ?v2 ))(image$d (fun_app$f (comp$a ?v0 )?v1 )?v2 ))):named a220 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A_set$ ))(= (image$c ?v0 (image$e ?v1 ?v2 ))(image$e (fun_app$h (comp$ ?v0 )?v1 )?v2 ))):named a221 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_fun$ )(?v2 C_set$ ))(= (image$d ?v0 (image$f ?v1 ?v2 ))(image$d (fun_app$j (comp$b ?v0 )?v1 )?v2 ))):named a222 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_fun$ )(?v2 A_set$ ))(= (image$e ?v0 (image$i ?v1 ?v2 ))(image$e (fun_app$l (comp$c ?v0 )?v1 )?v2 ))):named a223 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ ))(=> (and (= (image$f ?v0 top$ )top$ )(= (image$f ?v1 top$ )top$ ))(= (image$f (fun_app$bb (comp$d ?v1 )?v0 )top$ )top$ ))):named a224 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_a_fun$ ))(=> (and (= (image$f ?v0 top$ )top$ )(= (image$g ?v1 top$ )top$a ))(= (image$g (fun_app$cc (comp$e ?v1 )?v0 )top$ )top$a ))):named a225 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 A_c_fun$ ))(=> (and (= (image$g ?v0 top$ )top$a )(= (image$h ?v1 top$a )top$ ))(= (image$f (fun_app$cd (comp$f ?v1 )?v0 )top$ )top$ ))):named a226 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 A_a_fun$ ))(=> (and (= (image$g ?v0 top$ )top$a )(= (image$i ?v1 top$a )top$a ))(= (image$g (fun_app$bd (comp$g ?v1 )?v0 )top$ )top$a ))):named a227 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 C_c_fun$ ))(=> (and (= (image$h ?v0 top$a )top$ )(= (image$f ?v1 top$ )top$ ))(= (image$h (fun_app$bg (comp$h ?v1 )?v0 )top$a )top$ ))):named a228 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 C_a_fun$ ))(=> (and (= (image$h ?v0 top$a )top$ )(= (image$g ?v1 top$ )top$a ))(= (image$i (fun_app$ce (comp$i ?v1 )?v0 )top$a )top$a ))):named a229 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_c_fun$ ))(=> (and (= (image$i ?v0 top$a )top$a )(= (image$h ?v1 top$a )top$ ))(= (image$h (fun_app$cf (comp$j ?v1 )?v0 )top$a )top$ ))):named a230 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ ))(=> (and (= (image$i ?v0 top$a )top$a )(= (image$i ?v1 top$a )top$a ))(= (image$i (fun_app$bi (comp$k ?v1 )?v0 )top$a )top$a ))):named a231 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_fun$ ))(=> (and (= (image$d ?v0 top$ )top$b )(= (image$l ?v1 top$b )top$ ))(= (image$f (fun_app$cg (comp$l ?v1 )?v0 )top$ )top$ ))):named a232 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_a_fun$ ))(=> (and (= (image$d ?v0 top$ )top$b )(= (image$m ?v1 top$b )top$a ))(= (image$g (fun_app$ch (comp$m ?v1 )?v0 )top$ )top$a ))):named a233 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A$ ))(member$g (pair$e (fun_app$d ?v0 ?v1 )(get$a ?v0 ))sub$ )):named a234 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C$ ))(member$h (pair$f (fun_app$e ?v0 ?v1 )(get$ ?v0 ))sub$a )):named a235 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C_a_fun$ ))(= (image$j (fun_app$ci (comp$n ?v0 )?v1 )top$ )(image$e ?v0 (image$g ?v1 top$ )))):named a236 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (image$d (fun_app$f (comp$a ?v0 )?v1 )top$ )(image$ ?v0 (image$d ?v1 top$ )))):named a237 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_fun$ ))(= (image$d (fun_app$j (comp$b ?v0 )?v1 )top$ )(image$d ?v0 (image$f ?v1 top$ )))):named a238 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A_c_fun$ ))(= (image$k (fun_app$cj (comp$o ?v0 )?v1 )top$a )(image$d ?v0 (image$h ?v1 top$a )))):named a239 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(= (image$e (fun_app$h (comp$ ?v0 )?v1 )top$a )(image$c ?v0 (image$e ?v1 top$a )))):named a240 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_fun$ ))(= (image$e (fun_app$l (comp$c ?v0 )?v1 )top$a )(image$e ?v0 (image$i ?v1 top$a )))):named a241 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (sfilter$ ?v0 ?v1 )(sCons$a (shd$a (sdrop_while$ (fun_app$ck (comp$p uub$ )?v0 )?v1 ))(sfilter$ ?v0 (stl$a (sdrop_while$ (fun_app$ck (comp$p uub$ )?v0 )?v1 )))))):named a242 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_stream$ ))(= (sfilter$a ?v0 ?v1 )(sCons$ (shd$ (sdrop_while$a (fun_app$cl (comp$q uub$ )?v0 )?v1 ))(sfilter$a ?v0 (stl$ (sdrop_while$a (fun_app$cl (comp$q uub$ )?v0 )?v1 )))))):named a243 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (szip$ ?v0 ?v1 )(sCons$c (pair$g (shd$a ?v0 )(shd$a ?v1 ))(szip$ (stl$a ?v0 )(stl$a ?v1 ))))):named a244 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 B_stream$ ))(= (szip$a ?v0 ?v1 )(sCons$d (pair$h (shd$a ?v0 )(shd$ ?v1 ))(szip$a (stl$a ?v0 )(stl$ ?v1 ))))):named a245 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 A_stream$ ))(= (szip$b ?v0 ?v1 )(sCons$e (pair$i (shd$ ?v0 )(shd$a ?v1 ))(szip$b (stl$ ?v0 )(stl$a ?v1 ))))):named a246 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (szip$c ?v0 ?v1 )(sCons$f (pair$j (shd$ ?v0 )(shd$ ?v1 ))(szip$c (stl$ ?v0 )(stl$ ?v1 ))))):named a247 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_stream$ ))(= (stl$ (sfilter$a ?v0 ?v1 ))(sfilter$a ?v0 (stl$ (sdrop_while$a (fun_app$cl (comp$q uub$ )?v0 )?v1 ))))):named a248 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (stl$f (szip$c ?v0 ?v1 ))(szip$c (stl$ ?v0 )(stl$ ?v1 )))):named a249 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (shd$f (szip$c ?v0 ?v1 ))(pair$j (shd$ ?v0 )(shd$ ?v1 )))):named a250 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 A_stream$ ))(= (shd$e (szip$b ?v0 ?v1 ))(pair$i (shd$ ?v0 )(shd$a ?v1 )))):named a251 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 B_stream$ ))(= (shd$d (szip$a ?v0 ?v1 ))(pair$h (shd$a ?v0 )(shd$ ?v1 )))):named a252 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (shd$c (szip$ ?v0 ?v1 ))(pair$g (shd$a ?v0 )(shd$a ?v1 )))):named a253 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_stream$ ))(= (shd$ (sfilter$a ?v0 ?v1 ))(shd$ (sdrop_while$a (fun_app$cl (comp$q uub$ )?v0 )?v1 )))):named a254 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (shd$a (sfilter$ ?v0 ?v1 ))(shd$a (sdrop_while$ (fun_app$ck (comp$p uub$ )?v0 )?v1 )))):named a255 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu$ )(?v2 A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ ))(=> (and (= (sp_mu_comp$ ?v0 ?v1 )?v2 )(and (forall ((?v3 B$ )(?v4 C_b_sp_nu$ )(?v5 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (= ?v0 (put$a ?v3 ?v4 ))(and (= ?v1 ?v5 )(= ?v2 (put$b ?v3 (pair$k ?v4 (in$ ?v5 ))))))false ))(and (forall ((?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v4 C$ )(?v5 A_c_sp_nu$ ))(=> (and (= ?v0 (get$ ?v3 ))(and (= ?v1 (put$ ?v4 ?v5 ))(= ?v2 (sp_mu_comp$ (fun_app$e ?v3 ?v4 )(out$a ?v5 )))))false ))(forall ((?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v4 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (and (= ?v0 (get$ ?v3 ))(and (= ?v1 (get$a ?v4 ))(= ?v2 (get$b (uuc$ ?v3 ?v4 )))))false )))))false )):named a256 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu$ )(?v2 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ ))(=> (and (accp$ sp_mu_comp_rel$ (pair$d ?v0 ?v1 ))(and (forall ((?v3 B$ )(?v4 C_b_sp_nu$ )(?v5 A_c_a_c_sp_nu_sp_mu$ ))(=> (accp$ sp_mu_comp_rel$ (pair$d (put$a ?v3 ?v4 )?v5 ))(fun_app$b (fun_app$cm ?v2 (put$a ?v3 ?v4 ))?v5 )))(and (forall ((?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v4 C$ )(?v5 A_c_sp_nu$ ))(=> (and (accp$ sp_mu_comp_rel$ (pair$d (get$ ?v3 )(put$ ?v4 ?v5 )))(fun_app$b (fun_app$cm ?v2 (fun_app$e ?v3 ?v4 ))(out$a ?v5 )))(fun_app$b (fun_app$cm ?v2 (get$ ?v3 ))(put$ ?v4 ?v5 ))))(forall ((?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v4 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (and (accp$ sp_mu_comp_rel$ (pair$d (get$ ?v3 )(get$a ?v4 )))(forall ((?v5 A$ ))(fun_app$b (fun_app$cm ?v2 (get$ ?v3 ))(fun_app$d ?v4 ?v5 ))))(fun_app$b (fun_app$cm ?v2 (get$ ?v3 ))(get$a ?v4 )))))))(fun_app$b (fun_app$cm ?v2 ?v0 )?v1 ))):named a257 ))
(assert (! (forall ((?v0 A_bool_fun_a_stream_prod_a_stream_bool_fun_fun$ )(?v1 A_bool_fun$ )(?v2 A_stream$ )(?v3 A_stream$ ))(=> (and (forall ((?v4 A_bool_fun_a_stream_a_stream_fun_fun$ )(?v5 A_bool_fun$ )(?v6 A_stream$ )(?v7 A_stream$ ))(=> (and (forall ((?v8 A_bool_fun$ )(?v9 A_stream$ )(?v10 A_stream$ ))(=> (and (= (fun_app$cn (fun_app$co ?v4 ?v8 )?v9 )?v10 )(not (= ?v10 undefined$ )))(fun_app$al (fun_app$cp ?v0 (pair$l ?v8 ?v9 ))?v10 )))(and (= (ite (fun_app$ae ?v5 (shd$a ?v6 ))(fun_app$cn (fun_app$co ?v4 ?v5 )(stl$a ?v6 ))?v6 )?v7 )(not (= ?v7 undefined$ ))))(fun_app$al (fun_app$cp ?v0 (pair$l ?v5 ?v6 ))?v7 )))(and (= (sdrop_while$ ?v1 ?v2 )?v3 )(not (= ?v3 undefined$ ))))(fun_app$al (fun_app$cp ?v0 (pair$l ?v1 ?v2 ))?v3 ))):named a258 ))
(assert (! (forall ((?v0 B_bool_fun_b_stream_prod_b_stream_bool_fun_fun$ )(?v1 B_bool_fun$ )(?v2 B_stream$ )(?v3 B_stream$ ))(=> (and (forall ((?v4 B_bool_fun_b_stream_b_stream_fun_fun$ )(?v5 B_bool_fun$ )(?v6 B_stream$ )(?v7 B_stream$ ))(=> (and (forall ((?v8 B_bool_fun$ )(?v9 B_stream$ )(?v10 B_stream$ ))(=> (and (= (fun_app$cq (fun_app$cr ?v4 ?v8 )?v9 )?v10 )(not (= ?v10 undefined$a )))(fun_app$an (fun_app$cs ?v0 (pair$m ?v8 ?v9 ))?v10 )))(and (= (ite (fun_app$ap ?v5 (shd$ ?v6 ))(fun_app$cq (fun_app$cr ?v4 ?v5 )(stl$ ?v6 ))?v6 )?v7 )(not (= ?v7 undefined$a ))))(fun_app$an (fun_app$cs ?v0 (pair$m ?v5 ?v6 ))?v7 )))(and (= (sdrop_while$a ?v1 ?v2 )?v3 )(not (= ?v3 undefined$a ))))(fun_app$an (fun_app$cs ?v0 (pair$m ?v1 ?v2 ))?v3 ))):named a259 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ ))(=> (and (member$ ?v0 ?v1 )(member$ ?v2 (fun_app$bv ?v3 ?v0 )))(member$ ?v2 (supremum$d ?v1 ?v3 )))):named a260 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ ))(=> (and (member$ ?v0 ?v1 )(member$a ?v2 (fun_app$bx ?v3 ?v0 )))(member$a ?v2 (supremum$f ?v1 ?v3 )))):named a261 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ ))(=> (and (member$a ?v0 ?v1 )(member$ ?v2 (fun_app$bw ?v3 ?v0 )))(member$ ?v2 (supremum$e ?v1 ?v3 )))):named a262 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu$ )(?v3 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ ))(=> (and (member$a ?v0 ?v1 )(member$a ?v2 (fun_app$by ?v3 ?v0 )))(member$a ?v2 (supremum$g ?v1 ?v3 )))):named a263 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ ))(= (member$ ?v0 (supremum$d ?v1 ?v2 ))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v1 )(member$ ?v0 (fun_app$bv ?v2 ?v3 )))))):named a264 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ ))(= (member$ ?v0 (supremum$e ?v1 ?v2 ))(exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v1 )(member$ ?v0 (fun_app$bw ?v2 ?v3 )))))):named a265 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ ))(= (member$a ?v0 (supremum$f ?v1 ?v2 ))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v1 )(member$a ?v0 (fun_app$bx ?v2 ?v3 )))))):named a266 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ ))(= (member$a ?v0 (supremum$g ?v1 ?v2 ))(exists ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v1 )(member$a ?v0 (fun_app$by ?v2 ?v3 )))))):named a267 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (accp$ sp_mu_comp_rel$ (pair$d (get$ ?v0 )(get$a ?v1 )))(= (sp_mu_comp$ (get$ ?v0 )(get$a ?v1 ))(get$b (uuc$ ?v0 ?v1 ))))):named a268 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ ))(=> (and (member$ ?v0 (supremum$d ?v1 ?v2 ))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (member$ ?v3 ?v1 )(member$ ?v0 (fun_app$bv ?v2 ?v3 )))false )))false )):named a269 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_set_fun$ ))(=> (and (member$ ?v0 (supremum$e ?v1 ?v2 ))(forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (member$a ?v3 ?v1 )(member$ ?v0 (fun_app$bw ?v2 ?v3 )))false )))false )):named a270 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ ))(=> (and (member$a ?v0 (supremum$f ?v1 ?v2 ))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (member$ ?v3 ?v1 )(member$a ?v0 (fun_app$bx ?v2 ?v3 )))false )))false )):named a271 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_set_fun$ ))(=> (and (member$a ?v0 (supremum$g ?v1 ?v2 ))(forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (member$a ?v3 ?v1 )(member$a ?v0 (fun_app$by ?v2 ?v3 )))false )))false )):named a272 ))
(assert (! (forall ((?v0 B_stream$ ))(= (shd$ ?v0 )(case_stream$ uud$ ?v0 ))):named a273 ))
(assert (! (forall ((?v0 A_stream$ ))(= (shd$a ?v0 )(case_stream$a uue$ ?v0 ))):named a274 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_set$ ))(= (image$ ?v0 (image$d ?v1 ?v2 ))(image$d (fun_app$f (uuf$ ?v0 )?v1 )?v2 ))):named a275 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A_set$ ))(= (image$c ?v0 (image$e ?v1 ?v2 ))(image$e (fun_app$h (uug$ ?v0 )?v1 )?v2 ))):named a276 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_fun$ )(?v2 C_set$ ))(= (image$d ?v0 (image$f ?v1 ?v2 ))(image$d (fun_app$j (uuh$ ?v0 )?v1 )?v2 ))):named a277 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_fun$ )(?v2 A_set$ ))(= (image$e ?v0 (image$i ?v1 ?v2 ))(image$e (fun_app$l (uui$ ?v0 )?v1 )?v2 ))):named a278 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (collect$b (fun_app$n (fun_app$t (uuj$ ?v0 )?v1 )?v2 ))(image$d ?v0 (collect$ (fun_app$ac (fun_app$ad (uuk$ ?v0 )?v1 )?v2 ))))):named a279 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (collect$b (fun_app$n (fun_app$o (uul$ ?v0 )?v1 )?v2 ))(image$ ?v0 (collect$b (fun_app$n (fun_app$o (uum$ ?v0 )?v1 )?v2 ))))):named a280 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (collect$b (fun_app$n (fun_app$r (uun$ ?v0 )?v1 )?v2 ))(image$b ?v0 (collect$c (fun_app$y (fun_app$z (uuo$ ?v0 )?v1 )?v2 ))))):named a281 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (collect$c (fun_app$p (fun_app$u (uup$ ?v0 )?v1 )?v2 ))(image$e ?v0 (collect$a (fun_app$af (fun_app$ag (uuq$ ?v0 )?v1 )?v2 ))))):named a282 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (collect$c (fun_app$p (fun_app$q (uur$ ?v0 )?v1 )?v2 ))(image$a ?v0 (collect$b (fun_app$v (fun_app$w (uus$ ?v0 )?v1 )?v2 ))))):named a283 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_c_a_c_sp_nu_sp_mu_set$ )(?v2 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (collect$c (fun_app$p (fun_app$s (uut$ ?v0 )?v1 )?v2 ))(image$c ?v0 (collect$c (fun_app$p (fun_app$s (uuu$ ?v0 )?v1 )?v2 ))))):named a284 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_set$ ))(=> (and (member$ ?v0 (image$d ?v1 ?v2 ))(forall ((?v3 C$ ))(=> (and (= ?v0 (fun_app$e ?v1 ?v3 ))(member$b ?v3 ?v2 ))false )))false )):named a285 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (and (member$ ?v0 (image$ ?v1 ?v2 ))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (= ?v0 (fun_app$g ?v1 ?v3 ))(member$ ?v3 ?v2 ))false )))false )):named a286 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_set$ ))(=> (and (member$ ?v0 (image$b ?v1 ?v2 ))(forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (= ?v0 (fun_app$aa ?v1 ?v3 ))(member$a ?v3 ?v2 ))false )))false )):named a287 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A_set$ ))(=> (and (member$a ?v0 (image$e ?v1 ?v2 ))(forall ((?v3 A$ ))(=> (and (= ?v0 (fun_app$d ?v1 ?v3 ))(member$c ?v3 ?v2 ))false )))false )):named a288 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (and (member$a ?v0 (image$a ?v1 ?v2 ))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (= ?v0 (fun_app$x ?v1 ?v3 ))(member$ ?v3 ?v2 ))false )))false )):named a289 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A_c_a_c_sp_nu_sp_mu_set$ ))(=> (and (member$a ?v0 (image$c ?v1 ?v2 ))(forall ((?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (= ?v0 (fun_app$i ?v1 ?v3 ))(member$a ?v3 ?v2 ))false )))false )):named a290 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 A_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (member$ ?v0 (image$k ?v1 top$a ))(forall ((?v2 A$ ))(=> (= ?v0 (fun_app$av ?v1 ?v2 ))false )))false )):named a291 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (and (member$a ?v0 (image$e ?v1 top$a ))(forall ((?v2 A$ ))(=> (= ?v0 (fun_app$d ?v1 ?v2 ))false )))false )):named a292 ))
(check-sat )
(get-unsat-core )
