(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_stream_fun$ 0 )
(declare-sort A_stream_a_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_a_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_bool_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_stream_set$ 0 )
(declare-sort A_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_a_stream_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_stream_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_stream_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_stream_a_stream_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun shd$a (A_stream_stream$)A_stream$)
(declare-fun stl$a (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$a (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$b (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$b (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$b (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun p$ ()A_bool_fun$ )
(declare-fun x$ ()A$ )
(declare-fun uu$ (A_stream_stream_set$ )A_stream_stream_bool_fun$ )
(declare-fun x$a ()A_stream$ )
(declare-fun suc$ (Nat$ )Nat$ )
(declare-fun uua$ (A_stream_set$ )A_stream_bool_fun$ )
(declare-fun uub$ (A_set$ )A_bool_fun$ )
(declare-fun uuc$ ()A_stream_a_stream_bool_fun_fun$ )
(declare-fun uud$ ()A_stream_stream_a_stream_stream_bool_fun_fun$ )
(declare-fun uue$ ()A_a_bool_fun_fun$ )
(declare-fun uuf$ ()Bool_bool_fun$ )
(declare-fun comp$ (Bool_bool_fun$ )A_bool_fun_a_bool_fun_fun$ )
(declare-fun smap$ (A_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun snth$ (A_stream_stream$ Nat$ )A_stream$ )
(declare-fun sset$ (A_stream_stream_stream$ )A_stream_stream_set$ )
(declare-fun sdrop$ (Nat$ )A_stream_a_stream_fun$ )
(declare-fun smap$a (A_stream_a_fun$ A_stream_stream$ )A_stream$ )
(declare-fun smap$b (A_stream_a_stream_fun$ A_stream_stream$ )A_stream_stream$ )
(declare-fun smap$c (A_a_fun$ )A_stream_a_stream_fun$ )
(declare-fun snth$a (A_stream$ Nat$ )A$ )
(declare-fun snth$b (A_stream_stream_stream$ Nat$ )A_stream_stream$ )
(declare-fun sset$a (A_stream_stream$ )A_stream_set$ )
(declare-fun sset$b (A_stream$ )A_set$ )
(declare-fun member$ (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun collect$ (A_bool_fun$ )A_set$ )
(declare-fun fun_app$ (Bool_bool_fun$ Bool )Bool )
(declare-fun member$a (A_stream$ A_stream_set$ )Bool )
(declare-fun member$b (A$ A_set$ )Bool )
(declare-fun member$c (A_stream_stream_stream$ A_stream_stream_stream_set$ )Bool )
(declare-fun sfilter$ (A_stream_bool_fun$ A_stream_stream$ )A_stream_stream$ )
(declare-fun smember$ (A_stream$ )A_stream_stream_bool_fun$ )
(declare-fun streams$ (A_stream_stream_set$ )A_stream_stream_stream_set$ )
(declare-fun collect$a (A_stream_bool_fun$ )A_stream_set$ )
(declare-fun collect$b (A_stream_stream_bool_fun$ )A_stream_stream_set$ )
(declare-fun fun_app$a (A_stream_stream_bool_fun$ A_stream_stream$ )Bool )
(declare-fun fun_app$b (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun fun_app$c (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$d (A_stream_stream_a_stream_stream_bool_fun_fun$ A_stream_stream$ )A_stream_stream_bool_fun$ )
(declare-fun fun_app$e (A_stream_a_stream_bool_fun_fun$ A_stream$ )A_stream_bool_fun$ )
(declare-fun fun_app$f (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$g (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun fun_app$h (A_stream_stream_stream_bool_fun$ A_stream_stream_stream$ )Bool )
(declare-fun fun_app$i (A_a_stream_fun$ A$ )A_stream$ )
(declare-fun fun_app$j (A_stream_a_fun$ A_stream$ )A$ )
(declare-fun fun_app$k (A_a_fun$ A$ )A$ )
(declare-fun fun_app$l (A_stream_a_stream_stream_bool_fun_fun$ A_stream$ )A_stream_stream_bool_fun$ )
(declare-fun fun_app$m (A_a_stream_bool_fun_fun$ A$ )A_stream_bool_fun$ )
(declare-fun fun_app$n (A_stream_stream_a_stream_bool_fun_fun$ A_stream_stream$ )A_stream_bool_fun$ )
(declare-fun fun_app$o (A_stream_a_bool_fun_fun$ A_stream$ )A_bool_fun$ )
(declare-fun fun_app$p (A_stream_stream_a_stream_stream_stream_bool_fun_fun$ A_stream_stream$ )A_stream_stream_stream_bool_fun$ )
(declare-fun fun_app$q (A_stream_stream_stream_a_stream_stream_stream_bool_fun_fun$ A_stream_stream_stream$ )A_stream_stream_stream_bool_fun$ )
(declare-fun fun_app$r (A_stream_stream_stream_a_stream_bool_fun_fun$ A_stream_stream_stream$ )A_stream_bool_fun$ )
(declare-fun fun_app$s (A_stream_stream_a_bool_fun_fun$ A_stream_stream$ )A_bool_fun$ )
(declare-fun fun_app$t (A_stream_stream_stream_a_stream_stream_bool_fun_fun$ A_stream_stream_stream$ )A_stream_stream_bool_fun$ )
(declare-fun fun_app$u (A_stream_a_stream_stream_stream_bool_fun_fun$ A_stream$ )A_stream_stream_stream_bool_fun$ )
(declare-fun fun_app$v (A_a_stream_stream_bool_fun_fun$ A$ )A_stream_stream_bool_fun$ )
(declare-fun fun_app$w (A_bool_fun_a_bool_fun_fun$ A_bool_fun$ )A_bool_fun$ )
(declare-fun sfilter$a (A_bool_fun$ )A_stream_a_stream_fun$ )
(declare-fun smember$a (A$ )A_stream_bool_fun$ )
(declare-fun smember$b (A_stream_stream$ )A_stream_stream_stream_bool_fun$ )
(declare-fun streams$a (A_stream_set$ )A_stream_stream_set$ )
(declare-fun streams$b (A_set$ )A_stream_set$ )
(declare-fun streamsp$ (A_stream_bool_fun$ )A_stream_stream_bool_fun$ )
(declare-fun streamsp$a (A_bool_fun$ )A_stream_bool_fun$ )
(declare-fun stream_all$ (A_bool_fun$ )A_stream_bool_fun$ )
(declare-fun pred_stream$ (A_stream_bool_fun$ )A_stream_stream_bool_fun$ )
(declare-fun sdrop_while$ (A_stream_bool_fun$ A_stream_stream$ )A_stream_stream$ )
(declare-fun stream_all$a (A_stream_bool_fun$ )A_stream_stream_bool_fun$ )
(declare-fun stream_all2$ (A_a_stream_bool_fun_fun$ )A_stream_a_stream_stream_bool_fun_fun$ )
(declare-fun pred_stream$a (A_bool_fun$ )A_stream_bool_fun$ )
(declare-fun sdrop_while$a (A_bool_fun$ )A_stream_a_stream_fun$ )
(declare-fun stream_all2$a (A_stream_a_bool_fun_fun$ )A_stream_stream_a_stream_bool_fun_fun$ )
(declare-fun stream_all2$b (A_stream_a_stream_bool_fun_fun$ )A_stream_stream_a_stream_stream_bool_fun_fun$ )
(declare-fun stream_all2$c (A_a_bool_fun_fun$ )A_stream_a_stream_bool_fun_fun$ )
(declare-fun stream_all2$d (A_stream_stream_a_stream_stream_bool_fun_fun$ )A_stream_stream_stream_a_stream_stream_stream_bool_fun_fun$ )
(declare-fun stream_all2$e (A_stream_stream_a_bool_fun_fun$ )A_stream_stream_stream_a_stream_bool_fun_fun$ )
(declare-fun stream_all2$f (A_stream_stream_a_stream_bool_fun_fun$ )A_stream_stream_stream_a_stream_stream_bool_fun_fun$ )
(declare-fun stream_all2$g (A_a_stream_stream_bool_fun_fun$ )A_stream_a_stream_stream_stream_bool_fun_fun$ )
(declare-fun stream_all2$h (A_stream_a_stream_stream_bool_fun_fun$ )A_stream_stream_a_stream_stream_stream_bool_fun_fun$ )
(assert (! (forall ((?v0 Bool ))(! (= (fun_app$ uuf$ ?v0 )(not ?v0 )):pattern ((fun_app$ uuf$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_stream_stream_set$ )(?v1 A_stream_stream$ ))(! (= (fun_app$a (uu$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$a (uu$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_stream_set$ )(?v1 A_stream$ ))(! (= (fun_app$b (uua$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$b (uua$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A$ ))(! (= (fun_app$c (uub$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$c (uub$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ ))(! (= (fun_app$a (fun_app$d uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$a (fun_app$d uud$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(! (= (fun_app$b (fun_app$e uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$e uuc$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$c (fun_app$f uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$c (fun_app$f uue$ ?v0 )?v1 )))):named a6 ))
(assert (! (not (= (fun_app$b (stream_all$ p$ )(sCons$ x$ x$a ))(and (fun_app$c p$ x$ )(fun_app$b (stream_all$ p$ )x$a )))):named a7 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ ))(= (= (sCons$a ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a8 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a9 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(=> (forall ((?v1 A_stream$ )(?v2 A_stream_stream$ ))(=> (= ?v0 (sCons$a ?v1 ?v2 ))false ))false )):named a10 ))
(assert (! (forall ((?v0 A_stream$ ))(=> (forall ((?v1 A$ )(?v2 A_stream$ ))(=> (= ?v0 (sCons$ ?v1 ?v2 ))false ))false )):named a11 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(! (= (fun_app$a (smember$ ?v0 )(sCons$a ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$a (smember$ ?v0 )?v2 ))):pattern ((fun_app$a (smember$ ?v0 )(sCons$a ?v1 ?v2 ))))):named a12 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (fun_app$b (smember$a ?v0 )(sCons$ ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$b (smember$a ?v0 )?v2 ))):pattern ((fun_app$b (smember$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a13 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(! (= (fun_app$a (pred_stream$ ?v0 )(sCons$a ?v1 ?v2 ))(and (fun_app$b ?v0 ?v1 )(fun_app$a (pred_stream$ ?v0 )?v2 ))):pattern ((fun_app$a (pred_stream$ ?v0 )(sCons$a ?v1 ?v2 ))))):named a14 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (fun_app$b (pred_stream$a ?v0 )(sCons$ ?v1 ?v2 ))(and (fun_app$c ?v0 ?v1 )(fun_app$b (pred_stream$a ?v0 )?v2 ))):pattern ((fun_app$b (pred_stream$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a15 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_stream$ ))(= (fun_app$a (streamsp$ ?v0 )?v1 )(exists ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(and (= ?v1 (sCons$a ?v2 ?v3 ))(and (fun_app$b ?v0 ?v2 )(fun_app$a (streamsp$ ?v0 )?v3 )))))):named a16 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (fun_app$b (streamsp$a ?v0 )?v1 )(exists ((?v2 A$ )(?v3 A_stream$ ))(and (= ?v1 (sCons$ ?v2 ?v3 ))(and (fun_app$c ?v0 ?v2 )(fun_app$b (streamsp$a ?v0 )?v3 )))))):named a17 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_stream$ ))(=> (and (fun_app$a (streamsp$ ?v0 )?v1 )(forall ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(=> (and (= ?v1 (sCons$a ?v2 ?v3 ))(and (fun_app$b ?v0 ?v2 )(fun_app$a (streamsp$ ?v0 )?v3 )))false )))false )):named a18 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(=> (and (fun_app$b (streamsp$a ?v0 )?v1 )(forall ((?v2 A$ )(?v3 A_stream$ ))(=> (and (= ?v1 (sCons$ ?v2 ?v3 ))(and (fun_app$c ?v0 ?v2 )(fun_app$b (streamsp$a ?v0 )?v3 )))false )))false )):named a19 ))
(assert (! (forall ((?v0 A_stream_stream_bool_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_bool_fun$ ))(=> (and (fun_app$a ?v0 ?v1 )(forall ((?v3 A_stream_stream$ ))(=> (fun_app$a ?v0 ?v3 )(exists ((?v4 A_stream$ )(?v5 A_stream_stream$ ))(and (= ?v3 (sCons$a ?v4 ?v5 ))(and (fun_app$b ?v2 ?v4 )(or (fun_app$a ?v0 ?v5 )(fun_app$a (streamsp$ ?v2 )?v5 ))))))))(fun_app$a (streamsp$ ?v2 )?v1 ))):named a20 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_bool_fun$ ))(=> (and (fun_app$b ?v0 ?v1 )(forall ((?v3 A_stream$ ))(=> (fun_app$b ?v0 ?v3 )(exists ((?v4 A$ )(?v5 A_stream$ ))(and (= ?v3 (sCons$ ?v4 ?v5 ))(and (fun_app$c ?v2 ?v4 )(or (fun_app$b ?v0 ?v5 )(fun_app$b (streamsp$a ?v2 )?v5 ))))))))(fun_app$b (streamsp$a ?v2 )?v1 ))):named a21 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(! (= (sfilter$ ?v0 (sCons$a ?v1 ?v2 ))(ite (fun_app$b ?v0 ?v1 )(sCons$a ?v1 (sfilter$ ?v0 ?v2 ))(sfilter$ ?v0 ?v2 ))):pattern ((sfilter$ ?v0 (sCons$a ?v1 ?v2 ))))):named a22 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (fun_app$g (sfilter$a ?v0 )(sCons$ ?v1 ?v2 ))(ite (fun_app$c ?v0 ?v1 )(sCons$ ?v1 (fun_app$g (sfilter$a ?v0 )?v2 ))(fun_app$g (sfilter$a ?v0 )?v2 ))):pattern ((fun_app$g (sfilter$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a23 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_stream$ ))(= (fun_app$a (stream_all$a ?v0 )?v1 )(forall ((?v2 Nat$ ))(fun_app$b ?v0 (snth$ ?v1 ?v2 ))))):named a24 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (fun_app$b (stream_all$ ?v0 )?v1 )(forall ((?v2 Nat$ ))(fun_app$c ?v0 (snth$a ?v1 ?v2 ))))):named a25 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(! (= (sdrop_while$ ?v0 (sCons$a ?v1 ?v2 ))(ite (fun_app$b ?v0 ?v1 )(sdrop_while$ ?v0 ?v2 )(sCons$a ?v1 ?v2 ))):pattern ((sdrop_while$ ?v0 (sCons$a ?v1 ?v2 ))))):named a26 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (fun_app$g (sdrop_while$a ?v0 )(sCons$ ?v1 ?v2 ))(ite (fun_app$c ?v0 ?v1 )(fun_app$g (sdrop_while$a ?v0 )?v2 )(sCons$ ?v1 ?v2 ))):pattern ((fun_app$g (sdrop_while$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a27 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_set$ ))(= (member$c (sCons$b ?v0 ?v1 )(streams$ ?v2 ))(and (member$ ?v0 ?v2 )(member$c ?v1 (streams$ ?v2 ))))):named a28 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_set$ ))(= (member$ (sCons$a ?v0 ?v1 )(streams$a ?v2 ))(and (member$a ?v0 ?v2 )(member$ ?v1 (streams$a ?v2 ))))):named a29 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A_set$ ))(= (member$a (sCons$ ?v0 ?v1 )(streams$b ?v2 ))(and (member$b ?v0 ?v2 )(member$a ?v1 (streams$b ?v2 ))))):named a30 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(= (member$c ?v0 (streams$ ?v1 ))(exists ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$c ?v3 (streams$ ?v1 ))))))):named a31 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(= (member$ ?v0 (streams$a ?v1 ))(exists ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$ ?v3 (streams$a ?v1 ))))))):named a32 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(= (member$a ?v0 (streams$b ?v1 ))(exists ((?v2 A$ )(?v3 A_stream$ ))(and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$a ?v3 (streams$b ?v1 ))))))):named a33 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(= (member$c ?v0 (streams$ ?v1 ))(forall ((?v2 Nat$ ))(member$ (snth$b ?v0 ?v2 )?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(= (member$ ?v0 (streams$a ?v1 ))(forall ((?v2 Nat$ ))(member$a (snth$ ?v0 ?v2 )?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(= (member$a ?v0 (streams$b ?v1 ))(forall ((?v2 Nat$ ))(member$b (snth$a ?v0 ?v2 )?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ )(?v2 Nat$ ))(=> (member$c ?v0 (streams$ ?v1 ))(member$ (snth$b ?v0 ?v2 )?v1 ))):named a37 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ )(?v2 Nat$ ))(=> (member$ ?v0 (streams$a ?v1 ))(member$a (snth$ ?v0 ?v2 )?v1 ))):named a38 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 Nat$ ))(=> (member$a ?v0 (streams$b ?v1 ))(member$b (snth$a ?v0 ?v2 )?v1 ))):named a39 ))
(assert (! (forall ((?v0 A_stream_stream_stream_bool_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_set$ ))(=> (and (fun_app$h ?v0 ?v1 )(forall ((?v3 A_stream_stream_stream$ ))(=> (fun_app$h ?v0 ?v3 )(exists ((?v4 A_stream_stream$ )(?v5 A_stream_stream_stream$ ))(and (= ?v3 (sCons$b ?v4 ?v5 ))(and (member$ ?v4 ?v2 )(or (fun_app$h ?v0 ?v5 )(member$c ?v5 (streams$ ?v2 )))))))))(member$c ?v1 (streams$ ?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_stream_stream_bool_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_set$ ))(=> (and (fun_app$a ?v0 ?v1 )(forall ((?v3 A_stream_stream$ ))(=> (fun_app$a ?v0 ?v3 )(exists ((?v4 A_stream$ )(?v5 A_stream_stream$ ))(and (= ?v3 (sCons$a ?v4 ?v5 ))(and (member$a ?v4 ?v2 )(or (fun_app$a ?v0 ?v5 )(member$ ?v5 (streams$a ?v2 )))))))))(member$ ?v1 (streams$a ?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_set$ ))(=> (and (fun_app$b ?v0 ?v1 )(forall ((?v3 A_stream$ ))(=> (fun_app$b ?v0 ?v3 )(exists ((?v4 A$ )(?v5 A_stream$ ))(and (= ?v3 (sCons$ ?v4 ?v5 ))(and (member$b ?v4 ?v2 )(or (fun_app$b ?v0 ?v5 )(member$a ?v5 (streams$b ?v2 )))))))))(member$a ?v1 (streams$b ?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (and (member$c ?v0 (streams$ ?v1 ))(forall ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(=> (and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$c ?v3 (streams$ ?v1 ))))false )))false )):named a43 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$ ?v0 (streams$a ?v1 ))(forall ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(=> (and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$ ?v3 (streams$a ?v1 ))))false )))false )):named a44 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$a ?v0 (streams$b ?v1 ))(forall ((?v2 A$ )(?v3 A_stream$ ))(=> (and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$a ?v3 (streams$b ?v1 ))))false )))false )):named a45 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 Nat$ ))(! (= (snth$ (sCons$a ?v0 ?v1 )(suc$ ?v2 ))(snth$ ?v1 ?v2 )):pattern ((snth$ (sCons$a ?v0 ?v1 )(suc$ ?v2 ))))):named a46 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 Nat$ ))(! (= (snth$a (sCons$ ?v0 ?v1 )(suc$ ?v2 ))(snth$a ?v1 ?v2 )):pattern ((snth$a (sCons$ ?v0 ?v1 )(suc$ ?v2 ))))):named a47 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ ))(! (= (fun_app$h (smember$b ?v0 )?v1 )(member$ ?v0 (sset$ ?v1 ))):pattern ((fun_app$h (smember$b ?v0 )?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ ))(! (= (fun_app$a (smember$ ?v0 )?v1 )(member$a ?v0 (sset$a ?v1 ))):pattern ((fun_app$a (smember$ ?v0 )?v1 )))):named a49 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(! (= (fun_app$b (smember$a ?v0 )?v1 )(member$b ?v0 (sset$b ?v1 ))):pattern ((fun_app$b (smember$a ?v0 )?v1 )))):named a50 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ )(?v2 Nat$ ))(= (snth$ (smap$ ?v0 ?v1 )?v2 )(fun_app$i ?v0 (snth$a ?v1 ?v2 )))):named a51 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ )(?v2 Nat$ ))(= (snth$a (smap$a ?v0 ?v1 )?v2 )(fun_app$j ?v0 (snth$ ?v1 ?v2 )))):named a52 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ )(?v2 Nat$ ))(= (snth$ (smap$b ?v0 ?v1 )?v2 )(fun_app$g ?v0 (snth$ ?v1 ?v2 )))):named a53 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ )(?v2 Nat$ ))(= (snth$a (fun_app$g (smap$c ?v0 )?v1 )?v2 )(fun_app$k ?v0 (snth$a ?v1 ?v2 )))):named a54 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 Nat$ ))(member$ (snth$b ?v0 ?v1 )(sset$ ?v0 ))):named a55 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 Nat$ ))(member$a (snth$ ?v0 ?v1 )(sset$a ?v0 ))):named a56 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 Nat$ ))(member$b (snth$a ?v0 ?v1 )(sset$b ?v0 ))):named a57 ))
(assert (! (forall ((?v0 A_a_stream_bool_fun_fun$ )(?v1 A$ )(?v2 A_stream$ )(?v3 A_stream$ )(?v4 A_stream_stream$ ))(! (= (fun_app$a (fun_app$l (stream_all2$ ?v0 )(sCons$ ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))(and (fun_app$b (fun_app$m ?v0 ?v1 )?v3 )(fun_app$a (fun_app$l (stream_all2$ ?v0 )?v2 )?v4 ))):pattern ((fun_app$a (fun_app$l (stream_all2$ ?v0 )(sCons$ ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))))):named a58 ))
(assert (! (forall ((?v0 A_stream_a_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ )(?v3 A$ )(?v4 A_stream$ ))(! (= (fun_app$b (fun_app$n (stream_all2$a ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))(and (fun_app$c (fun_app$o ?v0 ?v1 )?v3 )(fun_app$b (fun_app$n (stream_all2$a ?v0 )?v2 )?v4 ))):pattern ((fun_app$b (fun_app$n (stream_all2$a ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))))):named a59 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ )(?v3 A_stream$ )(?v4 A_stream_stream$ ))(! (= (fun_app$a (fun_app$d (stream_all2$b ?v0 )(sCons$a ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))(and (fun_app$b (fun_app$e ?v0 ?v1 )?v3 )(fun_app$a (fun_app$d (stream_all2$b ?v0 )?v2 )?v4 ))):pattern ((fun_app$a (fun_app$d (stream_all2$b ?v0 )(sCons$a ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))))):named a60 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_stream$ )(?v3 A$ )(?v4 A_stream$ ))(! (= (fun_app$b (fun_app$e (stream_all2$c ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))(and (fun_app$c (fun_app$f ?v0 ?v1 )?v3 )(fun_app$b (fun_app$e (stream_all2$c ?v0 )?v2 )?v4 ))):pattern ((fun_app$b (fun_app$e (stream_all2$c ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))))):named a61 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ ))(member$ ?v0 (sset$ (sCons$b ?v0 ?v1 )))):named a62 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ ))(member$a ?v0 (sset$a (sCons$a ?v0 ?v1 )))):named a63 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(member$b ?v0 (sset$b (sCons$ ?v0 ?v1 )))):named a64 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream$ ))(=> (member$ ?v0 (sset$ ?v1 ))(member$ ?v0 (sset$ (sCons$b ?v2 ?v1 ))))):named a65 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream$ ))(=> (member$a ?v0 (sset$a ?v1 ))(member$a ?v0 (sset$a (sCons$a ?v2 ?v1 ))))):named a66 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ ))(=> (member$b ?v0 (sset$b ?v1 ))(member$b ?v0 (sset$b (sCons$ ?v2 ?v1 ))))):named a67 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ ))(=> (and (member$ ?v0 (sset$ ?v1 ))(and (forall ((?v2 A_stream_stream_stream$ ))(=> (= ?v1 (sCons$b ?v0 ?v2 ))false ))(forall ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(=> (and (= ?v1 (sCons$b ?v2 ?v3 ))(member$ ?v0 (sset$ ?v3 )))false ))))false )):named a68 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ ))(=> (and (member$a ?v0 (sset$a ?v1 ))(and (forall ((?v2 A_stream_stream$ ))(=> (= ?v1 (sCons$a ?v0 ?v2 ))false ))(forall ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(=> (and (= ?v1 (sCons$a ?v2 ?v3 ))(member$a ?v0 (sset$a ?v3 )))false ))))false )):named a69 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(=> (and (member$b ?v0 (sset$b ?v1 ))(and (forall ((?v2 A_stream$ ))(=> (= ?v1 (sCons$ ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_stream$ ))(=> (and (= ?v1 (sCons$ ?v2 ?v3 ))(member$b ?v0 (sset$b ?v3 )))false ))))false )):named a70 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_a_stream_stream_stream_bool_fun_fun$ ))(=> (and (member$ ?v0 (sset$ ?v1 ))(and (forall ((?v3 A_stream_stream$ )(?v4 A_stream_stream_stream$ ))(fun_app$h (fun_app$p ?v2 ?v3 )(sCons$b ?v3 ?v4 )))(forall ((?v3 A_stream_stream$ )(?v4 A_stream_stream_stream$ )(?v5 A_stream_stream$ ))(=> (and (member$ ?v5 (sset$ ?v4 ))(fun_app$h (fun_app$p ?v2 ?v5 )?v4 ))(fun_app$h (fun_app$p ?v2 ?v5 )(sCons$b ?v3 ?v4 ))))))(fun_app$h (fun_app$p ?v2 ?v0 )?v1 ))):named a71 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_a_stream_stream_bool_fun_fun$ ))(=> (and (member$a ?v0 (sset$a ?v1 ))(and (forall ((?v3 A_stream$ )(?v4 A_stream_stream$ ))(fun_app$a (fun_app$l ?v2 ?v3 )(sCons$a ?v3 ?v4 )))(forall ((?v3 A_stream$ )(?v4 A_stream_stream$ )(?v5 A_stream$ ))(=> (and (member$a ?v5 (sset$a ?v4 ))(fun_app$a (fun_app$l ?v2 ?v5 )?v4 ))(fun_app$a (fun_app$l ?v2 ?v5 )(sCons$a ?v3 ?v4 ))))))(fun_app$a (fun_app$l ?v2 ?v0 )?v1 ))):named a72 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A_a_stream_bool_fun_fun$ ))(=> (and (member$b ?v0 (sset$b ?v1 ))(and (forall ((?v3 A$ )(?v4 A_stream$ ))(fun_app$b (fun_app$m ?v2 ?v3 )(sCons$ ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_stream$ )(?v5 A$ ))(=> (and (member$b ?v5 (sset$b ?v4 ))(fun_app$b (fun_app$m ?v2 ?v5 )?v4 ))(fun_app$b (fun_app$m ?v2 ?v5 )(sCons$ ?v3 ?v4 ))))))(fun_app$b (fun_app$m ?v2 ?v0 )?v1 ))):named a73 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ ))(= (stl$a (smap$ ?v0 ?v1 ))(smap$ ?v0 (stl$ ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ ))(= (stl$ (smap$a ?v0 ?v1 ))(smap$a ?v0 (stl$a ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ ))(= (stl$a (smap$b ?v0 ?v1 ))(smap$b ?v0 (stl$a ?v1 )))):named a76 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (stl$ (fun_app$g (smap$c ?v0 )?v1 ))(fun_app$g (smap$c ?v0 )(stl$ ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ ))(= (shd$a (smap$ ?v0 ?v1 ))(fun_app$i ?v0 (shd$ ?v1 )))):named a78 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ ))(= (shd$ (smap$a ?v0 ?v1 ))(fun_app$j ?v0 (shd$a ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ ))(= (shd$a (smap$b ?v0 ?v1 ))(fun_app$g ?v0 (shd$a ?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (shd$ (fun_app$g (smap$c ?v0 )?v1 ))(fun_app$k ?v0 (shd$ ?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(= (sCons$a (shd$a ?v0 )(stl$a ?v0 ))?v0 )):named a82 ))
(assert (! (forall ((?v0 A_stream$ ))(= (sCons$ (shd$ ?v0 )(stl$ ?v0 ))?v0 )):named a83 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (smap$a ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= (fun_app$j ?v0 (shd$a ?v1 ))?v2 )(= (smap$a ?v0 (stl$a ?v1 ))?v3 )))):named a84 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ ))(= (= (smap$ ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= (fun_app$i ?v0 (shd$ ?v1 ))?v2 )(= (smap$ ?v0 (stl$ ?v1 ))?v3 )))):named a85 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ ))(= (= (smap$b ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= (fun_app$g ?v0 (shd$a ?v1 ))?v2 )(= (smap$b ?v0 (stl$a ?v1 ))?v3 )))):named a86 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (fun_app$g (smap$c ?v0 )?v1 )(sCons$ ?v2 ?v3 ))(and (= (fun_app$k ?v0 (shd$ ?v1 ))?v2 )(= (fun_app$g (smap$c ?v0 )(stl$ ?v1 ))?v3 )))):named a87 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ ))(member$ (shd$b ?v0 )(sset$ ?v0 ))):named a88 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(member$a (shd$a ?v0 )(sset$a ?v0 ))):named a89 ))
(assert (! (forall ((?v0 A_stream$ ))(member$b (shd$ ?v0 )(sset$b ?v0 ))):named a90 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ ))(=> (and (fun_app$a (fun_app$d ?v0 ?v1 )?v2 )(forall ((?v3 A_stream_stream$ )(?v4 A_stream_stream$ ))(=> (fun_app$a (fun_app$d ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(fun_app$a (fun_app$d ?v0 (stl$a ?v3 ))(stl$a ?v4 ))))))(= ?v1 ?v2 ))):named a91 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$b (fun_app$e ?v0 ?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream$ ))(=> (fun_app$b (fun_app$e ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(fun_app$b (fun_app$e ?v0 (stl$ ?v3 ))(stl$ ?v4 ))))))(= ?v1 ?v2 ))):named a92 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ ))(=> (and (fun_app$a (fun_app$d ?v0 ?v1 )?v2 )(forall ((?v3 A_stream_stream$ )(?v4 A_stream_stream$ ))(=> (fun_app$a (fun_app$d ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(or (fun_app$a (fun_app$d ?v0 (stl$a ?v3 ))(stl$a ?v4 ))(= (stl$a ?v3 )(stl$a ?v4 )))))))(= ?v1 ?v2 ))):named a93 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$b (fun_app$e ?v0 ?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream$ ))(=> (fun_app$b (fun_app$e ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(or (fun_app$b (fun_app$e ?v0 (stl$ ?v3 ))(stl$ ?v4 ))(= (stl$ ?v3 )(stl$ ?v4 )))))))(= ?v1 ?v2 ))):named a94 ))
(assert (! (forall ((?v0 A_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ )(?v3 A_a_stream_bool_fun_fun$ ))(=> (and (fun_app$a (fun_app$l ?v0 ?v1 )?v2 )(forall ((?v4 A_stream$ )(?v5 A_stream_stream$ ))(=> (fun_app$a (fun_app$l ?v0 ?v4 )?v5 )(and (fun_app$b (fun_app$m ?v3 (shd$ ?v4 ))(shd$a ?v5 ))(fun_app$a (fun_app$l ?v0 (stl$ ?v4 ))(stl$a ?v5 ))))))(fun_app$a (fun_app$l (stream_all2$ ?v3 )?v1 )?v2 ))):named a95 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$n ?v0 ?v1 )?v2 )(forall ((?v4 A_stream_stream$ )(?v5 A_stream$ ))(=> (fun_app$b (fun_app$n ?v0 ?v4 )?v5 )(and (fun_app$c (fun_app$o ?v3 (shd$a ?v4 ))(shd$ ?v5 ))(fun_app$b (fun_app$n ?v0 (stl$a ?v4 ))(stl$ ?v5 ))))))(fun_app$b (fun_app$n (stream_all2$a ?v3 )?v1 )?v2 ))):named a96 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ )(?v3 A_stream_a_stream_bool_fun_fun$ ))(=> (and (fun_app$a (fun_app$d ?v0 ?v1 )?v2 )(forall ((?v4 A_stream_stream$ )(?v5 A_stream_stream$ ))(=> (fun_app$a (fun_app$d ?v0 ?v4 )?v5 )(and (fun_app$b (fun_app$e ?v3 (shd$a ?v4 ))(shd$a ?v5 ))(fun_app$a (fun_app$d ?v0 (stl$a ?v4 ))(stl$a ?v5 ))))))(fun_app$a (fun_app$d (stream_all2$b ?v3 )?v1 )?v2 ))):named a97 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$e ?v0 ?v1 )?v2 )(forall ((?v4 A_stream$ )(?v5 A_stream$ ))(=> (fun_app$b (fun_app$e ?v0 ?v4 )?v5 )(and (fun_app$c (fun_app$f ?v3 (shd$ ?v4 ))(shd$ ?v5 ))(fun_app$b (fun_app$e ?v0 (stl$ ?v4 ))(stl$ ?v5 ))))))(fun_app$b (fun_app$e (stream_all2$c ?v3 )?v1 )?v2 ))):named a98 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_a_stream_stream_stream_bool_fun_fun$ ))(=> (and (member$ ?v0 (sset$ ?v1 ))(and (forall ((?v3 A_stream_stream_stream$ ))(fun_app$h (fun_app$p ?v2 (shd$b ?v3 ))?v3 ))(forall ((?v3 A_stream_stream_stream$ )(?v4 A_stream_stream$ ))(=> (and (member$ ?v4 (sset$ (stl$b ?v3 )))(fun_app$h (fun_app$p ?v2 ?v4 )(stl$b ?v3 )))(fun_app$h (fun_app$p ?v2 ?v4 )?v3 )))))(fun_app$h (fun_app$p ?v2 ?v0 )?v1 ))):named a99 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_a_stream_stream_bool_fun_fun$ ))(=> (and (member$a ?v0 (sset$a ?v1 ))(and (forall ((?v3 A_stream_stream$ ))(fun_app$a (fun_app$l ?v2 (shd$a ?v3 ))?v3 ))(forall ((?v3 A_stream_stream$ )(?v4 A_stream$ ))(=> (and (member$a ?v4 (sset$a (stl$a ?v3 )))(fun_app$a (fun_app$l ?v2 ?v4 )(stl$a ?v3 )))(fun_app$a (fun_app$l ?v2 ?v4 )?v3 )))))(fun_app$a (fun_app$l ?v2 ?v0 )?v1 ))):named a100 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A_a_stream_bool_fun_fun$ ))(=> (and (member$b ?v0 (sset$b ?v1 ))(and (forall ((?v3 A_stream$ ))(fun_app$b (fun_app$m ?v2 (shd$ ?v3 ))?v3 ))(forall ((?v3 A_stream$ )(?v4 A$ ))(=> (and (member$b ?v4 (sset$b (stl$ ?v3 )))(fun_app$b (fun_app$m ?v2 ?v4 )(stl$ ?v3 )))(fun_app$b (fun_app$m ?v2 ?v4 )?v3 )))))(fun_app$b (fun_app$m ?v2 ?v0 )?v1 ))):named a101 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ ))(=> (member$ ?v0 (sset$ (stl$b ?v1 )))(member$ ?v0 (sset$ ?v1 )))):named a102 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ ))(=> (member$a ?v0 (sset$a (stl$a ?v1 )))(member$a ?v0 (sset$a ?v1 )))):named a103 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(=> (member$b ?v0 (sset$b (stl$ ?v1 )))(member$b ?v0 (sset$b ?v1 )))):named a104 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ ))(=> (and (= (shd$a ?v0 )(shd$a ?v1 ))(= (stl$a ?v0 )(stl$a ?v1 )))(= ?v0 ?v1 ))):named a105 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(=> (and (= (shd$ ?v0 )(shd$ ?v1 ))(= (stl$ ?v0 )(stl$ ?v1 )))(= ?v0 ?v1 ))):named a106 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ )(?v2 A_a_stream_fun$ )(?v3 A_a_stream_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$b ?v4 (sset$b ?v1 ))(= (fun_app$i ?v2 ?v4 )(fun_app$i ?v3 ?v4 )))))(= (smap$ ?v2 ?v0 )(smap$ ?v3 ?v1 )))):named a107 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_a_fun$ )(?v3 A_stream_a_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A_stream$ ))(=> (member$a ?v4 (sset$a ?v1 ))(= (fun_app$j ?v2 ?v4 )(fun_app$j ?v3 ?v4 )))))(= (smap$a ?v2 ?v0 )(smap$a ?v3 ?v1 )))):named a108 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A_stream$ ))(=> (member$a ?v4 (sset$a ?v1 ))(= (fun_app$g ?v2 ?v4 )(fun_app$g ?v3 ?v4 )))))(= (smap$b ?v2 ?v0 )(smap$b ?v3 ?v1 )))):named a109 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$b ?v4 (sset$b ?v1 ))(= (fun_app$k ?v2 ?v4 )(fun_app$k ?v3 ?v4 )))))(= (fun_app$g (smap$c ?v2 )?v0 )(fun_app$g (smap$c ?v3 )?v1 )))):named a110 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_stream$ )(?v3 A_stream_stream_a_stream_stream_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$q (stream_all2$d ?v0 )?v1 )?v2 )(forall ((?v4 A_stream_stream$ )(?v5 A_stream_stream$ ))(=> (and (member$ ?v4 (sset$ ?v1 ))(and (member$ ?v5 (sset$ ?v2 ))(fun_app$a (fun_app$d ?v0 ?v4 )?v5 )))(fun_app$a (fun_app$d ?v3 ?v4 )?v5 ))))(fun_app$h (fun_app$q (stream_all2$d ?v3 )?v1 )?v2 ))):named a111 ))
(assert (! (forall ((?v0 A_stream_stream_a_bool_fun_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$r (stream_all2$e ?v0 )?v1 )?v2 )(forall ((?v4 A_stream_stream$ )(?v5 A$ ))(=> (and (member$ ?v4 (sset$ ?v1 ))(and (member$b ?v5 (sset$b ?v2 ))(fun_app$c (fun_app$s ?v0 ?v4 )?v5 )))(fun_app$c (fun_app$s ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$r (stream_all2$e ?v3 )?v1 )?v2 ))):named a112 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_bool_fun_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream$ )(?v3 A_stream_stream_a_stream_bool_fun_fun$ ))(=> (and (fun_app$a (fun_app$t (stream_all2$f ?v0 )?v1 )?v2 )(forall ((?v4 A_stream_stream$ )(?v5 A_stream$ ))(=> (and (member$ ?v4 (sset$ ?v1 ))(and (member$a ?v5 (sset$a ?v2 ))(fun_app$b (fun_app$n ?v0 ?v4 )?v5 )))(fun_app$b (fun_app$n ?v3 ?v4 )?v5 ))))(fun_app$a (fun_app$t (stream_all2$f ?v3 )?v1 )?v2 ))):named a113 ))
(assert (! (forall ((?v0 A_a_stream_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream_stream$ )(?v3 A_a_stream_stream_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$u (stream_all2$g ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A_stream_stream$ ))(=> (and (member$b ?v4 (sset$b ?v1 ))(and (member$ ?v5 (sset$ ?v2 ))(fun_app$a (fun_app$v ?v0 ?v4 )?v5 )))(fun_app$a (fun_app$v ?v3 ?v4 )?v5 ))))(fun_app$h (fun_app$u (stream_all2$g ?v3 )?v1 )?v2 ))):named a114 ))
(assert (! (forall ((?v0 A_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream_stream$ )(?v3 A_stream_a_stream_stream_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$p (stream_all2$h ?v0 )?v1 )?v2 )(forall ((?v4 A_stream$ )(?v5 A_stream_stream$ ))(=> (and (member$a ?v4 (sset$a ?v1 ))(and (member$ ?v5 (sset$ ?v2 ))(fun_app$a (fun_app$l ?v0 ?v4 )?v5 )))(fun_app$a (fun_app$l ?v3 ?v4 )?v5 ))))(fun_app$h (fun_app$p (stream_all2$h ?v3 )?v1 )?v2 ))):named a115 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ )(?v3 A_stream_a_stream_bool_fun_fun$ ))(=> (and (fun_app$a (fun_app$d (stream_all2$b ?v0 )?v1 )?v2 )(forall ((?v4 A_stream$ )(?v5 A_stream$ ))(=> (and (member$a ?v4 (sset$a ?v1 ))(and (member$a ?v5 (sset$a ?v2 ))(fun_app$b (fun_app$e ?v0 ?v4 )?v5 )))(fun_app$b (fun_app$e ?v3 ?v4 )?v5 ))))(fun_app$a (fun_app$d (stream_all2$b ?v3 )?v1 )?v2 ))):named a116 ))
(assert (! (forall ((?v0 A_stream_a_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$n (stream_all2$a ?v0 )?v1 )?v2 )(forall ((?v4 A_stream$ )(?v5 A$ ))(=> (and (member$a ?v4 (sset$a ?v1 ))(and (member$b ?v5 (sset$b ?v2 ))(fun_app$c (fun_app$o ?v0 ?v4 )?v5 )))(fun_app$c (fun_app$o ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$n (stream_all2$a ?v3 )?v1 )?v2 ))):named a117 ))
(assert (! (forall ((?v0 A_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ )(?v3 A_a_stream_bool_fun_fun$ ))(=> (and (fun_app$a (fun_app$l (stream_all2$ ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A_stream$ ))(=> (and (member$b ?v4 (sset$b ?v1 ))(and (member$a ?v5 (sset$a ?v2 ))(fun_app$b (fun_app$m ?v0 ?v4 )?v5 )))(fun_app$b (fun_app$m ?v3 ?v4 )?v5 ))))(fun_app$a (fun_app$l (stream_all2$ ?v3 )?v1 )?v2 ))):named a118 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$e (stream_all2$c ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A$ ))(=> (and (member$b ?v4 (sset$b ?v1 ))(and (member$b ?v5 (sset$b ?v2 ))(fun_app$c (fun_app$f ?v0 ?v4 )?v5 )))(fun_app$c (fun_app$f ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$e (stream_all2$c ?v3 )?v1 )?v2 ))):named a119 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_a_stream_fun$ )(?v2 A_a_stream_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$b ?v3 (sset$b ?v0 ))(= (fun_app$i ?v1 ?v3 )(fun_app$i ?v2 ?v3 ))))(= (smap$ ?v1 ?v0 )(smap$ ?v2 ?v0 )))):named a120 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_a_fun$ )(?v2 A_stream_a_fun$ ))(=> (forall ((?v3 A_stream$ ))(=> (member$a ?v3 (sset$a ?v0 ))(= (fun_app$j ?v1 ?v3 )(fun_app$j ?v2 ?v3 ))))(= (smap$a ?v1 ?v0 )(smap$a ?v2 ?v0 )))):named a121 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(=> (forall ((?v3 A_stream$ ))(=> (member$a ?v3 (sset$a ?v0 ))(= (fun_app$g ?v1 ?v3 )(fun_app$g ?v2 ?v3 ))))(= (smap$b ?v1 ?v0 )(smap$b ?v2 ?v0 )))):named a122 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$b ?v3 (sset$b ?v0 ))(= (fun_app$k ?v1 ?v3 )(fun_app$k ?v2 ?v3 ))))(= (fun_app$g (smap$c ?v1 )?v0 )(fun_app$g (smap$c ?v2 )?v0 )))):named a123 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ )(?v2 A_a_stream_fun$ )(?v3 A_a_stream_fun$ ))(=> (and (forall ((?v4 A$ )(?v5 A$ ))(=> (and (member$b ?v4 (sset$b ?v0 ))(and (member$b ?v5 (sset$b ?v1 ))(= (fun_app$i ?v2 ?v4 )(fun_app$i ?v3 ?v5 ))))(= ?v4 ?v5 )))(= (smap$ ?v2 ?v0 )(smap$ ?v3 ?v1 )))(= ?v0 ?v1 ))):named a124 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_a_fun$ )(?v3 A_stream_a_fun$ ))(=> (and (forall ((?v4 A_stream$ )(?v5 A_stream$ ))(=> (and (member$a ?v4 (sset$a ?v0 ))(and (member$a ?v5 (sset$a ?v1 ))(= (fun_app$j ?v2 ?v4 )(fun_app$j ?v3 ?v5 ))))(= ?v4 ?v5 )))(= (smap$a ?v2 ?v0 )(smap$a ?v3 ?v1 )))(= ?v0 ?v1 ))):named a125 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (and (forall ((?v4 A_stream$ )(?v5 A_stream$ ))(=> (and (member$a ?v4 (sset$a ?v0 ))(and (member$a ?v5 (sset$a ?v1 ))(= (fun_app$g ?v2 ?v4 )(fun_app$g ?v3 ?v5 ))))(= ?v4 ?v5 )))(= (smap$b ?v2 ?v0 )(smap$b ?v3 ?v1 )))(= ?v0 ?v1 ))):named a126 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ ))(=> (and (forall ((?v4 A$ )(?v5 A$ ))(=> (and (member$b ?v4 (sset$b ?v0 ))(and (member$b ?v5 (sset$b ?v1 ))(= (fun_app$k ?v2 ?v4 )(fun_app$k ?v3 ?v5 ))))(= ?v4 ?v5 )))(= (fun_app$g (smap$c ?v2 )?v0 )(fun_app$g (smap$c ?v3 )?v1 )))(= ?v0 ?v1 ))):named a127 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(=> (forall ((?v2 A$ ))(= (fun_app$c ?v0 ?v2 )(fun_app$c ?v1 ?v2 )))(= (collect$ ?v0 )(collect$ ?v1 )))):named a128 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_bool_fun$ ))(=> (forall ((?v2 A_stream$ ))(= (fun_app$b ?v0 ?v2 )(fun_app$b ?v1 ?v2 )))(= (collect$a ?v0 )(collect$a ?v1 )))):named a129 ))
(assert (! (forall ((?v0 A_stream_stream_set$ ))(= (collect$b (uu$ ?v0 ))?v0 )):named a130 ))
(assert (! (forall ((?v0 A_stream_set$ ))(= (collect$a (uua$ ?v0 ))?v0 )):named a131 ))
(assert (! (forall ((?v0 A_set$ ))(= (collect$ (uub$ ?v0 ))?v0 )):named a132 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_bool_fun$ ))(= (member$ ?v0 (collect$b ?v1 ))(fun_app$a ?v1 ?v0 ))):named a133 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_bool_fun$ ))(= (member$a ?v0 (collect$a ?v1 ))(fun_app$b ?v1 ?v0 ))):named a134 ))
(assert (! (forall ((?v0 A$ )(?v1 A_bool_fun$ ))(= (member$b ?v0 (collect$ ?v1 ))(fun_app$c ?v1 ?v0 ))):named a135 ))
(assert (! (= (stream_all2$b uuc$ )uud$ ):named a136 ))
(assert (! (= (stream_all2$c uue$ )uuc$ ):named a137 ))
(assert (! (forall ((?v0 A_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(= (fun_app$a (fun_app$l (stream_all2$ ?v0 )?v1 )?v2 )(and (fun_app$b (fun_app$m ?v0 (shd$ ?v1 ))(shd$a ?v2 ))(fun_app$a (fun_app$l (stream_all2$ ?v0 )(stl$ ?v1 ))(stl$a ?v2 ))))):named a138 ))
(assert (! (forall ((?v0 A_stream_a_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream$ ))(= (fun_app$b (fun_app$n (stream_all2$a ?v0 )?v1 )?v2 )(and (fun_app$c (fun_app$o ?v0 (shd$a ?v1 ))(shd$ ?v2 ))(fun_app$b (fun_app$n (stream_all2$a ?v0 )(stl$a ?v1 ))(stl$ ?v2 ))))):named a139 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ ))(= (fun_app$a (fun_app$d (stream_all2$b ?v0 )?v1 )?v2 )(and (fun_app$b (fun_app$e ?v0 (shd$a ?v1 ))(shd$a ?v2 ))(fun_app$a (fun_app$d (stream_all2$b ?v0 )(stl$a ?v1 ))(stl$a ?v2 ))))):named a140 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (fun_app$b (fun_app$e (stream_all2$c ?v0 )?v1 )?v2 )(and (fun_app$c (fun_app$f ?v0 (shd$ ?v1 ))(shd$ ?v2 ))(fun_app$b (fun_app$e (stream_all2$c ?v0 )(stl$ ?v1 ))(stl$ ?v2 ))))):named a141 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 Nat$ ))(! (= (snth$ ?v0 (suc$ ?v1 ))(snth$ (stl$a ?v0 )?v1 )):pattern ((snth$ ?v0 (suc$ ?v1 ))))):named a142 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 Nat$ ))(! (= (snth$a ?v0 (suc$ ?v1 ))(snth$a (stl$ ?v0 )?v1 )):pattern ((snth$a ?v0 (suc$ ?v1 ))))):named a143 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(=> (=> (= ?v0 (sCons$a (shd$a ?v0 )(stl$a ?v0 )))false )false )):named a144 ))
(assert (! (forall ((?v0 A_stream$ ))(=> (=> (= ?v0 (sCons$ (shd$ ?v0 )(stl$ ?v0 )))false )false )):named a145 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (and (member$c ?v0 (streams$ ?v1 ))(=> (and (member$ (shd$b ?v0 )?v1 )(member$c (stl$b ?v0 )(streams$ ?v1 )))false ))false )):named a146 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$ ?v0 (streams$a ?v1 ))(=> (and (member$a (shd$a ?v0 )?v1 )(member$ (stl$a ?v0 )(streams$a ?v1 )))false ))false )):named a147 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$a ?v0 (streams$b ?v1 ))(=> (and (member$b (shd$ ?v0 )?v1 )(member$a (stl$ ?v0 )(streams$b ?v1 )))false ))false )):named a148 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (and (member$c (stl$b ?v0 )(streams$ ?v1 ))(member$ (shd$b ?v0 )?v1 ))(member$c ?v0 (streams$ ?v1 )))):named a149 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$ (stl$a ?v0 )(streams$a ?v1 ))(member$a (shd$a ?v0 )?v1 ))(member$ ?v0 (streams$a ?v1 )))):named a150 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$a (stl$ ?v0 )(streams$b ?v1 ))(member$b (shd$ ?v0 )?v1 ))(member$a ?v0 (streams$b ?v1 )))):named a151 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_stream$ ))(= (sdrop_while$ ?v0 ?v1 )(ite (fun_app$b ?v0 (shd$a ?v1 ))(sdrop_while$ ?v0 (stl$a ?v1 ))?v1 ))):named a152 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (fun_app$g (sdrop_while$a ?v0 )?v1 )(ite (fun_app$c ?v0 (shd$ ?v1 ))(fun_app$g (sdrop_while$a ?v0 )(stl$ ?v1 ))?v1 ))):named a153 ))
(assert (! (forall ((?v0 A_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(=> (and (fun_app$a (fun_app$l (stream_all2$ ?v0 )?v1 )?v2 )(forall ((?v3 A$ )(?v4 A_stream$ )(?v5 A_stream$ )(?v6 A_stream_stream$ ))(=> (and (= ?v1 (sCons$ ?v3 ?v4 ))(and (= ?v2 (sCons$a ?v5 ?v6 ))(and (fun_app$b (fun_app$m ?v0 ?v3 )?v5 )(fun_app$a (fun_app$l (stream_all2$ ?v0 )?v4 )?v6 ))))false )))false )):named a154 ))
(assert (! (forall ((?v0 A_stream_a_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$b (fun_app$n (stream_all2$a ?v0 )?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream_stream$ )(?v5 A$ )(?v6 A_stream$ ))(=> (and (= ?v1 (sCons$a ?v3 ?v4 ))(and (= ?v2 (sCons$ ?v5 ?v6 ))(and (fun_app$c (fun_app$o ?v0 ?v3 )?v5 )(fun_app$b (fun_app$n (stream_all2$a ?v0 )?v4 )?v6 ))))false )))false )):named a155 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ ))(=> (and (fun_app$a (fun_app$d (stream_all2$b ?v0 )?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream_stream$ )(?v5 A_stream$ )(?v6 A_stream_stream$ ))(=> (and (= ?v1 (sCons$a ?v3 ?v4 ))(and (= ?v2 (sCons$a ?v5 ?v6 ))(and (fun_app$b (fun_app$e ?v0 ?v3 )?v5 )(fun_app$a (fun_app$d (stream_all2$b ?v0 )?v4 )?v6 ))))false )))false )):named a156 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$b (fun_app$e (stream_all2$c ?v0 )?v1 )?v2 )(forall ((?v3 A$ )(?v4 A_stream$ )(?v5 A$ )(?v6 A_stream$ ))(=> (and (= ?v1 (sCons$ ?v3 ?v4 ))(and (= ?v2 (sCons$ ?v5 ?v6 ))(and (fun_app$c (fun_app$f ?v0 ?v3 )?v5 )(fun_app$b (fun_app$e (stream_all2$c ?v0 )?v4 )?v6 ))))false )))false )):named a157 ))
(assert (! (forall ((?v0 A_a_stream_bool_fun_fun$ )(?v1 A$ )(?v2 A_stream$ )(?v3 A_stream$ )(?v4 A_stream_stream$ ))(=> (and (fun_app$b (fun_app$m ?v0 ?v1 )?v2 )(fun_app$a (fun_app$l (stream_all2$ ?v0 )?v3 )?v4 ))(fun_app$a (fun_app$l (stream_all2$ ?v0 )(sCons$ ?v1 ?v3 ))(sCons$a ?v2 ?v4 )))):named a158 ))
(assert (! (forall ((?v0 A_stream_a_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream_stream$ )(?v4 A_stream$ ))(=> (and (fun_app$c (fun_app$o ?v0 ?v1 )?v2 )(fun_app$b (fun_app$n (stream_all2$a ?v0 )?v3 )?v4 ))(fun_app$b (fun_app$n (stream_all2$a ?v0 )(sCons$a ?v1 ?v3 ))(sCons$ ?v2 ?v4 )))):named a159 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ )(?v4 A_stream_stream$ ))(=> (and (fun_app$b (fun_app$e ?v0 ?v1 )?v2 )(fun_app$a (fun_app$d (stream_all2$b ?v0 )?v3 )?v4 ))(fun_app$a (fun_app$d (stream_all2$b ?v0 )(sCons$a ?v1 ?v3 ))(sCons$a ?v2 ?v4 )))):named a160 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 A_stream$ )(?v4 A_stream$ ))(=> (and (fun_app$c (fun_app$f ?v0 ?v1 )?v2 )(fun_app$b (fun_app$e (stream_all2$c ?v0 )?v3 )?v4 ))(fun_app$b (fun_app$e (stream_all2$c ?v0 )(sCons$ ?v1 ?v3 ))(sCons$ ?v2 ?v4 )))):named a161 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ ))(! (= (stl$a (sCons$a ?v0 ?v1 ))?v1 ):pattern ((sCons$a ?v0 ?v1 )))):named a162 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(! (= (stl$ (sCons$ ?v0 ?v1 ))?v1 ):pattern ((sCons$ ?v0 ?v1 )))):named a163 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(! (= (smap$b ?v0 (sCons$a ?v1 ?v2 ))(sCons$a (fun_app$g ?v0 ?v1 )(smap$b ?v0 ?v2 ))):pattern ((smap$b ?v0 (sCons$a ?v1 ?v2 ))))):named a164 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (fun_app$g (smap$c ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ (fun_app$k ?v0 ?v1 )(fun_app$g (smap$c ?v0 )?v2 ))):pattern ((fun_app$g (smap$c ?v0 )(sCons$ ?v1 ?v2 ))))):named a165 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (member$a ?v0 (streams$b ?v1 ))(member$a (stl$ ?v0 )(streams$b ?v1 )))):named a166 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(! (= (shd$ (sCons$ ?v0 ?v1 ))?v0 ):pattern ((sCons$ ?v0 ?v1 )))):named a167 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_set$ ))(=> (and (member$ ?v0 (streams$a ?v1 ))(forall ((?v4 A_stream$ ))(=> (member$a ?v4 ?v1 )(member$a (fun_app$g ?v2 ?v4 )?v3 ))))(member$ (smap$b ?v2 ?v0 )(streams$a ?v3 )))):named a168 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ )(?v2 A_stream_a_fun$ )(?v3 A_set$ ))(=> (and (member$ ?v0 (streams$a ?v1 ))(forall ((?v4 A_stream$ ))(=> (member$a ?v4 ?v1 )(member$b (fun_app$j ?v2 ?v4 )?v3 ))))(member$a (smap$a ?v2 ?v0 )(streams$b ?v3 )))):named a169 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_stream_fun$ )(?v3 A_stream_set$ ))(=> (and (member$a ?v0 (streams$b ?v1 ))(forall ((?v4 A$ ))(=> (member$b ?v4 ?v1 )(member$a (fun_app$i ?v2 ?v4 )?v3 ))))(member$ (smap$ ?v2 ?v0 )(streams$a ?v3 )))):named a170 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_fun$ )(?v3 A_set$ ))(=> (and (member$a ?v0 (streams$b ?v1 ))(forall ((?v4 A$ ))(=> (member$b ?v4 ?v1 )(member$b (fun_app$k ?v2 ?v4 )?v3 ))))(member$a (fun_app$g (smap$c ?v2 )?v0 )(streams$b ?v3 )))):named a171 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (= (fun_app$g (smap$c ?v0 )?v1 )?v2 )(forall ((?v3 Nat$ ))(= (fun_app$k ?v0 (snth$a ?v1 ?v3 ))(snth$a ?v2 ?v3 ))))):named a172 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (member$ ?v0 (streams$a ?v1 ))(member$a (shd$a ?v0 )?v1 ))):named a173 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (member$a ?v0 (streams$b ?v1 ))(member$b (shd$ ?v0 )?v1 ))):named a174 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a175 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a176 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (fun_app$g (sfilter$a ?v0 )?v1 )(sCons$ (shd$ (fun_app$g (sdrop_while$a (fun_app$w (comp$ uuf$ )?v0 ))?v1 ))(fun_app$g (sfilter$a ?v0 )(stl$ (fun_app$g (sdrop_while$a (fun_app$w (comp$ uuf$ )?v0 ))?v1 )))))):named a177 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ ))(= (shd$ (fun_app$g (sdrop$ ?v0 )?v1 ))(snth$a ?v1 ?v0 ))):named a178 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ ))(= (stl$ (fun_app$g (sdrop$ ?v0 )?v1 ))(fun_app$g (sdrop$ (suc$ ?v0 ))?v1 ))):named a179 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (shd$ (fun_app$g (sfilter$a ?v0 )?v1 ))(shd$ (fun_app$g (sdrop_while$a (fun_app$w (comp$ uuf$ )?v0 ))?v1 )))):named a180 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (stl$ (fun_app$g (sfilter$a ?v0 )?v1 ))(fun_app$g (sfilter$a ?v0 )(stl$ (fun_app$g (sdrop_while$a (fun_app$w (comp$ uuf$ )?v0 ))?v1 ))))):named a181 ))
(assert (! (forall ((?v0 Nat$ ))(not (= ?v0 (suc$ ?v0 )))):named a182 ))
(check-sat )
(get-unsat-core )
