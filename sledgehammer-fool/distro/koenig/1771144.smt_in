(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort Nat$ 0 )
(declare-sort Bool_stream$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort Bool_nat_fun$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort Nat_nat_stream_fun$ 0 )
(declare-sort Nat_bool_stream_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun$ 0 )
(declare-sort Nat_stream_bool_fun$ 0 )
(declare-sort Bool_bool_stream_fun$ 0 )
(declare-sort Nat_stream_nat_stream_fun$ 0 )
(declare-sort Nat_bool_stream_stream_fun$ 0 )
(declare-sort Nat_stream_bool_stream_fun$ 0 )
(declare-sort Bool_stream_bool_stream_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_fun$ 0 )
(declare-sort Nat_bool_fun_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_bool_fun_fun$ 0 )
(declare-sort Nat_bool_fun_nat_bool_fun_fun$ 0 )
(declare-sort Bool_nat_fun_bool_bool_fun_fun$ 0 )
(declare-sort Bool_bool_fun_bool_bool_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_stream_fun_fun$ 0 )
(declare-sort Nat_stream_nat_stream_bool_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_bool_stream_fun_fun$ 0 )
(declare-sort Bool_bool_fun_bool_bool_stream_fun_fun$ 0 )
(declare-sort Bool_stream_stream_bool_stream_stream_fun$ 0 )
(declare-sort Nat_nat_stream_fun_nat_nat_stream_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_bool_stream_stream_fun_fun$ 0 )
(declare-sort Nat_nat_stream_fun_nat_bool_stream_fun_fun$ 0 )
(declare-sort Nat_bool_stream_fun_nat_bool_stream_fun_fun$ 0 )
(declare-sort Bool_bool_stream_fun_bool_bool_stream_fun_fun$ 0 )
(declare-sort Nat_bool_stream_stream_fun_nat_bool_stream_stream_fun_fun$ 0 )
(declare-sort Nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun$ 0 )
(declare-sort Bool_stream_bool_stream_fun_bool_stream_bool_stream_fun_fun$ 0 )
(declare-sort Nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun$ 0 )
(declare-sort Bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun$ 0 )
(declare-sort Nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun$ 0 )
(declare-sort Nat_bool_fun_nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun_fun$ 0 )
(declare-sort Nat_bool_fun_nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun_fun$ 0 )
(declare-sort Bool_bool_fun_bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun_fun$ 0 )
(declare-sort Nat_bool_fun_nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun_fun$ 0 )
(declare-sort Nat_stream$ 0)
(declare-sort Bool_stream_stream$ 0)
(declare-fun shd$ (Nat_stream$)Nat$)
(declare-fun stl$ (Nat_stream$)Nat_stream$)
(declare-fun sCons$ (Nat$ Nat_stream$ )Nat_stream$)
(declare-fun shd$a (Bool_stream_stream$)Bool_stream$)
(declare-fun stl$a (Bool_stream_stream$)Bool_stream_stream$)
(declare-fun sCons$a (Bool_stream$ Bool_stream_stream$ )Bool_stream_stream$)
(declare-fun n$ ()Nat$ )
(declare-fun ns$ (Nat$ )Nat_stream$ )
(declare-fun uu$ ()Bool_bool_fun$ )
(declare-fun xs$ ()Nat_stream$ )
(declare-fun ys$ ()Nat_stream$ )
(declare-fun one$ ()Nat$ )
(declare-fun suc$ (Nat$ )Nat$ )
(declare-fun comp$ (Bool_bool_fun$ )Bool_bool_fun_bool_bool_fun_fun$ )
(declare-fun ones$ ()Nat_stream$ )
(declare-fun plus$ (Nat_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun shd$b (Bool_stream$ )Bool )
(declare-fun smap$ (Bool_bool_fun$ )Bool_stream_bool_stream_fun$ )
(declare-fun stl$b (Bool_stream$ )Bool_stream$ )
(declare-fun twos$ ()Nat_stream$ )
(declare-fun zero$ ()Nat$ )
(declare-fun comp$a (Bool_bool_fun$ )Nat_bool_fun_nat_bool_fun_fun$ )
(declare-fun comp$b (Bool_stream_bool_stream_fun$ )Nat_bool_stream_fun_nat_bool_stream_fun_fun$ )
(declare-fun comp$c (Bool_nat_fun$ )Nat_bool_fun_nat_nat_fun_fun$ )
(declare-fun comp$d (Nat_bool_fun$ )Bool_nat_fun_bool_bool_fun_fun$ )
(declare-fun comp$e (Nat_bool_fun$ )Nat_nat_fun_nat_bool_fun_fun$ )
(declare-fun comp$f (Nat_nat_fun$ )Nat_nat_fun_nat_nat_fun_fun$ )
(declare-fun comp$g (Nat_bool_stream_fun$ )Nat_nat_fun_nat_bool_stream_fun_fun$ )
(declare-fun comp$h (Bool_stream_bool_stream_fun$ )Bool_stream_bool_stream_fun_bool_stream_bool_stream_fun_fun$ )
(declare-fun comp$i (Bool_stream_stream_bool_stream_stream_fun$ )Nat_bool_stream_stream_fun_nat_bool_stream_stream_fun_fun$ )
(declare-fun comp$j (Nat_stream_nat_stream_fun$ )Nat_nat_stream_fun_nat_nat_stream_fun_fun$ )
(declare-fun comp$k (Bool_stream_bool_stream_fun$ )Bool_bool_stream_fun_bool_bool_stream_fun_fun$ )
(declare-fun comp$l (Nat_stream_bool_stream_fun$ )Nat_nat_stream_fun_nat_bool_stream_fun_fun$ )
(declare-fun minus$ (Nat$ )Nat_nat_fun$ )
(declare-fun plus$a (Nat$ )Nat_nat_fun$ )
(declare-fun smap$a (Nat_bool_fun$ )Nat_stream_bool_stream_fun$ )
(declare-fun smap$b (Nat_nat_fun$ )Nat_stream_nat_stream_fun$ )
(declare-fun smap$c (Bool_stream_bool_stream_fun$ )Bool_stream_stream_bool_stream_stream_fun$ )
(declare-fun smap$d (Nat_bool_stream_fun$ Nat_stream$ )Bool_stream_stream$ )
(declare-fun smap$e (Bool_nat_fun$ Bool_stream$ )Nat_stream$ )
(declare-fun smap2$ (Nat_nat_nat_fun_fun$ Nat_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun times$ (Nat$ )Nat_nat_fun$ )
(declare-fun sCons$b (Bool )Bool_stream_bool_stream_fun$ )
(declare-fun scalar$ (Nat$ Nat_stream$ )Nat_stream$ )
(declare-fun fun_app$ (Bool_bool_fun$ Bool )Bool )
(declare-fun of_bool$ (Bool )Nat$ )
(declare-fun sfilter$ (Bool_bool_fun$ )Bool_stream_bool_stream_fun$ )
(declare-fun smember$ (Nat$ Nat_stream$ )Bool )
(declare-fun fun_app$a (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun fun_app$b (Nat_stream_bool_fun$ Nat_stream$ )Bool )
(declare-fun fun_app$c (Nat_stream_nat_stream_bool_fun_fun$ Nat_stream$ )Nat_stream_bool_fun$ )
(declare-fun fun_app$d (Nat_bool_fun$ Nat$ )Bool )
(declare-fun fun_app$e (Nat_nat_nat_fun_fun$ Nat$ )Nat_nat_fun$ )
(declare-fun fun_app$f (Bool_stream_bool_stream_fun$ Bool_stream$ )Bool_stream$ )
(declare-fun fun_app$g (Nat_stream_bool_stream_fun$ Nat_stream$ )Bool_stream$ )
(declare-fun fun_app$h (Nat_stream_nat_stream_fun$ Nat_stream$ )Nat_stream$ )
(declare-fun fun_app$i (Bool_bool_fun_bool_bool_fun_fun$ Bool_bool_fun$ )Bool_bool_fun$ )
(declare-fun fun_app$j (Nat_bool_fun_nat_bool_fun_fun$ Nat_bool_fun$ )Nat_bool_fun$ )
(declare-fun fun_app$k (Bool_stream_stream_bool_stream_stream_fun$ Bool_stream_stream$ )Bool_stream_stream$ )
(declare-fun fun_app$l (Nat_bool_stream_fun_nat_bool_stream_fun_fun$ Nat_bool_stream_fun$ )Nat_bool_stream_fun$ )
(declare-fun fun_app$m (Nat_bool_fun_nat_nat_fun_fun$ Nat_bool_fun$ )Nat_nat_fun$ )
(declare-fun fun_app$n (Bool_nat_fun_bool_bool_fun_fun$ Bool_nat_fun$ )Bool_bool_fun$ )
(declare-fun fun_app$o (Nat_nat_fun_nat_bool_fun_fun$ Nat_nat_fun$ )Nat_bool_fun$ )
(declare-fun fun_app$p (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun$ )Nat_nat_fun$ )
(declare-fun fun_app$q (Nat_bool_stream_fun$ Nat$ )Bool_stream$ )
(declare-fun fun_app$r (Nat_nat_fun_nat_bool_stream_fun_fun$ Nat_nat_fun$ )Nat_bool_stream_fun$ )
(declare-fun fun_app$s (Bool_stream_bool_stream_fun_bool_stream_bool_stream_fun_fun$ Bool_stream_bool_stream_fun$ )Bool_stream_bool_stream_fun$ )
(declare-fun fun_app$t (Nat_bool_stream_stream_fun_nat_bool_stream_stream_fun_fun$ Nat_bool_stream_stream_fun$ )Nat_bool_stream_stream_fun$ )
(declare-fun fun_app$u (Nat_nat_fun_nat_bool_stream_stream_fun_fun$ Nat_nat_fun$ )Nat_bool_stream_stream_fun$ )
(declare-fun fun_app$v (Nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun$ Nat_bool_stream_stream_fun$ )Nat_nat_fun_nat_bool_stream_stream_fun_fun$ )
(declare-fun fun_app$w (Nat_bool_fun_nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun_fun$ Nat_bool_fun$ )Nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun$ )
(declare-fun fun_app$x (Nat_nat_stream_fun_nat_nat_stream_fun_fun$ Nat_nat_stream_fun$ )Nat_nat_stream_fun$ )
(declare-fun fun_app$y (Nat_nat_fun_nat_nat_stream_fun_fun$ Nat_nat_fun$ )Nat_nat_stream_fun$ )
(declare-fun fun_app$z (Nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun$ Nat_nat_stream_fun$ )Nat_nat_fun_nat_nat_stream_fun_fun$ )
(declare-fun sfilter$a (Nat_bool_fun$ Nat_stream$ )Nat_stream$ )
(declare-fun fun_app$aa (Nat_bool_fun_nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun_fun$ Nat_bool_fun$ )Nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun$ )
(declare-fun fun_app$ab (Bool_bool_stream_fun_bool_bool_stream_fun_fun$ Bool_bool_stream_fun$ )Bool_bool_stream_fun$ )
(declare-fun fun_app$ac (Bool_bool_fun_bool_bool_stream_fun_fun$ Bool_bool_fun$ )Bool_bool_stream_fun$ )
(declare-fun fun_app$ad (Bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun$ Bool_bool_stream_fun$ )Bool_bool_fun_bool_bool_stream_fun_fun$ )
(declare-fun fun_app$ae (Bool_bool_fun_bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun_fun$ Bool_bool_fun$ )Bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun$ )
(declare-fun fun_app$af (Nat_nat_stream_fun_nat_bool_stream_fun_fun$ Nat_nat_stream_fun$ )Nat_bool_stream_fun$ )
(declare-fun fun_app$ag (Nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun$ Nat_bool_stream_fun$ )Nat_nat_fun_nat_bool_stream_fun_fun$ )
(declare-fun fun_app$ah (Nat_bool_fun_nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun_fun$ Nat_bool_fun$ )Nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun$ )
(declare-fun pred_stream$ (Nat_bool_fun$ Nat_stream$ )Bool )
(declare-fun sdrop_while$ (Nat_bool_fun$ Nat_stream$ )Nat_stream$ )
(declare-fun sinterleave$ (Nat_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun corec_stream$ (Nat_bool_stream_fun$ )Nat_bool_fun_nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun_fun$ )
(declare-fun sdrop_while$a (Bool_bool_fun$ )Bool_stream_bool_stream_fun$ )
(declare-fun corec_stream$a (Nat_nat_fun$ )Nat_bool_fun_nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun_fun$ )
(declare-fun corec_stream$b (Bool_bool_fun$ )Bool_bool_fun_bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun_fun$ )
(declare-fun corec_stream$c (Nat_bool_fun$ )Nat_bool_fun_nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun_fun$ )
(assert (! (forall ((?v0 Bool ))(! (= (fun_app$ uu$ ?v0 )(not ?v0 )):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (not (= (scalar$ n$ (plus$ xs$ ys$ ))(plus$ (scalar$ n$ xs$ )(scalar$ n$ ys$ )))):named a1 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (ns$ ?v0 )(scalar$ ?v0 ones$ )):pattern ((ns$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(= (scalar$ (fun_app$a (times$ ?v0 )?v1 )?v2 )(scalar$ ?v0 (scalar$ ?v1 ?v2 )))):named a3 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (stl$ (plus$ ?v0 ?v1 ))(plus$ (stl$ ?v0 )(stl$ ?v1 )))):named a4 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (shd$ (plus$ ?v0 ?v1 ))(fun_app$a (plus$a (shd$ ?v0 ))(shd$ ?v1 )))):named a5 ))
(assert (! (= (stl$ ones$ )ones$ ):named a6 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$a (plus$a ?v0 )?v1 )(fun_app$a (plus$a ?v2 )?v1 ))(= ?v0 ?v2 ))):named a7 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$a (plus$a ?v0 )?v1 )(fun_app$a (plus$a ?v0 )?v2 ))(= ?v1 ?v2 ))):named a8 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(=> (and (= (shd$ ?v0 )(shd$ ?v1 ))(= (stl$ ?v0 )(stl$ ?v1 )))(= ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_bool_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(forall ((?v3 Nat_stream$ )(?v4 Nat_stream$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(or (fun_app$b (fun_app$c ?v0 (stl$ ?v3 ))(stl$ ?v4 ))(= (stl$ ?v3 )(stl$ ?v4 )))))))(= ?v1 ?v2 ))):named a10 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_bool_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(forall ((?v3 Nat_stream$ )(?v4 Nat_stream$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(fun_app$b (fun_app$c ?v0 (stl$ ?v3 ))(stl$ ?v4 ))))))(= ?v1 ?v2 ))):named a11 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v1 ))(fun_app$a (plus$a (fun_app$a (times$ ?v2 )?v1 ))?v3 ))(fun_app$a (plus$a (fun_app$a (times$ (fun_app$a (plus$a ?v0 )?v2 ))?v1 ))?v3 ))):named a12 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ (fun_app$a (plus$a ?v0 )?v1 ))?v2 )(fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v2 ))(fun_app$a (times$ ?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ ?v0 )(fun_app$a (plus$a ?v1 )?v2 ))(fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v1 ))(fun_app$a (times$ ?v0 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (= (fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v1 ))(fun_app$a (times$ ?v2 )?v3 ))(fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v3 ))(fun_app$a (times$ ?v2 )?v1 )))(or (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a15 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v1 ))(fun_app$a (plus$a (fun_app$a (times$ ?v2 )?v1 ))?v3 ))(fun_app$a (plus$a (fun_app$a (times$ (fun_app$a (plus$a ?v0 )?v2 ))?v1 ))?v3 ))):named a16 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ (fun_app$a (plus$a ?v0 )?v1 ))?v2 )(fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v2 ))(fun_app$a (times$ ?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ (fun_app$a (plus$a ?v0 )?v1 ))?v2 )(fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v2 ))(fun_app$a (times$ ?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(=> (and (= ?v0 ?v1 )(= ?v2 ?v3 ))(= (fun_app$a (plus$a ?v0 )?v2 )(fun_app$a (plus$a ?v1 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (fun_app$a (plus$a ?v0 )?v1 )(fun_app$a (plus$a ?v0 )?v2 ))(= ?v1 ?v2 ))):named a20 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (fun_app$a (plus$a ?v0 )?v1 )(fun_app$a (plus$a ?v0 )?v2 ))(= ?v1 ?v2 ))):named a21 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (fun_app$a (plus$a ?v0 )?v1 )(fun_app$a (plus$a ?v2 )?v1 ))(= ?v0 ?v2 ))):named a22 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (plus$a ?v0 )?v1 )(fun_app$a (plus$a ?v1 )?v0 ))):named a23 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (plus$a ?v0 )?v1 )(fun_app$a (plus$a ?v1 )?v0 ))):named a24 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (plus$a ?v0 )(fun_app$a (plus$a ?v1 )?v2 ))(fun_app$a (plus$a ?v1 )(fun_app$a (plus$a ?v0 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (plus$a ?v0 )(fun_app$a (plus$a ?v1 )?v2 ))(fun_app$a (plus$a ?v1 )(fun_app$a (plus$a ?v0 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (plus$a (fun_app$a (plus$a ?v0 )?v1 ))?v2 )(fun_app$a (plus$a ?v0 )(fun_app$a (plus$a ?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (plus$a ?v0 )(fun_app$a (plus$a ?v1 )?v2 ))(fun_app$a (plus$a (fun_app$a (plus$a ?v0 )?v1 ))?v2 ))):named a28 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (plus$a (fun_app$a (plus$a ?v0 )?v1 ))?v2 )(fun_app$a (plus$a ?v0 )(fun_app$a (plus$a ?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (plus$a (fun_app$a (plus$a ?v0 )?v1 ))?v2 )(fun_app$a (plus$a ?v0 )(fun_app$a (plus$a ?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (plus$a (fun_app$a (plus$a ?v0 )?v1 ))?v2 )(fun_app$a (plus$a (fun_app$a (plus$a ?v0 )?v2 ))?v1 ))):named a31 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (fun_app$a (plus$a (fun_app$a (plus$a ?v0 )?v1 ))(fun_app$a (plus$a ?v2 )?v3 ))(fun_app$a (plus$a (fun_app$a (plus$a ?v0 )?v2 ))(fun_app$a (plus$a ?v1 )?v3 )))):named a32 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (times$ ?v0 )?v1 )(fun_app$a (times$ ?v1 )?v0 ))):named a33 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (times$ ?v0 )?v1 )(fun_app$a (times$ ?v1 )?v0 ))):named a34 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ ?v0 )(fun_app$a (times$ ?v1 )?v2 ))(fun_app$a (times$ ?v1 )(fun_app$a (times$ ?v0 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ ?v0 )(fun_app$a (times$ ?v1 )?v2 ))(fun_app$a (times$ ?v1 )(fun_app$a (times$ ?v0 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ (fun_app$a (times$ ?v0 )?v1 ))?v2 )(fun_app$a (times$ ?v0 )(fun_app$a (times$ ?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ ?v0 )(fun_app$a (times$ ?v1 )?v2 ))(fun_app$a (times$ (fun_app$a (times$ ?v0 )?v1 ))?v2 ))):named a38 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ (fun_app$a (times$ ?v0 )?v1 ))?v2 )(fun_app$a (times$ ?v0 )(fun_app$a (times$ ?v1 )?v2 )))):named a39 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ (fun_app$a (times$ ?v0 )?v1 ))?v2 )(fun_app$a (times$ ?v0 )(fun_app$a (times$ ?v1 )?v2 )))):named a40 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (fun_app$a (times$ (fun_app$a (times$ ?v0 )?v1 ))(fun_app$a (times$ ?v2 )?v3 ))(fun_app$a (times$ ?v0 )(fun_app$a (times$ ?v1 )(fun_app$a (times$ ?v2 )?v3 ))))):named a41 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (fun_app$a (times$ (fun_app$a (times$ ?v0 )?v1 ))(fun_app$a (times$ ?v2 )?v3 ))(fun_app$a (times$ ?v2 )(fun_app$a (times$ (fun_app$a (times$ ?v0 )?v1 ))?v3 )))):named a42 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ (fun_app$a (times$ ?v0 )?v1 ))?v2 )(fun_app$a (times$ (fun_app$a (times$ ?v0 )?v2 ))?v1 ))):named a43 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (fun_app$a (times$ (fun_app$a (times$ ?v0 )?v1 ))(fun_app$a (times$ ?v2 )?v3 ))(fun_app$a (times$ (fun_app$a (times$ ?v0 )?v2 ))(fun_app$a (times$ ?v1 )?v3 )))):named a44 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$a (plus$a ?v0 )?v1 )(fun_app$a (plus$a ?v0 )?v2 ))(= ?v1 ?v2 ))):named a45 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$a (plus$a ?v0 )?v1 )(fun_app$a (plus$a ?v2 )?v1 ))(= ?v0 ?v2 ))):named a46 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (and (not (= ?v0 ?v1 ))(not (= ?v2 ?v3 )))(not (= (fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v2 ))(fun_app$a (times$ ?v1 )?v3 ))(fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v3 ))(fun_app$a (times$ ?v1 )?v2 )))))):named a47 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ ?v0 )(fun_app$a (plus$a ?v1 )?v2 ))(fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v1 ))(fun_app$a (times$ ?v0 )?v2 )))):named a48 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ ?v0 )(fun_app$a (plus$a ?v1 )?v2 ))(fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v1 ))(fun_app$a (times$ ?v0 )?v2 )))):named a49 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ (fun_app$a (plus$a ?v0 )?v1 ))?v2 )(fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v2 ))(fun_app$a (times$ ?v1 )?v2 )))):named a50 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v1 ))(fun_app$a (times$ ?v2 )?v1 ))(fun_app$a (times$ (fun_app$a (plus$a ?v0 )?v2 ))?v1 ))):named a51 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (plus$ ?v0 ?v1 )(sCons$ (fun_app$a (plus$a (shd$ ?v0 ))(shd$ ?v1 ))(plus$ (stl$ ?v0 )(stl$ ?v1 ))))):named a52 ))
(assert (! (= (stl$ twos$ )twos$ ):named a53 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (sdrop_while$ ?v0 ?v1 )(ite (fun_app$d ?v0 (shd$ ?v1 ))(sdrop_while$ ?v0 (stl$ ?v1 ))?v1 ))):named a54 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a55 ))
(assert (! (forall ((?v0 Nat_stream$ ))(= (sCons$ (shd$ ?v0 )(stl$ ?v0 ))?v0 )):named a56 ))
(assert (! (forall ((?v0 Nat_stream$ ))(=> (forall ((?v1 Nat$ )(?v2 Nat_stream$ ))(=> (= ?v0 (sCons$ ?v1 ?v2 ))false ))false )):named a57 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (sdrop_while$ ?v0 (sCons$ ?v1 ?v2 ))(ite (fun_app$d ?v0 ?v1 )(sdrop_while$ ?v0 ?v2 )(sCons$ ?v1 ?v2 ))):pattern ((sdrop_while$ ?v0 (sCons$ ?v1 ?v2 ))))):named a58 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_stream$ ))(! (= (stl$ (sCons$ ?v0 ?v1 ))?v1 ):pattern ((sCons$ ?v0 ?v1 )))):named a59 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_stream$ ))(! (= (shd$ (sCons$ ?v0 ?v1 ))?v0 ):pattern ((sCons$ ?v0 ?v1 )))):named a60 ))
(assert (! (forall ((?v0 Nat_stream$ ))(=> (=> (= ?v0 (sCons$ (shd$ ?v0 )(stl$ ?v0 )))false )false )):named a61 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (smember$ ?v0 (sCons$ ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$ ?v0 ?v2 ))):pattern ((smember$ ?v0 (sCons$ ?v1 ?v2 ))))):named a62 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (sinterleave$ ?v0 ?v1 )(sCons$ (shd$ ?v0 )(sinterleave$ ?v1 (stl$ ?v0 ))))):named a63 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (smap2$ ?v0 ?v1 ?v2 )(sCons$ (fun_app$a (fun_app$e ?v0 (shd$ ?v1 ))(shd$ ?v2 ))(smap2$ ?v0 (stl$ ?v1 )(stl$ ?v2 ))))):named a64 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (pred_stream$ ?v0 (sCons$ ?v1 ?v2 ))(and (fun_app$d ?v0 ?v1 )(pred_stream$ ?v0 ?v2 ))):pattern ((pred_stream$ ?v0 (sCons$ ?v1 ?v2 ))))):named a65 ))
(assert (! (= ones$ (sCons$ one$ ones$ )):named a66 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ )(?v2 Bool )(?v3 Bool_stream$ ))(= (= (fun_app$f (smap$ ?v0 )?v1 )(fun_app$f (sCons$b ?v2 )?v3 ))(and (= (fun_app$ ?v0 (shd$b ?v1 ))?v2 )(= (fun_app$f (smap$ ?v0 )(stl$b ?v1 ))?v3 )))):named a67 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ )(?v2 Bool )(?v3 Bool_stream$ ))(= (= (fun_app$g (smap$a ?v0 )?v1 )(fun_app$f (sCons$b ?v2 )?v3 ))(and (= (fun_app$d ?v0 (shd$ ?v1 ))?v2 )(= (fun_app$g (smap$a ?v0 )(stl$ ?v1 ))?v3 )))):named a68 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(= (= (fun_app$h (smap$b ?v0 )?v1 )(sCons$ ?v2 ?v3 ))(and (= (fun_app$a ?v0 (shd$ ?v1 ))?v2 )(= (fun_app$h (smap$b ?v0 )(stl$ ?v1 ))?v3 )))):named a69 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ one$ )?v0 )?v0 )):named a70 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ one$ )?v0 )?v0 )):named a71 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ ?v0 )one$ )?v0 )):named a72 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ ?v0 )one$ )?v0 )):named a73 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (fun_app$a (times$ ?v0 )?v1 )one$ )(and (= ?v0 one$ )(= ?v1 one$ )))):named a74 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= one$ (fun_app$a (times$ ?v0 )?v1 ))(and (= ?v0 one$ )(= ?v1 one$ )))):named a75 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ ))(= (stl$b (fun_app$f (smap$ ?v0 )?v1 ))(fun_app$f (smap$ ?v0 )(stl$b ?v1 )))):named a76 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (stl$b (fun_app$g (smap$a ?v0 )?v1 ))(fun_app$g (smap$a ?v0 )(stl$ ?v1 )))):named a77 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_stream$ ))(= (stl$ (fun_app$h (smap$b ?v0 )?v1 ))(fun_app$h (smap$b ?v0 )(stl$ ?v1 )))):named a78 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ ))(= (shd$b (fun_app$f (smap$ ?v0 )?v1 ))(fun_app$ ?v0 (shd$b ?v1 )))):named a79 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (shd$b (fun_app$g (smap$a ?v0 )?v1 ))(fun_app$d ?v0 (shd$ ?v1 )))):named a80 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_stream$ ))(= (shd$ (fun_app$h (smap$b ?v0 )?v1 ))(fun_app$a ?v0 (shd$ ?v1 )))):named a81 ))
(assert (! (forall ((?v0 Nat$ ))(= (= one$ ?v0 )(= ?v0 one$ ))):named a82 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ one$ )?v0 )?v0 )):named a83 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ ?v0 )one$ )?v0 )):named a84 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ one$ )?v0 )?v0 )):named a85 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ ?v0 )one$ )?v0 )):named a86 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool )(?v2 Bool_stream$ ))(! (= (fun_app$f (smap$ ?v0 )(fun_app$f (sCons$b ?v1 )?v2 ))(fun_app$f (sCons$b (fun_app$ ?v0 ?v1 ))(fun_app$f (smap$ ?v0 )?v2 ))):pattern ((fun_app$f (smap$ ?v0 )(fun_app$f (sCons$b ?v1 )?v2 ))))):named a87 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (fun_app$g (smap$a ?v0 )(sCons$ ?v1 ?v2 ))(fun_app$f (sCons$b (fun_app$d ?v0 ?v1 ))(fun_app$g (smap$a ?v0 )?v2 ))):pattern ((fun_app$g (smap$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a88 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (fun_app$h (smap$b ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ (fun_app$a ?v0 ?v1 )(fun_app$h (smap$b ?v0 )?v2 ))):pattern ((fun_app$h (smap$b ?v0 )(sCons$ ?v1 ?v2 ))))):named a89 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (stl$ (smap2$ ?v0 ?v1 ?v2 ))(smap2$ ?v0 (stl$ ?v1 )(stl$ ?v2 )))):named a90 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (shd$ (smap2$ ?v0 ?v1 ?v2 ))(fun_app$a (fun_app$e ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a91 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ )(?v3 Nat$ )(?v4 Nat_stream$ ))(! (= (smap2$ ?v0 (sCons$ ?v1 ?v2 )(sCons$ ?v3 ?v4 ))(sCons$ (fun_app$a (fun_app$e ?v0 ?v1 )?v3 )(smap2$ ?v0 ?v2 ?v4 ))):pattern ((smap2$ ?v0 (sCons$ ?v1 ?v2 )(sCons$ ?v3 ?v4 ))))):named a92 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (plus$a (fun_app$a (times$ ?v0 )?v1 ))?v1 )(fun_app$a (times$ (fun_app$a (plus$a ?v0 )one$ ))?v1 ))):named a93 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (plus$a ?v0 )?v0 )(fun_app$a (times$ (fun_app$a (plus$a one$ )one$ ))?v0 ))):named a94 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (plus$a ?v0 )(fun_app$a (times$ ?v1 )?v0 ))(fun_app$a (times$ (fun_app$a (plus$a ?v1 )one$ ))?v0 ))):named a95 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (stl$ (sinterleave$ ?v0 ?v1 ))(sinterleave$ ?v1 (stl$ ?v0 )))):named a96 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (shd$ (sinterleave$ ?v0 ?v1 ))(shd$ ?v0 ))):named a97 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(! (= (sinterleave$ (sCons$ ?v0 ?v1 )?v2 )(sCons$ ?v0 (sinterleave$ ?v2 ?v1 ))):pattern ((sinterleave$ (sCons$ ?v0 ?v1 )?v2 )))):named a98 ))
(assert (! (= (shd$ ones$ )one$ ):named a99 ))
(assert (! (= (of_bool$ true )one$ ):named a100 ))
(assert (! (= one$ one$ ):named a101 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ ))(= (fun_app$f (sfilter$ ?v0 )?v1 )(fun_app$f (sCons$b (shd$b (fun_app$f (sdrop_while$a (fun_app$i (comp$ uu$ )?v0 ))?v1 )))(fun_app$f (sfilter$ ?v0 )(stl$b (fun_app$f (sdrop_while$a (fun_app$i (comp$ uu$ )?v0 ))?v1 )))))):named a102 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (sfilter$a ?v0 ?v1 )(sCons$ (shd$ (sdrop_while$ (fun_app$j (comp$a uu$ )?v0 )?v1 ))(sfilter$a ?v0 (stl$ (sdrop_while$ (fun_app$j (comp$a uu$ )?v0 )?v1 )))))):named a103 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (minus$ ?v0 )?v1 ))?v2 )(fun_app$a (minus$ ?v0 )(fun_app$a (plus$a ?v1 )?v2 )))):named a104 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (plus$a ?v0 )?v1 ))(fun_app$a (plus$a ?v2 )?v1 ))(fun_app$a (minus$ ?v0 )?v2 ))):named a105 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (plus$a ?v0 )?v1 ))(fun_app$a (plus$a ?v0 )?v2 ))(fun_app$a (minus$ ?v1 )?v2 ))):named a106 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (plus$a ?v0 )?v1 ))?v1 )?v0 )):named a107 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (plus$a ?v0 )?v1 ))?v0 )?v1 )):named a108 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (minus$ ?v0 )?v1 ))?v2 )(fun_app$a (minus$ (fun_app$a (minus$ ?v0 )?v2 ))?v1 ))):named a109 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(= (= (of_bool$ ?v0 )(of_bool$ ?v1 ))(= ?v0 ?v1 ))):named a110 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (minus$ ?v0 )?v1 ))?v2 )(fun_app$a (minus$ ?v0 )(fun_app$a (plus$a ?v1 )?v2 )))):named a111 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (fun_app$a (plus$a ?v0 )?v1 )?v2 )(= ?v0 (fun_app$a (minus$ ?v2 )?v1 )))):named a112 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (plus$a ?v0 )?v1 ))(fun_app$a (plus$a ?v2 )?v1 ))(fun_app$a (minus$ ?v0 )?v2 ))):named a113 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (plus$a ?v0 )?v1 ))(fun_app$a (plus$a ?v0 )?v2 ))(fun_app$a (minus$ ?v1 )?v2 ))):named a114 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (plus$a ?v0 )?v1 ))?v1 )?v0 )):named a115 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (plus$a ?v0 )?v1 ))?v0 )?v1 )):named a116 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat_stream$ ))(= (fun_app$k (smap$c ?v0 )(smap$d ?v1 ?v2 ))(smap$d (fun_app$l (comp$b ?v0 )?v1 )?v2 ))):named a117 ))
(assert (! (forall ((?v0 Bool_nat_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_stream$ ))(= (smap$e ?v0 (fun_app$g (smap$a ?v1 )?v2 ))(fun_app$h (smap$b (fun_app$m (comp$c ?v0 )?v1 ))?v2 ))):named a118 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_stream$ ))(= (fun_app$f (smap$ ?v0 )(fun_app$f (smap$ ?v1 )?v2 ))(fun_app$f (smap$ (fun_app$i (comp$ ?v0 )?v1 ))?v2 ))):named a119 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Bool_nat_fun$ )(?v2 Bool_stream$ ))(= (fun_app$g (smap$a ?v0 )(smap$e ?v1 ?v2 ))(fun_app$f (smap$ (fun_app$n (comp$d ?v0 )?v1 ))?v2 ))):named a120 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_stream$ ))(= (fun_app$g (smap$a ?v0 )(fun_app$h (smap$b ?v1 )?v2 ))(fun_app$g (smap$a (fun_app$o (comp$e ?v0 )?v1 ))?v2 ))):named a121 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_stream$ ))(= (fun_app$f (smap$ ?v0 )(fun_app$g (smap$a ?v1 )?v2 ))(fun_app$g (smap$a (fun_app$j (comp$a ?v0 )?v1 ))?v2 ))):named a122 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_stream$ ))(= (fun_app$h (smap$b ?v0 )(fun_app$h (smap$b ?v1 )?v2 ))(fun_app$h (smap$b (fun_app$p (comp$f ?v0 )?v1 ))?v2 ))):named a123 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ (fun_app$a (minus$ ?v0 )?v1 ))?v2 )(fun_app$a (minus$ (fun_app$a (times$ ?v0 )?v2 ))(fun_app$a (times$ ?v1 )?v2 )))):named a124 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (times$ ?v0 )(fun_app$a (minus$ ?v1 )?v2 ))(fun_app$a (minus$ (fun_app$a (times$ ?v0 )?v1 ))(fun_app$a (times$ ?v0 )?v2 )))):named a125 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ ))(= (stl$b (fun_app$f (sfilter$ ?v0 )?v1 ))(fun_app$f (sfilter$ ?v0 )(stl$b (fun_app$f (sdrop_while$a (fun_app$i (comp$ uu$ )?v0 ))?v1 ))))):named a126 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (stl$ (sfilter$a ?v0 ?v1 ))(sfilter$a ?v0 (stl$ (sdrop_while$ (fun_app$j (comp$a uu$ )?v0 )?v1 ))))):named a127 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ ))(= (shd$b (fun_app$f (sfilter$ ?v0 )?v1 ))(shd$b (fun_app$f (sdrop_while$a (fun_app$i (comp$ uu$ )?v0 ))?v1 )))):named a128 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (shd$ (sfilter$a ?v0 ?v1 ))(shd$ (sdrop_while$ (fun_app$j (comp$a uu$ )?v0 )?v1 )))):named a129 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (sfilter$a ?v0 (sCons$ ?v1 ?v2 ))(ite (fun_app$d ?v0 ?v1 )(sCons$ ?v1 (sfilter$a ?v0 ?v2 ))(sfilter$a ?v0 ?v2 ))):pattern ((sfilter$a ?v0 (sCons$ ?v1 ?v2 ))))):named a130 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ ))(! (= (fun_app$a (fun_app$p (comp$f ?v0 )?v1 )?v2 )(fun_app$a ?v0 (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$p (comp$f ?v0 )?v1 )?v2 )))):named a131 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool ))(! (= (fun_app$ (fun_app$i (comp$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$i (comp$ ?v0 )?v1 )?v2 )))):named a132 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ ))(! (= (fun_app$d (fun_app$o (comp$e ?v0 )?v1 )?v2 )(fun_app$d ?v0 (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$o (comp$e ?v0 )?v1 )?v2 )))):named a133 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat$ ))(! (= (fun_app$q (fun_app$l (comp$b ?v0 )?v1 )?v2 )(fun_app$f ?v0 (fun_app$q ?v1 ?v2 ))):pattern ((fun_app$q (fun_app$l (comp$b ?v0 )?v1 )?v2 )))):named a134 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ ))(! (= (fun_app$d (fun_app$j (comp$a ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$d ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$j (comp$a ?v0 )?v1 )?v2 )))):named a135 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$a (minus$ (fun_app$a (minus$ ?v0 )?v1 ))?v2 )(fun_app$a (minus$ (fun_app$a (minus$ ?v0 )?v2 ))?v1 ))):named a136 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ )(?v3 Nat$ ))(=> (= (fun_app$p (comp$f ?v0 )?v1 )?v2 )(= (fun_app$a ?v0 (fun_app$a ?v1 ?v3 ))(fun_app$a ?v2 ?v3 )))):named a137 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool ))(=> (= (fun_app$i (comp$ ?v0 )?v1 )?v2 )(= (fun_app$ ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$ ?v2 ?v3 )))):named a138 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat$ ))(=> (= (fun_app$o (comp$e ?v0 )?v1 )?v2 )(= (fun_app$d ?v0 (fun_app$a ?v1 ?v3 ))(fun_app$d ?v2 ?v3 )))):named a139 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat_bool_stream_fun$ )(?v3 Nat$ ))(=> (= (fun_app$l (comp$b ?v0 )?v1 )?v2 )(= (fun_app$f ?v0 (fun_app$q ?v1 ?v3 ))(fun_app$q ?v2 ?v3 )))):named a140 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat$ ))(=> (= (fun_app$j (comp$a ?v0 )?v1 )?v2 )(= (fun_app$ ?v0 (fun_app$d ?v1 ?v3 ))(fun_app$d ?v2 ?v3 )))):named a141 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(=> (= (fun_app$j (comp$a ?v0 )?v1 )(fun_app$o (comp$e ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$d ?v1 ?v4 ))(fun_app$d ?v2 (fun_app$a ?v3 ?v4 ))))):named a142 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(=> (= (fun_app$p (comp$f ?v0 )?v1 )(fun_app$p (comp$f ?v2 )?v3 ))(= (fun_app$a ?v0 (fun_app$a ?v1 ?v4 ))(fun_app$a ?v2 (fun_app$a ?v3 ?v4 ))))):named a143 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ )(?v4 Bool ))(=> (= (fun_app$i (comp$ ?v0 )?v1 )(fun_app$i (comp$ ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$ ?v3 ?v4 ))))):named a144 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ )(?v4 Nat$ ))(=> (= (fun_app$o (comp$e ?v0 )?v1 )(fun_app$j (comp$a ?v2 )?v3 ))(= (fun_app$d ?v0 (fun_app$a ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$d ?v3 ?v4 ))))):named a145 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(=> (= (fun_app$o (comp$e ?v0 )?v1 )(fun_app$o (comp$e ?v2 )?v3 ))(= (fun_app$d ?v0 (fun_app$a ?v1 ?v4 ))(fun_app$d ?v2 (fun_app$a ?v3 ?v4 ))))):named a146 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Bool_stream_bool_stream_fun$ )(?v3 Nat_bool_stream_fun$ )(?v4 Nat$ ))(=> (= (fun_app$l (comp$b ?v0 )?v1 )(fun_app$l (comp$b ?v2 )?v3 ))(= (fun_app$f ?v0 (fun_app$q ?v1 ?v4 ))(fun_app$f ?v2 (fun_app$q ?v3 ?v4 ))))):named a147 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ )(?v4 Nat$ ))(=> (= (fun_app$j (comp$a ?v0 )?v1 )(fun_app$j (comp$a ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$d ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$d ?v3 ?v4 ))))):named a148 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_fun$ ))(=> (and (= (fun_app$j (comp$a ?v0 )?v1 )(fun_app$o (comp$e ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$ ?v0 (fun_app$d ?v1 ?v4 ))(fun_app$d ?v2 (fun_app$a ?v3 ?v4 ))))false ))false )):named a149 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun$ ))(=> (and (= (fun_app$p (comp$f ?v0 )?v1 )(fun_app$p (comp$f ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$a ?v0 (fun_app$a ?v1 ?v4 ))(fun_app$a ?v2 (fun_app$a ?v3 ?v4 ))))false ))false )):named a150 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (and (= (fun_app$i (comp$ ?v0 )?v1 )(fun_app$i (comp$ ?v2 )?v3 ))(=> (forall ((?v4 Bool ))(= (fun_app$ ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$ ?v3 ?v4 ))))false ))false )):named a151 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ ))(=> (and (= (fun_app$o (comp$e ?v0 )?v1 )(fun_app$j (comp$a ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$d ?v0 (fun_app$a ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$d ?v3 ?v4 ))))false ))false )):named a152 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_fun$ ))(=> (and (= (fun_app$o (comp$e ?v0 )?v1 )(fun_app$o (comp$e ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$d ?v0 (fun_app$a ?v1 ?v4 ))(fun_app$d ?v2 (fun_app$a ?v3 ?v4 ))))false ))false )):named a153 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Bool_stream_bool_stream_fun$ )(?v3 Nat_bool_stream_fun$ ))(=> (and (= (fun_app$l (comp$b ?v0 )?v1 )(fun_app$l (comp$b ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$f ?v0 (fun_app$q ?v1 ?v4 ))(fun_app$f ?v2 (fun_app$q ?v3 ?v4 ))))false ))false )):named a154 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ ))(=> (and (= (fun_app$j (comp$a ?v0 )?v1 )(fun_app$j (comp$a ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$ ?v0 (fun_app$d ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$d ?v3 ?v4 ))))false ))false )):named a155 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ ))(! (= (fun_app$a (fun_app$p (comp$f ?v0 )?v1 )?v2 )(fun_app$a ?v0 (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$p (comp$f ?v0 )?v1 )?v2 )))):named a156 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool ))(! (= (fun_app$ (fun_app$i (comp$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$i (comp$ ?v0 )?v1 )?v2 )))):named a157 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ ))(! (= (fun_app$d (fun_app$o (comp$e ?v0 )?v1 )?v2 )(fun_app$d ?v0 (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$o (comp$e ?v0 )?v1 )?v2 )))):named a158 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat$ ))(! (= (fun_app$q (fun_app$l (comp$b ?v0 )?v1 )?v2 )(fun_app$f ?v0 (fun_app$q ?v1 ?v2 ))):pattern ((fun_app$q (fun_app$l (comp$b ?v0 )?v1 )?v2 )))):named a159 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ ))(! (= (fun_app$d (fun_app$j (comp$a ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$d ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$j (comp$a ?v0 )?v1 )?v2 )))):named a160 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Bool_nat_fun$ ))(= (fun_app$n (comp$d (fun_app$j (comp$a ?v0 )?v1 ))?v2 )(fun_app$i (comp$ ?v0 )(fun_app$n (comp$d ?v1 )?v2 )))):named a161 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$r (comp$g (fun_app$l (comp$b ?v0 )?v1 ))?v2 )(fun_app$l (comp$b ?v0 )(fun_app$r (comp$g ?v1 )?v2 )))):named a162 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Bool_nat_fun$ )(?v2 Nat_bool_fun$ ))(= (fun_app$j (comp$a (fun_app$n (comp$d ?v0 )?v1 ))?v2 )(fun_app$o (comp$e ?v0 )(fun_app$m (comp$c ?v1 )?v2 )))):named a163 ))
(assert (! (forall ((?v0 Bool_nat_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$p (comp$f (fun_app$m (comp$c ?v0 )?v1 ))?v2 )(fun_app$m (comp$c ?v0 )(fun_app$o (comp$e ?v1 )?v2 )))):named a164 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$p (comp$f (fun_app$p (comp$f ?v0 )?v1 ))?v2 )(fun_app$p (comp$f ?v0 )(fun_app$p (comp$f ?v1 )?v2 )))):named a165 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ ))(= (fun_app$i (comp$ (fun_app$i (comp$ ?v0 )?v1 ))?v2 )(fun_app$i (comp$ ?v0 )(fun_app$i (comp$ ?v1 )?v2 )))):named a166 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$o (comp$e (fun_app$o (comp$e ?v0 )?v1 ))?v2 )(fun_app$o (comp$e ?v0 )(fun_app$p (comp$f ?v1 )?v2 )))):named a167 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Bool_stream_bool_stream_fun$ )(?v2 Nat_bool_stream_fun$ ))(= (fun_app$l (comp$b (fun_app$s (comp$h ?v0 )?v1 ))?v2 )(fun_app$l (comp$b ?v0 )(fun_app$l (comp$b ?v1 )?v2 )))):named a168 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$o (comp$e (fun_app$j (comp$a ?v0 )?v1 ))?v2 )(fun_app$j (comp$a ?v0 )(fun_app$o (comp$e ?v1 )?v2 )))):named a169 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Nat_bool_fun$ ))(= (fun_app$j (comp$a (fun_app$i (comp$ ?v0 )?v1 ))?v2 )(fun_app$j (comp$a ?v0 )(fun_app$j (comp$a ?v1 )?v2 )))):named a170 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (fun_app$a (plus$a ?v0 )?v1 )?v2 )(= ?v0 (fun_app$a (minus$ ?v2 )?v1 )))):named a171 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (times$ ?v0 )?v1 )(ite (= ?v0 zero$ )zero$ (fun_app$a (plus$a ?v1 )(fun_app$a (times$ (fun_app$a (minus$ ?v0 )one$ ))?v1 ))))):named a172 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_bool_stream_stream_fun$ )(?v4 Nat_nat_fun$ ))(= (fun_app$t (comp$i (smap$c ?v0 ))(fun_app$u (fun_app$v (fun_app$w (corec_stream$ ?v1 )?v2 )?v3 )?v4 ))(fun_app$u (fun_app$v (fun_app$w (corec_stream$ (fun_app$l (comp$b ?v0 )?v1 ))?v2 )(fun_app$t (comp$i (smap$c ?v0 ))?v3 ))?v4 ))):named a173 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_stream_fun$ )(?v4 Nat_nat_fun$ ))(= (fun_app$x (comp$j (smap$b ?v0 ))(fun_app$y (fun_app$z (fun_app$aa (corec_stream$a ?v1 )?v2 )?v3 )?v4 ))(fun_app$y (fun_app$z (fun_app$aa (corec_stream$a (fun_app$p (comp$f ?v0 )?v1 ))?v2 )(fun_app$x (comp$j (smap$b ?v0 ))?v3 ))?v4 ))):named a174 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_stream_fun$ )(?v4 Bool_bool_fun$ ))(= (fun_app$ab (comp$k (smap$ ?v0 ))(fun_app$ac (fun_app$ad (fun_app$ae (corec_stream$b ?v1 )?v2 )?v3 )?v4 ))(fun_app$ac (fun_app$ad (fun_app$ae (corec_stream$b (fun_app$i (comp$ ?v0 )?v1 ))?v2 )(fun_app$ab (comp$k (smap$ ?v0 ))?v3 ))?v4 ))):named a175 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_stream_fun$ )(?v4 Nat_nat_fun$ ))(= (fun_app$af (comp$l (smap$a ?v0 ))(fun_app$y (fun_app$z (fun_app$aa (corec_stream$a ?v1 )?v2 )?v3 )?v4 ))(fun_app$r (fun_app$ag (fun_app$ah (corec_stream$c (fun_app$o (comp$e ?v0 )?v1 ))?v2 )(fun_app$af (comp$l (smap$a ?v0 ))?v3 ))?v4 ))):named a176 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_bool_stream_fun$ )(?v4 Nat_nat_fun$ ))(= (fun_app$l (comp$b (smap$ ?v0 ))(fun_app$r (fun_app$ag (fun_app$ah (corec_stream$c ?v1 )?v2 )?v3 )?v4 ))(fun_app$r (fun_app$ag (fun_app$ah (corec_stream$c (fun_app$j (comp$a ?v0 )?v1 ))?v2 )(fun_app$l (comp$b (smap$ ?v0 ))?v3 ))?v4 ))):named a177 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (plus$a zero$ )?v0 )?v0 )):named a178 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (plus$a zero$ )?v0 )?v0 )):named a179 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (plus$a ?v0 )zero$ )?v0 )):named a180 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (plus$a ?v0 )zero$ )?v0 )):named a181 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ zero$ )?v0 )zero$ )):named a182 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ ?v0 )zero$ )zero$ )):named a183 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (fun_app$a (times$ ?v0 )?v1 )zero$ )(or (= ?v0 zero$ )(= ?v1 zero$ )))):named a184 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (minus$ ?v0 )zero$ )?v0 )):named a185 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (minus$ ?v0 )zero$ )?v0 )):named a186 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$a (minus$ ?v0 )?v0 )zero$ ):pattern ((minus$ ?v0 )))):named a187 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (minus$ zero$ )?v0 )zero$ )):named a188 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$a (plus$a ?v0 )zero$ )?v0 ):pattern ((plus$a ?v0 )))):named a189 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (fun_app$a (plus$a ?v0 )?v1 )zero$ )(and (= ?v0 zero$ )(= ?v1 zero$ )))):named a190 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$a (minus$ zero$ )?v0 )zero$ ):pattern ((fun_app$a (minus$ zero$ )?v0 )))):named a191 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$a (minus$ ?v0 )?v0 )zero$ ):pattern ((minus$ ?v0 )))):named a192 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$a (times$ ?v0 )zero$ )zero$ ):pattern ((times$ ?v0 )))):named a193 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (fun_app$a (times$ ?v0 )?v1 )zero$ )(or (= ?v0 zero$ )(= ?v1 zero$ )))):named a194 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$a (times$ ?v0 )?v1 )(fun_app$a (times$ ?v0 )?v2 ))(or (= ?v1 ?v2 )(= ?v0 zero$ )))):named a195 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$a (times$ ?v0 )?v1 )(fun_app$a (times$ ?v2 )?v1 ))(or (= ?v0 ?v2 )(= ?v1 zero$ )))):named a196 ))
(assert (! (= (of_bool$ false )zero$ ):named a197 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (minus$ ?v0 )(fun_app$a (plus$a ?v0 )?v1 ))zero$ )):named a198 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (and (= (fun_app$a (minus$ ?v0 )?v1 )zero$ )(= (fun_app$a (minus$ ?v1 )?v0 )zero$ ))(= ?v0 ?v1 ))):named a199 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$a (minus$ ?v0 )zero$ )?v0 ):pattern ((minus$ ?v0 )))):named a200 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$a (times$ zero$ )?v0 )zero$ ):pattern ((fun_app$a (times$ zero$ )?v0 )))):named a201 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$a (times$ ?v0 )?v1 )(fun_app$a (times$ ?v0 )?v2 ))(or (= ?v0 zero$ )(= ?v1 ?v2 )))):named a202 ))
(assert (! (forall ((?v0 Nat$ ))(=> (and (=> (= ?v0 zero$ )false )(=> (not (= ?v0 zero$ ))false ))false )):named a203 ))
(assert (! (forall ((?v0 Nat$ ))(= (= zero$ ?v0 )(= ?v0 zero$ ))):named a204 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_stream_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(! (= (fun_app$q (fun_app$r (fun_app$ag (fun_app$ah (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 )(fun_app$q (fun_app$r (fun_app$ag (fun_app$ah (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 )):pattern ((fun_app$q (fun_app$r (fun_app$ag (fun_app$ah (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 )))):named a205 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (= (fun_app$a (plus$a ?v0 )?v1 )?v0 )(= ?v1 zero$ ))):named a206 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$a (plus$a zero$ )?v0 )?v0 ):pattern ((fun_app$a (plus$a zero$ )?v0 )))):named a207 ))
(assert (! (not (= zero$ one$ )):named a208 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (and (not (= ?v0 zero$ ))(not (= ?v1 zero$ )))(not (= (fun_app$a (times$ ?v0 )?v1 )zero$ )))):named a209 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (not (= (fun_app$a (times$ ?v0 )?v1 )zero$ ))(and (not (= ?v0 zero$ ))(not (= ?v1 zero$ ))))):named a210 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (= (fun_app$a (times$ ?v0 )?v1 )zero$ )(or (= ?v0 zero$ )(= ?v1 zero$ )))):named a211 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ zero$ )?v0 )zero$ )):named a212 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (times$ ?v0 )zero$ )zero$ )):named a213 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (plus$a zero$ )?v0 )?v0 )):named a214 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$a (plus$a ?v0 )zero$ )?v0 )):named a215 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= ?v0 (fun_app$a (plus$a ?v0 )?v1 ))(= ?v1 zero$ ))):named a216 ))
(assert (! (= zero$ zero$ ):named a217 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_stream_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(= (stl$b (fun_app$q (fun_app$r (fun_app$ag (fun_app$ah (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 ))(ite (fun_app$d ?v1 ?v4 )(fun_app$q ?v2 ?v4 )(fun_app$q (fun_app$r (fun_app$ag (fun_app$ah (corec_stream$c ?v0 )?v1 )?v2 )?v3 )(fun_app$a ?v3 ?v4 ))))):named a218 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_stream_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(= (shd$b (fun_app$q (fun_app$r (fun_app$ag (fun_app$ah (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 ))(fun_app$d ?v0 ?v4 ))):named a219 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_stream_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(= (fun_app$q (fun_app$r (fun_app$ag (fun_app$ah (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 )(fun_app$f (sCons$b (fun_app$d ?v0 ?v4 ))(ite (fun_app$d ?v1 ?v4 )(fun_app$q ?v2 ?v4 )(fun_app$q (fun_app$r (fun_app$ag (fun_app$ah (corec_stream$c ?v0 )?v1 )?v2 )?v3 )(fun_app$a ?v3 ?v4 )))))):named a220 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ )(?v4 Nat$ ))(=> (and (not (= ?v0 zero$ ))(and (= ?v1 ?v2 )(not (= ?v3 ?v4 ))))(not (= (fun_app$a (plus$a ?v1 )(fun_app$a (times$ ?v0 )?v3 ))(fun_app$a (plus$a ?v2 )(fun_app$a (times$ ?v0 )?v4 )))))):named a221 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (minus$ ?v0 )(fun_app$a (plus$a ?v0 )?v1 ))zero$ )):named a222 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (= ?v0 (fun_app$a (times$ ?v0 )?v1 ))(or (= ?v1 one$ )(= ?v0 zero$ )))):named a223 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Bool ))(= (fun_app$d ?v0 (of_bool$ ?v1 ))(not (or (and ?v1 (not (fun_app$d ?v0 one$ )))(and (not ?v1 )(not (fun_app$d ?v0 zero$ ))))))):named a224 ))
(assert (! (forall ((?v0 Bool ))(! (= (of_bool$ ?v0 )(ite ?v0 one$ zero$ )):pattern ((of_bool$ ?v0 )))):named a225 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Bool ))(= (fun_app$d ?v0 (of_bool$ ?v1 ))(and (=> ?v1 (fun_app$d ?v0 one$ ))(=> (not ?v1 )(fun_app$d ?v0 zero$ ))))):named a226 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$a (plus$a ?v0 )?v1 )(ite (= ?v0 zero$ )?v1 (suc$ (fun_app$a (plus$a (fun_app$a (minus$ ?v0 )one$ ))?v1 ))))):named a227 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a228 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a229 ))
(check-sat )
(get-unsat-core )
