(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort Nat$ 0 )
(declare-sort Nat_set$ 0 )
(declare-sort Bool_set$ 0 )
(declare-sort Bool_stream$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort Num_num_fun$ 0 )
(declare-sort Bool_nat_fun$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-sort Num_bool_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort Nat_stream_set$ 0 )
(declare-sort Bool_stream_set$ 0 )
(declare-sort Nat_nat_stream_fun$ 0 )
(declare-sort Nat_stream_nat_fun$ 0 )
(declare-sort Bool_nat_stream_fun$ 0 )
(declare-sort Nat_bool_stream_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun$ 0 )
(declare-sort Nat_stream_bool_fun$ 0 )
(declare-sort Bool_bool_stream_fun$ 0 )
(declare-sort Nat_stream_stream_set$ 0 )
(declare-sort Nat_nat_stream_stream_fun$ 0 )
(declare-sort Nat_stream_nat_stream_fun$ 0 )
(declare-sort Nat_stream_stream_nat_fun$ 0 )
(declare-sort Nat_bool_stream_stream_fun$ 0 )
(declare-sort Nat_nat_nat_stream_fun_fun$ 0 )
(declare-sort Nat_nat_stream_nat_fun_fun$ 0 )
(declare-sort Nat_stream_bool_stream_fun$ 0 )
(declare-sort Nat_stream_nat_nat_fun_fun$ 0 )
(declare-sort Nat_stream_stream_bool_fun$ 0 )
(declare-sort Bool_stream_bool_stream_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_fun$ 0 )
(declare-sort Nat_bool_fun_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_bool_fun_fun$ 0 )
(declare-sort Nat_stream_stream_stream_set$ 0 )
(declare-sort Nat_bool_fun_nat_bool_fun_fun$ 0 )
(declare-sort Bool_nat_fun_bool_bool_fun_fun$ 0 )
(declare-sort Bool_bool_fun_bool_bool_fun_fun$ 0 )
(declare-sort Nat_stream_nat_stream_stream_fun$ 0 )
(declare-sort Nat_stream_stream_nat_stream_fun$ 0 )
(declare-sort Nat_nat_stream_nat_stream_fun_fun$ 0 )
(declare-sort Nat_stream_nat_nat_stream_fun_fun$ 0 )
(declare-sort Nat_stream_nat_stream_nat_fun_fun$ 0 )
(declare-sort Nat_stream_stream_stream_bool_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_stream_fun_fun$ 0 )
(declare-sort Nat_stream_nat_stream_bool_fun_fun$ 0 )
(declare-sort Nat_bool_fun_nat_nat_stream_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_bool_stream_fun_fun$ 0 )
(declare-sort Nat_nat_nat_fun_nat_nat_fun_fun_fun$ 0 )
(declare-sort Nat_nat_stream_fun_nat_bool_fun_fun$ 0 )
(declare-sort Bool_bool_fun_bool_bool_stream_fun_fun$ 0 )
(declare-sort Nat_stream_nat_stream_nat_stream_fun_fun$ 0 )
(declare-sort Bool_stream_stream_bool_stream_stream_fun$ 0 )
(declare-sort Nat_nat_stream_fun_nat_nat_stream_fun_fun$ 0 )
(declare-sort Nat_stream_nat_fun_nat_stream_nat_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_bool_stream_stream_fun_fun$ 0 )
(declare-sort Nat_nat_stream_fun_nat_bool_stream_fun_fun$ 0 )
(declare-sort Nat_stream_nat_fun_nat_stream_bool_fun_fun$ 0 )
(declare-sort Nat_bool_stream_fun_nat_bool_stream_fun_fun$ 0 )
(declare-sort Nat_stream_bool_fun_nat_stream_bool_fun_fun$ 0 )
(declare-sort Bool_bool_stream_fun_bool_bool_stream_fun_fun$ 0 )
(declare-sort Nat_stream_nat_stream_nat_stream_stream_fun_fun$ 0 )
(declare-sort Nat_stream_nat_stream_stream_nat_stream_fun_fun$ 0 )
(declare-sort Nat_stream_stream_nat_stream_nat_stream_fun_fun$ 0 )
(declare-sort Nat_stream_stream_nat_stream_stream_bool_fun_fun$ 0 )
(declare-sort Nat_stream_stream_nat_stream_nat_stream_stream_fun_fun$ 0 )
(declare-sort Nat_stream_stream_nat_stream_stream_nat_stream_fun_fun$ 0 )
(declare-sort Nat_bool_stream_stream_fun_nat_bool_stream_stream_fun_fun$ 0 )
(declare-sort Nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun$ 0 )
(declare-sort Bool_stream_bool_stream_fun_bool_stream_bool_stream_fun_fun$ 0 )
(declare-sort Nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun$ 0 )
(declare-sort Bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun$ 0 )
(declare-sort Nat_bool_fun_nat_bool_fun_fun_nat_bool_fun_nat_bool_fun_fun_fun$ 0 )
(declare-sort Nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun$ 0 )
(declare-sort Nat_bool_fun_nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun_fun$ 0 )
(declare-sort Nat_bool_fun_nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun_fun$ 0 )
(declare-sort Bool_bool_fun_bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun_fun$ 0 )
(declare-sort Nat_bool_fun_nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun_fun$ 0 )
(declare-sort Nat_stream$ 0)
(declare-sort Nat_stream_stream$ 0)
(declare-sort Nat_stream_stream_stream$ 0)
(declare-sort Bool_stream_stream$ 0)
(declare-fun shd$ (Nat_stream$)Nat$)
(declare-fun stl$ (Nat_stream$)Nat_stream$)
(declare-fun sCons$ (Nat$ Nat_stream$ )Nat_stream$)
(declare-fun shd$a (Nat_stream_stream$)Nat_stream$)
(declare-fun stl$a (Nat_stream_stream$)Nat_stream_stream$)
(declare-fun sCons$a (Nat_stream$ Nat_stream_stream$ )Nat_stream_stream$)
(declare-fun shd$b (Nat_stream_stream_stream$)Nat_stream_stream$)
(declare-fun stl$b (Nat_stream_stream_stream$)Nat_stream_stream_stream$)
(declare-fun sCons$b (Nat_stream_stream$ Nat_stream_stream_stream$ )Nat_stream_stream_stream$)
(declare-fun shd$c (Bool_stream_stream$)Bool_stream$)
(declare-fun stl$c (Bool_stream_stream$)Bool_stream_stream$)
(declare-fun sCons$c (Bool_stream$ Bool_stream_stream$ )Bool_stream_stream$)
(declare-sort Num$ 0)
(declare-fun one$ ()Num$)
(declare-fun select$ (Num$)Num$)
(declare-fun bit0$ (Num$ )Num$)
(declare-fun selecta$ (Num$)Num$)
(declare-fun bit1$ (Num$ )Num$)
(declare-fun ns$ (Nat$ )Nat_stream$ )
(declare-fun uu$ (Nat_stream_stream_set$ )Nat_stream_stream_bool_fun$ )
(declare-fun inc$ (Num$ )Num$ )
(declare-fun uua$ (Nat_stream_set$ )Nat_stream_bool_fun$ )
(declare-fun uub$ (Nat_set$ )Nat_bool_fun$ )
(declare-fun uuc$ ()Bool_bool_fun$ )
(declare-fun comp$ (Bool_bool_fun$ )Bool_bool_fun_bool_bool_fun_fun$ )
(declare-fun one$a ()Nat$ )
(declare-fun ones$ ()Nat_stream$ )
(declare-fun plus$ (Nat_stream$ )Nat_stream_nat_stream_fun$ )
(declare-fun shd$d (Bool_stream$ )Bool )
(declare-fun smap$ (Bool_bool_fun$ )Bool_stream_bool_stream_fun$ )
(declare-fun stl$d (Bool_stream$ )Bool_stream$ )
(declare-fun twos$ ()Nat_stream$ )
(declare-fun zero$ ()Nat$ )
(declare-fun comp$a (Bool_bool_fun$ )Nat_stream_bool_fun_nat_stream_bool_fun_fun$ )
(declare-fun comp$b (Bool_bool_fun$ )Nat_bool_fun_nat_bool_fun_fun$ )
(declare-fun comp$c (Nat_nat_fun$ )Nat_nat_fun_nat_nat_fun_fun$ )
(declare-fun comp$d (Bool_nat_fun$ )Nat_bool_fun_nat_nat_fun_fun$ )
(declare-fun comp$e (Nat_bool_fun$ )Bool_nat_fun_bool_bool_fun_fun$ )
(declare-fun comp$f (Nat_bool_fun$ )Nat_nat_fun_nat_bool_fun_fun$ )
(declare-fun comp$g (Bool_nat_stream_fun$ )Nat_bool_fun_nat_nat_stream_fun_fun$ )
(declare-fun comp$h (Nat_stream_bool_fun$ )Nat_nat_stream_fun_nat_bool_fun_fun$ )
(declare-fun comp$i (Nat_nat_fun$ )Nat_stream_nat_fun_nat_stream_nat_fun_fun$ )
(declare-fun comp$j (Nat_bool_fun$ )Nat_stream_nat_fun_nat_stream_bool_fun_fun$ )
(declare-fun comp$k (Bool_stream_bool_stream_fun$ )Nat_bool_stream_fun_nat_bool_stream_fun_fun$ )
(declare-fun comp$l (Bool_stream_stream_bool_stream_stream_fun$ )Nat_bool_stream_stream_fun_nat_bool_stream_stream_fun_fun$ )
(declare-fun comp$m (Nat_stream_nat_stream_fun$ )Nat_nat_stream_fun_nat_nat_stream_fun_fun$ )
(declare-fun comp$n (Bool_stream_bool_stream_fun$ )Bool_bool_stream_fun_bool_bool_stream_fun_fun$ )
(declare-fun comp$o (Nat_stream_bool_stream_fun$ )Nat_nat_stream_fun_nat_bool_stream_fun_fun$ )
(declare-fun comp$p (Nat_bool_stream_fun$ )Nat_nat_fun_nat_bool_stream_fun_fun$ )
(declare-fun comp$q (Bool_stream_bool_stream_fun$ )Bool_stream_bool_stream_fun_bool_stream_bool_stream_fun_fun$ )
(declare-fun minus$ (Nat$ )Nat_nat_fun$ )
(declare-fun plus$a (Nat$ )Nat_nat_fun$ )
(declare-fun plus$b (Num$ )Num_num_fun$ )
(declare-fun smap$a (Nat_bool_fun$ )Nat_stream_bool_stream_fun$ )
(declare-fun smap$b (Nat_stream_nat_fun$ )Nat_stream_stream_nat_stream_fun$ )
(declare-fun smap$c (Nat_nat_stream_fun$ )Nat_stream_nat_stream_stream_fun$ )
(declare-fun smap$d (Nat_stream_nat_stream_fun$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun smap$e (Nat_nat_fun$ )Nat_stream_nat_stream_fun$ )
(declare-fun smap$f (Bool_nat_fun$ Bool_stream$ )Nat_stream$ )
(declare-fun smap$g (Bool_nat_stream_fun$ Bool_stream$ )Nat_stream_stream$ )
(declare-fun smap$h (Nat_stream_bool_fun$ Nat_stream_stream$ )Bool_stream$ )
(declare-fun smap$i (Nat_stream_stream_nat_fun$ Nat_stream_stream_stream$ )Nat_stream$ )
(declare-fun smap$j (Nat_nat_stream_stream_fun$ Nat_stream$ )Nat_stream_stream_stream$ )
(declare-fun smap$k (Nat_stream_stream_nat_stream_fun$ Nat_stream_stream_stream$ )Nat_stream_stream$ )
(declare-fun smap$l (Nat_stream_nat_stream_stream_fun$ Nat_stream_stream$ )Nat_stream_stream_stream$ )
(declare-fun smap$m (Bool_stream_bool_stream_fun$ )Bool_stream_stream_bool_stream_stream_fun$ )
(declare-fun smap2$ (Nat_nat_stream_nat_fun_fun$ )Nat_stream_nat_stream_stream_nat_stream_fun_fun$ )
(declare-fun compow$ ()Nat_nat_nat_fun_nat_nat_fun_fun_fun$ )
(declare-fun funpow$ ()Nat_nat_nat_fun_nat_nat_fun_fun_fun$ )
(declare-fun member$ (Nat_stream_stream$ Nat_stream_stream_set$ )Bool )
(declare-fun of_nat$ (Nat$ )Nat$ )
(declare-fun sCons$d (Bool )Bool_stream_bool_stream_fun$ )
(declare-fun scalar$ (Nat$ )Nat_stream_nat_stream_fun$ )
(declare-fun smap2$a (Nat_stream_nat_nat_fun_fun$ )Nat_stream_stream_nat_stream_nat_stream_fun_fun$ )
(declare-fun smap2$b (Nat_stream_nat_stream_nat_fun_fun$ )Nat_stream_stream_nat_stream_stream_nat_stream_fun_fun$ )
(declare-fun smap2$c (Nat_nat_nat_stream_fun_fun$ )Nat_stream_nat_stream_nat_stream_stream_fun_fun$ )
(declare-fun smap2$d (Nat_nat_stream_nat_stream_fun_fun$ Nat_stream$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun smap2$e (Nat_stream_nat_nat_stream_fun_fun$ )Nat_stream_stream_nat_stream_nat_stream_stream_fun_fun$ )
(declare-fun smap2$f (Nat_stream_nat_stream_nat_stream_fun_fun$ Nat_stream_stream$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun smap2$g (Nat_nat_nat_fun_fun$ )Nat_stream_nat_stream_nat_stream_fun_fun$ )
(declare-fun collect$ (Nat_bool_fun$ )Nat_set$ )
(declare-fun compow$a (Nat$ )Nat_bool_fun_nat_bool_fun_fun_nat_bool_fun_nat_bool_fun_fun_fun$ )
(declare-fun compow$b (Nat$ )Bool_bool_fun_bool_bool_fun_fun$ )
(declare-fun fun_app$ (Bool_bool_fun$ Bool )Bool )
(declare-fun member$a (Nat_stream$ Nat_stream_set$ )Bool )
(declare-fun member$b (Nat$ Nat_set$ )Bool )
(declare-fun member$c (Nat_stream_stream_stream$ Nat_stream_stream_stream_set$ )Bool )
(declare-fun member$d (Bool_stream$ Bool_stream_set$ )Bool )
(declare-fun member$e (Bool Bool_set$ )Bool )
(declare-fun numeral$ (Num$ )Nat$ )
(declare-fun sfilter$ (Bool_bool_fun$ )Bool_stream_bool_stream_fun$ )
(declare-fun smember$ (Nat_stream$ )Nat_stream_stream_bool_fun$ )
(declare-fun streams$ (Nat_stream_stream_set$ )Nat_stream_stream_stream_set$ )
(declare-fun collect$a (Nat_stream_bool_fun$ )Nat_stream_set$ )
(declare-fun collect$b (Nat_stream_stream_bool_fun$ )Nat_stream_stream_set$ )
(declare-fun fun_app$a (Nat_stream_stream_bool_fun$ Nat_stream_stream$ )Bool )
(declare-fun fun_app$b (Nat_stream_bool_fun$ Nat_stream$ )Bool )
(declare-fun fun_app$c (Nat_bool_fun$ Nat$ )Bool )
(declare-fun fun_app$d (Nat_stream_nat_stream_fun$ Nat_stream$ )Nat_stream$ )
(declare-fun fun_app$e (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun fun_app$f (Nat_stream_stream_nat_stream_stream_bool_fun_fun$ Nat_stream_stream$ )Nat_stream_stream_bool_fun$ )
(declare-fun fun_app$g (Nat_stream_nat_stream_bool_fun_fun$ Nat_stream$ )Nat_stream_bool_fun$ )
(declare-fun fun_app$h (Nat_stream_stream_nat_stream_fun$ Nat_stream_stream$ )Nat_stream$ )
(declare-fun fun_app$i (Nat_stream_nat_stream_stream_nat_stream_fun_fun$ Nat_stream$ )Nat_stream_stream_nat_stream_fun$ )
(declare-fun fun_app$j (Nat_stream_nat_fun$ Nat_stream$ )Nat$ )
(declare-fun fun_app$k (Nat_nat_stream_nat_fun_fun$ Nat$ )Nat_stream_nat_fun$ )
(declare-fun fun_app$l (Nat_stream_stream_nat_stream_nat_stream_fun_fun$ Nat_stream_stream$ )Nat_stream_nat_stream_fun$ )
(declare-fun fun_app$m (Nat_stream_nat_nat_fun_fun$ Nat_stream$ )Nat_nat_fun$ )
(declare-fun fun_app$n (Nat_stream_stream_nat_stream_stream_nat_stream_fun_fun$ Nat_stream_stream$ )Nat_stream_stream_nat_stream_fun$ )
(declare-fun fun_app$o (Nat_stream_nat_stream_nat_fun_fun$ Nat_stream$ )Nat_stream_nat_fun$ )
(declare-fun fun_app$p (Nat_stream_nat_stream_stream_fun$ Nat_stream$ )Nat_stream_stream$ )
(declare-fun fun_app$q (Nat_stream_nat_stream_nat_stream_stream_fun_fun$ Nat_stream$ )Nat_stream_nat_stream_stream_fun$ )
(declare-fun fun_app$r (Nat_nat_stream_fun$ Nat$ )Nat_stream$ )
(declare-fun fun_app$s (Nat_nat_nat_stream_fun_fun$ Nat$ )Nat_nat_stream_fun$ )
(declare-fun fun_app$t (Nat_nat_stream_nat_stream_fun_fun$ Nat$ )Nat_stream_nat_stream_fun$ )
(declare-fun fun_app$u (Nat_stream_stream_nat_stream_nat_stream_stream_fun_fun$ Nat_stream_stream$ )Nat_stream_nat_stream_stream_fun$ )
(declare-fun fun_app$v (Nat_stream_nat_nat_stream_fun_fun$ Nat_stream$ )Nat_nat_stream_fun$ )
(declare-fun fun_app$w (Nat_stream_nat_stream_nat_stream_fun_fun$ Nat_stream$ )Nat_stream_nat_stream_fun$ )
(declare-fun fun_app$x (Nat_nat_nat_fun_fun$ Nat$ )Nat_nat_fun$ )
(declare-fun fun_app$y (Bool_stream_bool_stream_fun$ Bool_stream$ )Bool_stream$ )
(declare-fun fun_app$z (Nat_stream_bool_stream_fun$ Nat_stream$ )Bool_stream$ )
(declare-fun sfilter$a (Nat_stream_bool_fun$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun sfilter$b (Nat_bool_fun$ )Nat_stream_nat_stream_fun$ )
(declare-fun smember$a (Nat$ )Nat_stream_bool_fun$ )
(declare-fun streams$a (Nat_stream_set$ )Nat_stream_stream_set$ )
(declare-fun streams$b (Nat_set$ )Nat_stream_set$ )
(declare-fun streams$c (Bool_set$ )Bool_stream_set$ )
(declare-fun streamsp$ (Nat_stream_bool_fun$ )Nat_stream_stream_bool_fun$ )
(declare-fun fun_app$aa (Bool_bool_fun_bool_bool_fun_fun$ Bool_bool_fun$ )Bool_bool_fun$ )
(declare-fun fun_app$ab (Nat_stream_bool_fun_nat_stream_bool_fun_fun$ Nat_stream_bool_fun$ )Nat_stream_bool_fun$ )
(declare-fun fun_app$ac (Nat_bool_fun_nat_bool_fun_fun$ Nat_bool_fun$ )Nat_bool_fun$ )
(declare-fun fun_app$ad (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun$ )Nat_nat_fun$ )
(declare-fun fun_app$ae (Nat_bool_fun_nat_nat_fun_fun$ Nat_bool_fun$ )Nat_nat_fun$ )
(declare-fun fun_app$af (Bool_nat_fun_bool_bool_fun_fun$ Bool_nat_fun$ )Bool_bool_fun$ )
(declare-fun fun_app$ag (Nat_nat_fun_nat_bool_fun_fun$ Nat_nat_fun$ )Nat_bool_fun$ )
(declare-fun fun_app$ah (Nat_bool_fun_nat_nat_stream_fun_fun$ Nat_bool_fun$ )Nat_nat_stream_fun$ )
(declare-fun fun_app$ai (Nat_nat_stream_fun_nat_bool_fun_fun$ Nat_nat_stream_fun$ )Nat_bool_fun$ )
(declare-fun fun_app$aj (Nat_stream_nat_fun_nat_stream_nat_fun_fun$ Nat_stream_nat_fun$ )Nat_stream_nat_fun$ )
(declare-fun fun_app$ak (Nat_stream_nat_fun_nat_stream_bool_fun_fun$ Nat_stream_nat_fun$ )Nat_stream_bool_fun$ )
(declare-fun fun_app$al (Nat_stream_stream_stream_bool_fun$ Nat_stream_stream_stream$ )Bool )
(declare-fun fun_app$am (Nat_stream_stream_nat_fun$ Nat_stream_stream$ )Nat$ )
(declare-fun fun_app$an (Nat_nat_stream_stream_fun$ Nat$ )Nat_stream_stream$ )
(declare-fun fun_app$ao (Nat_bool_stream_fun$ Nat$ )Bool_stream$ )
(declare-fun fun_app$ap (Nat_bool_stream_fun_nat_bool_stream_fun_fun$ Nat_bool_stream_fun$ )Nat_bool_stream_fun$ )
(declare-fun fun_app$aq (Nat_bool_stream_stream_fun_nat_bool_stream_stream_fun_fun$ Nat_bool_stream_stream_fun$ )Nat_bool_stream_stream_fun$ )
(declare-fun fun_app$ar (Nat_nat_fun_nat_bool_stream_stream_fun_fun$ Nat_nat_fun$ )Nat_bool_stream_stream_fun$ )
(declare-fun fun_app$as (Nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun$ Nat_bool_stream_stream_fun$ )Nat_nat_fun_nat_bool_stream_stream_fun_fun$ )
(declare-fun fun_app$at (Nat_bool_fun_nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun_fun$ Nat_bool_fun$ )Nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun$ )
(declare-fun fun_app$au (Nat_nat_stream_fun_nat_nat_stream_fun_fun$ Nat_nat_stream_fun$ )Nat_nat_stream_fun$ )
(declare-fun fun_app$av (Nat_nat_fun_nat_nat_stream_fun_fun$ Nat_nat_fun$ )Nat_nat_stream_fun$ )
(declare-fun fun_app$aw (Nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun$ Nat_nat_stream_fun$ )Nat_nat_fun_nat_nat_stream_fun_fun$ )
(declare-fun fun_app$ax (Nat_bool_fun_nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun_fun$ Nat_bool_fun$ )Nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun$ )
(declare-fun fun_app$ay (Bool_bool_stream_fun_bool_bool_stream_fun_fun$ Bool_bool_stream_fun$ )Bool_bool_stream_fun$ )
(declare-fun fun_app$az (Bool_bool_fun_bool_bool_stream_fun_fun$ Bool_bool_fun$ )Bool_bool_stream_fun$ )
(declare-fun fun_app$ba (Bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun$ Bool_bool_stream_fun$ )Bool_bool_fun_bool_bool_stream_fun_fun$ )
(declare-fun fun_app$bb (Bool_bool_fun_bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun_fun$ Bool_bool_fun$ )Bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun$ )
(declare-fun fun_app$bc (Nat_nat_stream_fun_nat_bool_stream_fun_fun$ Nat_nat_stream_fun$ )Nat_bool_stream_fun$ )
(declare-fun fun_app$bd (Nat_nat_fun_nat_bool_stream_fun_fun$ Nat_nat_fun$ )Nat_bool_stream_fun$ )
(declare-fun fun_app$be (Nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun$ Nat_bool_stream_fun$ )Nat_nat_fun_nat_bool_stream_fun_fun$ )
(declare-fun fun_app$bf (Nat_bool_fun_nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun_fun$ Nat_bool_fun$ )Nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun$ )
(declare-fun fun_app$bg (Bool_stream_bool_stream_fun_bool_stream_bool_stream_fun_fun$ Bool_stream_bool_stream_fun$ )Bool_stream_bool_stream_fun$ )
(declare-fun fun_app$bh (Bool_nat_fun$ Bool )Nat$ )
(declare-fun fun_app$bi (Nat_nat_nat_fun_nat_nat_fun_fun_fun$ Nat$ )Nat_nat_fun_nat_nat_fun_fun$ )
(declare-fun fun_app$bj (Num_num_fun$ Num$ )Num$ )
(declare-fun fun_app$bk (Nat_bool_fun_nat_bool_fun_fun_nat_bool_fun_nat_bool_fun_fun_fun$ Nat_bool_fun_nat_bool_fun_fun$ )Nat_bool_fun_nat_bool_fun_fun$ )
(declare-fun fun_app$bl (Num_bool_fun$ Num$ )Bool )
(declare-fun streamsp$a (Nat_bool_fun$ )Nat_stream_bool_fun$ )
(declare-fun stream_all$ (Nat_stream_bool_fun$ )Nat_stream_stream_bool_fun$ )
(declare-fun pred_stream$ (Nat_stream_bool_fun$ )Nat_stream_stream_bool_fun$ )
(declare-fun sdrop_while$ (Nat_stream_bool_fun$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun sinterleave$ (Nat_stream_stream$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun stream_all$a (Nat_bool_fun$ )Nat_stream_bool_fun$ )
(declare-fun corec_stream$ (Nat_bool_stream_fun$ )Nat_bool_fun_nat_bool_stream_stream_fun_nat_nat_fun_nat_bool_stream_stream_fun_fun_fun_fun$ )
(declare-fun pred_stream$a (Nat_bool_fun$ )Nat_stream_bool_fun$ )
(declare-fun sdrop_while$a (Nat_bool_fun$ )Nat_stream_nat_stream_fun$ )
(declare-fun sdrop_while$b (Bool_bool_fun$ )Bool_stream_bool_stream_fun$ )
(declare-fun sinterleave$a (Nat_stream$ )Nat_stream_nat_stream_fun$ )
(declare-fun corec_stream$a (Nat_nat_fun$ )Nat_bool_fun_nat_nat_stream_fun_nat_nat_fun_nat_nat_stream_fun_fun_fun_fun$ )
(declare-fun corec_stream$b (Bool_bool_fun$ )Bool_bool_fun_bool_bool_stream_fun_bool_bool_fun_bool_bool_stream_fun_fun_fun_fun$ )
(declare-fun corec_stream$c (Nat_bool_fun$ )Nat_bool_fun_nat_bool_stream_fun_nat_nat_fun_nat_bool_stream_fun_fun_fun_fun$ )
(assert (! (forall ((?v0 Bool ))(! (= (fun_app$ uuc$ ?v0 )(not ?v0 )):pattern ((fun_app$ uuc$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 Nat_stream_stream_set$ )(?v1 Nat_stream_stream$ ))(! (= (fun_app$a (uu$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$a (uu$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 Nat_stream_set$ )(?v1 Nat_stream$ ))(! (= (fun_app$b (uua$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$b (uua$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 Nat$ ))(! (= (fun_app$c (uub$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$c (uub$ ?v0 )?v1 )))):named a3 ))
(assert (! (not (= (fun_app$d (plus$ ones$ )ones$ )twos$ )):named a4 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (ns$ ?v0 )(fun_app$d (scalar$ ?v0 )ones$ )):pattern ((ns$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (stl$ (fun_app$d (plus$ ?v0 )?v1 ))(fun_app$d (plus$ (stl$ ?v0 ))(stl$ ?v1 )))):named a6 ))
(assert (! (= (stl$ twos$ )twos$ ):named a7 ))
(assert (! (= (stl$ ones$ )ones$ ):named a8 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (shd$ (fun_app$d (plus$ ?v0 )?v1 ))(fun_app$e (plus$a (shd$ ?v0 ))(shd$ ?v1 )))):named a9 ))
(assert (! (= ones$ (sCons$ one$a ones$ )):named a10 ))
(assert (! (= (shd$ ones$ )one$a ):named a11 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (fun_app$d (plus$ ?v0 )?v1 )(sCons$ (fun_app$e (plus$a (shd$ ?v0 ))(shd$ ?v1 ))(fun_app$d (plus$ (stl$ ?v0 ))(stl$ ?v1 ))))):named a12 ))
(assert (! (forall ((?v0 Nat_stream_stream$ ))(= (sCons$a (shd$a ?v0 )(stl$a ?v0 ))?v0 )):named a13 ))
(assert (! (forall ((?v0 Nat_stream$ ))(= (sCons$ (shd$ ?v0 )(stl$ ?v0 ))?v0 )):named a14 ))
(assert (! (forall ((?v0 Nat_stream_stream$ ))(=> (=> (= ?v0 (sCons$a (shd$a ?v0 )(stl$a ?v0 )))false )false )):named a15 ))
(assert (! (forall ((?v0 Nat_stream$ ))(=> (=> (= ?v0 (sCons$ (shd$ ?v0 )(stl$ ?v0 )))false )false )):named a16 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream$ )(?v3 Nat_stream_stream$ ))(= (= (sCons$a ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a17 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a18 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$e (plus$a ?v0 )?v1 )(fun_app$e (plus$a ?v2 )?v1 ))(= ?v0 ?v2 ))):named a19 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$e (plus$a ?v0 )?v1 )(fun_app$e (plus$a ?v0 )?v2 ))(= ?v1 ?v2 ))):named a20 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream_stream$ ))(! (= (shd$a (sCons$a ?v0 ?v1 ))?v0 ):pattern ((sCons$a ?v0 ?v1 )))):named a21 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_stream$ ))(! (= (shd$ (sCons$ ?v0 ?v1 ))?v0 ):pattern ((sCons$ ?v0 ?v1 )))):named a22 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream_stream$ ))(! (= (stl$a (sCons$a ?v0 ?v1 ))?v1 ):pattern ((sCons$a ?v0 ?v1 )))):named a23 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_stream$ ))(! (= (stl$ (sCons$ ?v0 ?v1 ))?v1 ):pattern ((sCons$ ?v0 ?v1 )))):named a24 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream$ ))(=> (and (= (shd$a ?v0 )(shd$a ?v1 ))(= (stl$a ?v0 )(stl$a ?v1 )))(= ?v0 ?v1 ))):named a25 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(=> (and (= (shd$ ?v0 )(shd$ ?v1 ))(= (stl$ ?v0 )(stl$ ?v1 )))(= ?v0 ?v1 ))):named a26 ))
(assert (! (forall ((?v0 Nat_stream_stream_nat_stream_stream_bool_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(=> (and (fun_app$a (fun_app$f ?v0 ?v1 )?v2 )(forall ((?v3 Nat_stream_stream$ )(?v4 Nat_stream_stream$ ))(=> (fun_app$a (fun_app$f ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(or (fun_app$a (fun_app$f ?v0 (stl$a ?v3 ))(stl$a ?v4 ))(= (stl$a ?v3 )(stl$a ?v4 )))))))(= ?v1 ?v2 ))):named a27 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_bool_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(=> (and (fun_app$b (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v3 Nat_stream$ )(?v4 Nat_stream$ ))(=> (fun_app$b (fun_app$g ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(or (fun_app$b (fun_app$g ?v0 (stl$ ?v3 ))(stl$ ?v4 ))(= (stl$ ?v3 )(stl$ ?v4 )))))))(= ?v1 ?v2 ))):named a28 ))
(assert (! (forall ((?v0 Nat_stream_stream_nat_stream_stream_bool_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(=> (and (fun_app$a (fun_app$f ?v0 ?v1 )?v2 )(forall ((?v3 Nat_stream_stream$ )(?v4 Nat_stream_stream$ ))(=> (fun_app$a (fun_app$f ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(fun_app$a (fun_app$f ?v0 (stl$a ?v3 ))(stl$a ?v4 ))))))(= ?v1 ?v2 ))):named a29 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_bool_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(=> (and (fun_app$b (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v3 Nat_stream$ )(?v4 Nat_stream$ ))(=> (fun_app$b (fun_app$g ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(fun_app$b (fun_app$g ?v0 (stl$ ?v3 ))(stl$ ?v4 ))))))(= ?v1 ?v2 ))):named a30 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(=> (and (= ?v0 ?v1 )(= ?v2 ?v3 ))(= (fun_app$e (plus$a ?v0 )?v2 )(fun_app$e (plus$a ?v1 )?v3 )))):named a31 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (fun_app$e (plus$a ?v0 )?v1 )(fun_app$e (plus$a ?v0 )?v2 ))(= ?v1 ?v2 ))):named a32 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (fun_app$e (plus$a ?v0 )?v1 )(fun_app$e (plus$a ?v0 )?v2 ))(= ?v1 ?v2 ))):named a33 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (fun_app$e (plus$a ?v0 )?v1 )(fun_app$e (plus$a ?v2 )?v1 ))(= ?v0 ?v2 ))):named a34 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$e (plus$a ?v0 )?v1 )(fun_app$e (plus$a ?v1 )?v0 ))):named a35 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (plus$a ?v0 )(fun_app$e (plus$a ?v1 )?v2 ))(fun_app$e (plus$a ?v1 )(fun_app$e (plus$a ?v0 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (plus$a (fun_app$e (plus$a ?v0 )?v1 ))?v2 )(fun_app$e (plus$a ?v0 )(fun_app$e (plus$a ?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (plus$a (fun_app$e (plus$a ?v0 )?v1 ))?v2 )(fun_app$e (plus$a ?v0 )(fun_app$e (plus$a ?v1 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 Nat$ ))(= (= one$a ?v0 )(= ?v0 one$a ))):named a39 ))
(assert (! (forall ((?v0 Nat_stream_stream$ ))(=> (forall ((?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(=> (= ?v0 (sCons$a ?v1 ?v2 ))false ))false )):named a40 ))
(assert (! (forall ((?v0 Nat_stream$ ))(=> (forall ((?v1 Nat$ )(?v2 Nat_stream$ ))(=> (= ?v0 (sCons$ ?v1 ?v2 ))false ))false )):named a41 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(! (= (fun_app$a (smember$ ?v0 )(sCons$a ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$a (smember$ ?v0 )?v2 ))):pattern ((fun_app$a (smember$ ?v0 )(sCons$a ?v1 ?v2 ))))):named a42 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (fun_app$b (smember$a ?v0 )(sCons$ ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$b (smember$a ?v0 )?v2 ))):pattern ((fun_app$b (smember$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a43 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream$ ))(= (sinterleave$ ?v0 ?v1 )(sCons$a (shd$a ?v0 )(sinterleave$ ?v1 (stl$a ?v0 ))))):named a44 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (fun_app$d (sinterleave$a ?v0 )?v1 )(sCons$ (shd$ ?v0 )(fun_app$d (sinterleave$a ?v1 )(stl$ ?v0 ))))):named a45 ))
(assert (! (forall ((?v0 Nat_nat_stream_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(= (fun_app$h (fun_app$i (smap2$ ?v0 )?v1 )?v2 )(sCons$ (fun_app$j (fun_app$k ?v0 (shd$ ?v1 ))(shd$a ?v2 ))(fun_app$h (fun_app$i (smap2$ ?v0 )(stl$ ?v1 ))(stl$a ?v2 ))))):named a46 ))
(assert (! (forall ((?v0 Nat_stream_nat_nat_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream$ ))(= (fun_app$d (fun_app$l (smap2$a ?v0 )?v1 )?v2 )(sCons$ (fun_app$e (fun_app$m ?v0 (shd$a ?v1 ))(shd$ ?v2 ))(fun_app$d (fun_app$l (smap2$a ?v0 )(stl$a ?v1 ))(stl$ ?v2 ))))):named a47 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_nat_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(= (fun_app$h (fun_app$n (smap2$b ?v0 )?v1 )?v2 )(sCons$ (fun_app$j (fun_app$o ?v0 (shd$a ?v1 ))(shd$a ?v2 ))(fun_app$h (fun_app$n (smap2$b ?v0 )(stl$a ?v1 ))(stl$a ?v2 ))))):named a48 ))
(assert (! (forall ((?v0 Nat_nat_nat_stream_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (fun_app$p (fun_app$q (smap2$c ?v0 )?v1 )?v2 )(sCons$a (fun_app$r (fun_app$s ?v0 (shd$ ?v1 ))(shd$ ?v2 ))(fun_app$p (fun_app$q (smap2$c ?v0 )(stl$ ?v1 ))(stl$ ?v2 ))))):named a49 ))
(assert (! (forall ((?v0 Nat_nat_stream_nat_stream_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(= (smap2$d ?v0 ?v1 ?v2 )(sCons$a (fun_app$d (fun_app$t ?v0 (shd$ ?v1 ))(shd$a ?v2 ))(smap2$d ?v0 (stl$ ?v1 )(stl$a ?v2 ))))):named a50 ))
(assert (! (forall ((?v0 Nat_stream_nat_nat_stream_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream$ ))(= (fun_app$p (fun_app$u (smap2$e ?v0 )?v1 )?v2 )(sCons$a (fun_app$r (fun_app$v ?v0 (shd$a ?v1 ))(shd$ ?v2 ))(fun_app$p (fun_app$u (smap2$e ?v0 )(stl$a ?v1 ))(stl$ ?v2 ))))):named a51 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_nat_stream_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(= (smap2$f ?v0 ?v1 ?v2 )(sCons$a (fun_app$d (fun_app$w ?v0 (shd$a ?v1 ))(shd$a ?v2 ))(smap2$f ?v0 (stl$a ?v1 )(stl$a ?v2 ))))):named a52 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (fun_app$d (fun_app$w (smap2$g ?v0 )?v1 )?v2 )(sCons$ (fun_app$e (fun_app$x ?v0 (shd$ ?v1 ))(shd$ ?v2 ))(fun_app$d (fun_app$w (smap2$g ?v0 )(stl$ ?v1 ))(stl$ ?v2 ))))):named a53 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(! (= (fun_app$a (pred_stream$ ?v0 )(sCons$a ?v1 ?v2 ))(and (fun_app$b ?v0 ?v1 )(fun_app$a (pred_stream$ ?v0 )?v2 ))):pattern ((fun_app$a (pred_stream$ ?v0 )(sCons$a ?v1 ?v2 ))))):named a54 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (fun_app$b (pred_stream$a ?v0 )(sCons$ ?v1 ?v2 ))(and (fun_app$c ?v0 ?v1 )(fun_app$b (pred_stream$a ?v0 )?v2 ))):pattern ((fun_app$b (pred_stream$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a55 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream_stream$ ))(= (sdrop_while$ ?v0 ?v1 )(ite (fun_app$b ?v0 (shd$a ?v1 ))(sdrop_while$ ?v0 (stl$a ?v1 ))?v1 ))):named a56 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (fun_app$d (sdrop_while$a ?v0 )?v1 )(ite (fun_app$c ?v0 (shd$ ?v1 ))(fun_app$d (sdrop_while$a ?v0 )(stl$ ?v1 ))?v1 ))):named a57 ))
(assert (! (= one$a one$a ):named a58 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ )(?v2 Bool )(?v3 Bool_stream$ ))(= (= (fun_app$y (smap$ ?v0 )?v1 )(fun_app$y (sCons$d ?v2 )?v3 ))(and (= (fun_app$ ?v0 (shd$d ?v1 ))?v2 )(= (fun_app$y (smap$ ?v0 )(stl$d ?v1 ))?v3 )))):named a59 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ )(?v2 Bool )(?v3 Bool_stream$ ))(= (= (fun_app$z (smap$a ?v0 )?v1 )(fun_app$y (sCons$d ?v2 )?v3 ))(and (= (fun_app$c ?v0 (shd$ ?v1 ))?v2 )(= (fun_app$z (smap$a ?v0 )(stl$ ?v1 ))?v3 )))):named a60 ))
(assert (! (forall ((?v0 Nat_stream_nat_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(= (= (fun_app$h (smap$b ?v0 )?v1 )(sCons$ ?v2 ?v3 ))(and (= (fun_app$j ?v0 (shd$a ?v1 ))?v2 )(= (fun_app$h (smap$b ?v0 )(stl$a ?v1 ))?v3 )))):named a61 ))
(assert (! (forall ((?v0 Nat_nat_stream_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ )(?v3 Nat_stream_stream$ ))(= (= (fun_app$p (smap$c ?v0 )?v1 )(sCons$a ?v2 ?v3 ))(and (= (fun_app$r ?v0 (shd$ ?v1 ))?v2 )(= (fun_app$p (smap$c ?v0 )(stl$ ?v1 ))?v3 )))):named a62 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream$ )(?v3 Nat_stream_stream$ ))(= (= (smap$d ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= (fun_app$d ?v0 (shd$a ?v1 ))?v2 )(= (smap$d ?v0 (stl$a ?v1 ))?v3 )))):named a63 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(= (= (fun_app$d (smap$e ?v0 )?v1 )(sCons$ ?v2 ?v3 ))(and (= (fun_app$e ?v0 (shd$ ?v1 ))?v2 )(= (fun_app$d (smap$e ?v0 )(stl$ ?v1 ))?v3 )))):named a64 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ ))(= (stl$d (fun_app$y (smap$ ?v0 )?v1 ))(fun_app$y (smap$ ?v0 )(stl$d ?v1 )))):named a65 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (stl$d (fun_app$z (smap$a ?v0 )?v1 ))(fun_app$z (smap$a ?v0 )(stl$ ?v1 )))):named a66 ))
(assert (! (forall ((?v0 Nat_nat_stream_fun$ )(?v1 Nat_stream$ ))(= (stl$a (fun_app$p (smap$c ?v0 )?v1 ))(fun_app$p (smap$c ?v0 )(stl$ ?v1 )))):named a67 ))
(assert (! (forall ((?v0 Nat_stream_nat_fun$ )(?v1 Nat_stream_stream$ ))(= (stl$ (fun_app$h (smap$b ?v0 )?v1 ))(fun_app$h (smap$b ?v0 )(stl$a ?v1 )))):named a68 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_fun$ )(?v1 Nat_stream_stream$ ))(= (stl$a (smap$d ?v0 ?v1 ))(smap$d ?v0 (stl$a ?v1 )))):named a69 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_stream$ ))(= (stl$ (fun_app$d (smap$e ?v0 )?v1 ))(fun_app$d (smap$e ?v0 )(stl$ ?v1 )))):named a70 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ ))(= (shd$d (fun_app$y (smap$ ?v0 )?v1 ))(fun_app$ ?v0 (shd$d ?v1 )))):named a71 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (shd$d (fun_app$z (smap$a ?v0 )?v1 ))(fun_app$c ?v0 (shd$ ?v1 )))):named a72 ))
(assert (! (forall ((?v0 Nat_nat_stream_fun$ )(?v1 Nat_stream$ ))(= (shd$a (fun_app$p (smap$c ?v0 )?v1 ))(fun_app$r ?v0 (shd$ ?v1 )))):named a73 ))
(assert (! (forall ((?v0 Nat_stream_nat_fun$ )(?v1 Nat_stream_stream$ ))(= (shd$ (fun_app$h (smap$b ?v0 )?v1 ))(fun_app$j ?v0 (shd$a ?v1 )))):named a74 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_fun$ )(?v1 Nat_stream_stream$ ))(= (shd$a (smap$d ?v0 ?v1 ))(fun_app$d ?v0 (shd$a ?v1 )))):named a75 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_stream$ ))(= (shd$ (fun_app$d (smap$e ?v0 )?v1 ))(fun_app$e ?v0 (shd$ ?v1 )))):named a76 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool )(?v2 Bool_stream$ ))(! (= (fun_app$y (smap$ ?v0 )(fun_app$y (sCons$d ?v1 )?v2 ))(fun_app$y (sCons$d (fun_app$ ?v0 ?v1 ))(fun_app$y (smap$ ?v0 )?v2 ))):pattern ((fun_app$y (smap$ ?v0 )(fun_app$y (sCons$d ?v1 )?v2 ))))):named a77 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (fun_app$z (smap$a ?v0 )(sCons$ ?v1 ?v2 ))(fun_app$y (sCons$d (fun_app$c ?v0 ?v1 ))(fun_app$z (smap$a ?v0 )?v2 ))):pattern ((fun_app$z (smap$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a78 ))
(assert (! (forall ((?v0 Nat_nat_stream_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (fun_app$p (smap$c ?v0 )(sCons$ ?v1 ?v2 ))(sCons$a (fun_app$r ?v0 ?v1 )(fun_app$p (smap$c ?v0 )?v2 ))):pattern ((fun_app$p (smap$c ?v0 )(sCons$ ?v1 ?v2 ))))):named a79 ))
(assert (! (forall ((?v0 Nat_stream_nat_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(! (= (fun_app$h (smap$b ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ (fun_app$j ?v0 ?v1 )(fun_app$h (smap$b ?v0 )?v2 ))):pattern ((fun_app$h (smap$b ?v0 )(sCons$a ?v1 ?v2 ))))):named a80 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(! (= (smap$d ?v0 (sCons$a ?v1 ?v2 ))(sCons$a (fun_app$d ?v0 ?v1 )(smap$d ?v0 ?v2 ))):pattern ((smap$d ?v0 (sCons$a ?v1 ?v2 ))))):named a81 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (fun_app$d (smap$e ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ (fun_app$e ?v0 ?v1 )(fun_app$d (smap$e ?v0 )?v2 ))):pattern ((fun_app$d (smap$e ?v0 )(sCons$ ?v1 ?v2 ))))):named a82 ))
(assert (! (forall ((?v0 Nat_nat_stream_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(= (stl$ (fun_app$h (fun_app$i (smap2$ ?v0 )?v1 )?v2 ))(fun_app$h (fun_app$i (smap2$ ?v0 )(stl$ ?v1 ))(stl$a ?v2 )))):named a83 ))
(assert (! (forall ((?v0 Nat_stream_nat_nat_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream$ ))(= (stl$ (fun_app$d (fun_app$l (smap2$a ?v0 )?v1 )?v2 ))(fun_app$d (fun_app$l (smap2$a ?v0 )(stl$a ?v1 ))(stl$ ?v2 )))):named a84 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_nat_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(= (stl$ (fun_app$h (fun_app$n (smap2$b ?v0 )?v1 )?v2 ))(fun_app$h (fun_app$n (smap2$b ?v0 )(stl$a ?v1 ))(stl$a ?v2 )))):named a85 ))
(assert (! (forall ((?v0 Nat_nat_nat_stream_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (stl$a (fun_app$p (fun_app$q (smap2$c ?v0 )?v1 )?v2 ))(fun_app$p (fun_app$q (smap2$c ?v0 )(stl$ ?v1 ))(stl$ ?v2 )))):named a86 ))
(assert (! (forall ((?v0 Nat_nat_stream_nat_stream_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(= (stl$a (smap2$d ?v0 ?v1 ?v2 ))(smap2$d ?v0 (stl$ ?v1 )(stl$a ?v2 )))):named a87 ))
(assert (! (forall ((?v0 Nat_stream_nat_nat_stream_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream$ ))(= (stl$a (fun_app$p (fun_app$u (smap2$e ?v0 )?v1 )?v2 ))(fun_app$p (fun_app$u (smap2$e ?v0 )(stl$a ?v1 ))(stl$ ?v2 )))):named a88 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_nat_stream_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(= (stl$a (smap2$f ?v0 ?v1 ?v2 ))(smap2$f ?v0 (stl$a ?v1 )(stl$a ?v2 )))):named a89 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (stl$ (fun_app$d (fun_app$w (smap2$g ?v0 )?v1 )?v2 ))(fun_app$d (fun_app$w (smap2$g ?v0 )(stl$ ?v1 ))(stl$ ?v2 )))):named a90 ))
(assert (! (forall ((?v0 Nat_nat_stream_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(= (shd$ (fun_app$h (fun_app$i (smap2$ ?v0 )?v1 )?v2 ))(fun_app$j (fun_app$k ?v0 (shd$ ?v1 ))(shd$a ?v2 )))):named a91 ))
(assert (! (forall ((?v0 Nat_stream_nat_nat_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream$ ))(= (shd$ (fun_app$d (fun_app$l (smap2$a ?v0 )?v1 )?v2 ))(fun_app$e (fun_app$m ?v0 (shd$a ?v1 ))(shd$ ?v2 )))):named a92 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_nat_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(= (shd$ (fun_app$h (fun_app$n (smap2$b ?v0 )?v1 )?v2 ))(fun_app$j (fun_app$o ?v0 (shd$a ?v1 ))(shd$a ?v2 )))):named a93 ))
(assert (! (forall ((?v0 Nat_nat_nat_stream_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (shd$a (fun_app$p (fun_app$q (smap2$c ?v0 )?v1 )?v2 ))(fun_app$r (fun_app$s ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a94 ))
(assert (! (forall ((?v0 Nat_nat_stream_nat_stream_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(= (shd$a (smap2$d ?v0 ?v1 ?v2 ))(fun_app$d (fun_app$t ?v0 (shd$ ?v1 ))(shd$a ?v2 )))):named a95 ))
(assert (! (forall ((?v0 Nat_stream_nat_nat_stream_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream$ ))(= (shd$a (fun_app$p (fun_app$u (smap2$e ?v0 )?v1 )?v2 ))(fun_app$r (fun_app$v ?v0 (shd$a ?v1 ))(shd$ ?v2 )))):named a96 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_nat_stream_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(= (shd$a (smap2$f ?v0 ?v1 ?v2 ))(fun_app$d (fun_app$w ?v0 (shd$a ?v1 ))(shd$a ?v2 )))):named a97 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (shd$ (fun_app$d (fun_app$w (smap2$g ?v0 )?v1 )?v2 ))(fun_app$e (fun_app$x ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a98 ))
(assert (! (forall ((?v0 Nat_nat_nat_stream_fun_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ )(?v3 Nat$ )(?v4 Nat_stream$ ))(! (= (fun_app$p (fun_app$q (smap2$c ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))(sCons$a (fun_app$r (fun_app$s ?v0 ?v1 )?v3 )(fun_app$p (fun_app$q (smap2$c ?v0 )?v2 )?v4 ))):pattern ((fun_app$p (fun_app$q (smap2$c ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))))):named a99 ))
(assert (! (forall ((?v0 Nat_nat_stream_nat_fun_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ )(?v3 Nat_stream$ )(?v4 Nat_stream_stream$ ))(! (= (fun_app$h (fun_app$i (smap2$ ?v0 )(sCons$ ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))(sCons$ (fun_app$j (fun_app$k ?v0 ?v1 )?v3 )(fun_app$h (fun_app$i (smap2$ ?v0 )?v2 )?v4 ))):pattern ((fun_app$h (fun_app$i (smap2$ ?v0 )(sCons$ ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))))):named a100 ))
(assert (! (forall ((?v0 Nat_nat_stream_nat_stream_fun_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ )(?v3 Nat_stream$ )(?v4 Nat_stream_stream$ ))(! (= (smap2$d ?v0 (sCons$ ?v1 ?v2 )(sCons$a ?v3 ?v4 ))(sCons$a (fun_app$d (fun_app$t ?v0 ?v1 )?v3 )(smap2$d ?v0 ?v2 ?v4 ))):pattern ((smap2$d ?v0 (sCons$ ?v1 ?v2 )(sCons$a ?v3 ?v4 ))))):named a101 ))
(assert (! (forall ((?v0 Nat_stream_nat_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ )(?v3 Nat$ )(?v4 Nat_stream$ ))(! (= (fun_app$d (fun_app$l (smap2$a ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))(sCons$ (fun_app$e (fun_app$m ?v0 ?v1 )?v3 )(fun_app$d (fun_app$l (smap2$a ?v0 )?v2 )?v4 ))):pattern ((fun_app$d (fun_app$l (smap2$a ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))))):named a102 ))
(assert (! (forall ((?v0 Nat_stream_nat_nat_stream_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ )(?v3 Nat$ )(?v4 Nat_stream$ ))(! (= (fun_app$p (fun_app$u (smap2$e ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))(sCons$a (fun_app$r (fun_app$v ?v0 ?v1 )?v3 )(fun_app$p (fun_app$u (smap2$e ?v0 )?v2 )?v4 ))):pattern ((fun_app$p (fun_app$u (smap2$e ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))))):named a103 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ )(?v3 Nat_stream$ )(?v4 Nat_stream_stream$ ))(! (= (fun_app$h (fun_app$n (smap2$b ?v0 )(sCons$a ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))(sCons$ (fun_app$j (fun_app$o ?v0 ?v1 )?v3 )(fun_app$h (fun_app$n (smap2$b ?v0 )?v2 )?v4 ))):pattern ((fun_app$h (fun_app$n (smap2$b ?v0 )(sCons$a ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))))):named a104 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_nat_stream_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ )(?v3 Nat_stream$ )(?v4 Nat_stream_stream$ ))(! (= (smap2$f ?v0 (sCons$a ?v1 ?v2 )(sCons$a ?v3 ?v4 ))(sCons$a (fun_app$d (fun_app$w ?v0 ?v1 )?v3 )(smap2$f ?v0 ?v2 ?v4 ))):pattern ((smap2$f ?v0 (sCons$a ?v1 ?v2 )(sCons$a ?v3 ?v4 ))))):named a105 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ )(?v3 Nat$ )(?v4 Nat_stream$ ))(! (= (fun_app$d (fun_app$w (smap2$g ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))(sCons$ (fun_app$e (fun_app$x ?v0 ?v1 )?v3 )(fun_app$d (fun_app$w (smap2$g ?v0 )?v2 )?v4 ))):pattern ((fun_app$d (fun_app$w (smap2$g ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))))):named a106 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_bool_fun$ ))(=> (forall ((?v2 Nat$ ))(= (fun_app$c ?v0 ?v2 )(fun_app$c ?v1 ?v2 )))(= (collect$ ?v0 )(collect$ ?v1 )))):named a107 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream_bool_fun$ ))(=> (forall ((?v2 Nat_stream$ ))(= (fun_app$b ?v0 ?v2 )(fun_app$b ?v1 ?v2 )))(= (collect$a ?v0 )(collect$a ?v1 )))):named a108 ))
(assert (! (forall ((?v0 Nat_stream_stream_set$ ))(= (collect$b (uu$ ?v0 ))?v0 )):named a109 ))
(assert (! (forall ((?v0 Nat_stream_set$ ))(= (collect$a (uua$ ?v0 ))?v0 )):named a110 ))
(assert (! (forall ((?v0 Nat_set$ ))(= (collect$ (uub$ ?v0 ))?v0 )):named a111 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream_bool_fun$ ))(= (member$ ?v0 (collect$b ?v1 ))(fun_app$a ?v1 ?v0 ))):named a112 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream_bool_fun$ ))(= (member$a ?v0 (collect$a ?v1 ))(fun_app$b ?v1 ?v0 ))):named a113 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_bool_fun$ ))(= (member$b ?v0 (collect$ ?v1 ))(fun_app$c ?v1 ?v0 ))):named a114 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(! (= (sdrop_while$ ?v0 (sCons$a ?v1 ?v2 ))(ite (fun_app$b ?v0 ?v1 )(sdrop_while$ ?v0 ?v2 )(sCons$a ?v1 ?v2 ))):pattern ((sdrop_while$ ?v0 (sCons$a ?v1 ?v2 ))))):named a115 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (fun_app$d (sdrop_while$a ?v0 )(sCons$ ?v1 ?v2 ))(ite (fun_app$c ?v0 ?v1 )(fun_app$d (sdrop_while$a ?v0 )?v2 )(sCons$ ?v1 ?v2 ))):pattern ((fun_app$d (sdrop_while$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a116 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream$ ))(= (stl$a (sinterleave$ ?v0 ?v1 ))(sinterleave$ ?v1 (stl$a ?v0 )))):named a117 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (stl$ (fun_app$d (sinterleave$a ?v0 )?v1 ))(fun_app$d (sinterleave$a ?v1 )(stl$ ?v0 )))):named a118 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream$ ))(= (shd$a (sinterleave$ ?v0 ?v1 ))(shd$a ?v0 ))):named a119 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (shd$ (fun_app$d (sinterleave$a ?v0 )?v1 ))(shd$ ?v0 ))):named a120 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(! (= (sinterleave$ (sCons$a ?v0 ?v1 )?v2 )(sCons$a ?v0 (sinterleave$ ?v2 ?v1 ))):pattern ((sinterleave$ (sCons$a ?v0 ?v1 )?v2 )))):named a121 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(! (= (fun_app$d (sinterleave$a (sCons$ ?v0 ?v1 ))?v2 )(sCons$ ?v0 (fun_app$d (sinterleave$a ?v2 )?v1 ))):pattern ((fun_app$d (sinterleave$a (sCons$ ?v0 ?v1 ))?v2 )))):named a122 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$e (plus$a ?v0 )?v1 )(fun_app$e (plus$a ?v2 )?v1 ))(= ?v0 ?v2 ))):named a123 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$e (plus$a ?v0 )?v1 )(fun_app$e (plus$a ?v0 )?v2 ))(= ?v1 ?v2 ))):named a124 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (fun_app$e (plus$a (fun_app$e (plus$a ?v0 )?v1 ))(fun_app$e (plus$a ?v2 )?v3 ))(fun_app$e (plus$a (fun_app$e (plus$a ?v0 )?v2 ))(fun_app$e (plus$a ?v1 )?v3 )))):named a125 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (plus$a (fun_app$e (plus$a ?v0 )?v1 ))?v2 )(fun_app$e (plus$a (fun_app$e (plus$a ?v0 )?v2 ))?v1 ))):named a126 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (plus$a (fun_app$e (plus$a ?v0 )?v1 ))?v2 )(fun_app$e (plus$a ?v0 )(fun_app$e (plus$a ?v1 )?v2 )))):named a127 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (plus$a ?v0 )(fun_app$e (plus$a ?v1 )?v2 ))(fun_app$e (plus$a (fun_app$e (plus$a ?v0 )?v1 ))?v2 ))):named a128 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$e (plus$a ?v0 )?v1 )(fun_app$e (plus$a ?v1 )?v0 ))):named a129 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (plus$a ?v0 )(fun_app$e (plus$a ?v1 )?v2 ))(fun_app$e (plus$a ?v1 )(fun_app$e (plus$a ?v0 )?v2 )))):named a130 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ ))(= (fun_app$y (sfilter$ ?v0 )?v1 )(fun_app$y (sCons$d (shd$d (fun_app$y (sdrop_while$b (fun_app$aa (comp$ uuc$ )?v0 ))?v1 )))(fun_app$y (sfilter$ ?v0 )(stl$d (fun_app$y (sdrop_while$b (fun_app$aa (comp$ uuc$ )?v0 ))?v1 )))))):named a131 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream_stream$ ))(= (sfilter$a ?v0 ?v1 )(sCons$a (shd$a (sdrop_while$ (fun_app$ab (comp$a uuc$ )?v0 )?v1 ))(sfilter$a ?v0 (stl$a (sdrop_while$ (fun_app$ab (comp$a uuc$ )?v0 )?v1 )))))):named a132 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (fun_app$d (sfilter$b ?v0 )?v1 )(sCons$ (shd$ (fun_app$d (sdrop_while$a (fun_app$ac (comp$b uuc$ )?v0 ))?v1 ))(fun_app$d (sfilter$b ?v0 )(stl$ (fun_app$d (sdrop_while$a (fun_app$ac (comp$b uuc$ )?v0 ))?v1 )))))):named a133 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_set$ ))(=> (and (member$c ?v0 (streams$ ?v1 ))(=> (and (member$ (shd$b ?v0 )?v1 )(member$c (stl$b ?v0 )(streams$ ?v1 )))false ))false )):named a134 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_set$ ))(=> (and (member$ ?v0 (streams$a ?v1 ))(=> (and (member$a (shd$a ?v0 )?v1 )(member$ (stl$a ?v0 )(streams$a ?v1 )))false ))false )):named a135 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_set$ ))(=> (and (member$a ?v0 (streams$b ?v1 ))(=> (and (member$b (shd$ ?v0 )?v1 )(member$a (stl$ ?v0 )(streams$b ?v1 )))false ))false )):named a136 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_set$ ))(=> (and (member$c (stl$b ?v0 )(streams$ ?v1 ))(member$ (shd$b ?v0 )?v1 ))(member$c ?v0 (streams$ ?v1 )))):named a137 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_set$ ))(=> (and (member$ (stl$a ?v0 )(streams$a ?v1 ))(member$a (shd$a ?v0 )?v1 ))(member$ ?v0 (streams$a ?v1 )))):named a138 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_set$ ))(=> (and (member$a (stl$ ?v0 )(streams$b ?v1 ))(member$b (shd$ ?v0 )?v1 ))(member$a ?v0 (streams$b ?v1 )))):named a139 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(! (= (fun_app$a (stream_all$ ?v0 )(sCons$a ?v1 ?v2 ))(and (fun_app$b ?v0 ?v1 )(fun_app$a (stream_all$ ?v0 )?v2 ))):pattern ((fun_app$a (stream_all$ ?v0 )(sCons$a ?v1 ?v2 ))))):named a140 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (fun_app$b (stream_all$a ?v0 )(sCons$ ?v1 ?v2 ))(and (fun_app$c ?v0 ?v1 )(fun_app$b (stream_all$a ?v0 )?v2 ))):pattern ((fun_app$b (stream_all$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a141 ))
(assert (! (forall ((?v0 Nat_stream_stream_bool_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_bool_fun$ ))(=> (and (fun_app$a ?v0 ?v1 )(forall ((?v3 Nat_stream_stream$ ))(=> (fun_app$a ?v0 ?v3 )(exists ((?v4 Nat_stream$ )(?v5 Nat_stream_stream$ ))(and (= ?v3 (sCons$a ?v4 ?v5 ))(and (fun_app$b ?v2 ?v4 )(or (fun_app$a ?v0 ?v5 )(fun_app$a (streamsp$ ?v2 )?v5 ))))))))(fun_app$a (streamsp$ ?v2 )?v1 ))):named a142 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream$ )(?v2 Nat_bool_fun$ ))(=> (and (fun_app$b ?v0 ?v1 )(forall ((?v3 Nat_stream$ ))(=> (fun_app$b ?v0 ?v3 )(exists ((?v4 Nat$ )(?v5 Nat_stream$ ))(and (= ?v3 (sCons$ ?v4 ?v5 ))(and (fun_app$c ?v2 ?v4 )(or (fun_app$b ?v0 ?v5 )(fun_app$b (streamsp$a ?v2 )?v5 ))))))))(fun_app$b (streamsp$a ?v2 )?v1 ))):named a143 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_stream$ ))(= (fun_app$y (smap$ ?v0 )(fun_app$z (smap$a ?v1 )?v2 ))(fun_app$z (smap$a (fun_app$ac (comp$b ?v0 )?v1 ))?v2 ))):named a144 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_stream$ ))(= (fun_app$d (smap$e ?v0 )(fun_app$d (smap$e ?v1 )?v2 ))(fun_app$d (smap$e (fun_app$ad (comp$c ?v0 )?v1 ))?v2 ))):named a145 ))
(assert (! (forall ((?v0 Bool_nat_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_stream$ ))(= (smap$f ?v0 (fun_app$z (smap$a ?v1 )?v2 ))(fun_app$d (smap$e (fun_app$ae (comp$d ?v0 )?v1 ))?v2 ))):named a146 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_stream$ ))(= (fun_app$y (smap$ ?v0 )(fun_app$y (smap$ ?v1 )?v2 ))(fun_app$y (smap$ (fun_app$aa (comp$ ?v0 )?v1 ))?v2 ))):named a147 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Bool_nat_fun$ )(?v2 Bool_stream$ ))(= (fun_app$z (smap$a ?v0 )(smap$f ?v1 ?v2 ))(fun_app$y (smap$ (fun_app$af (comp$e ?v0 )?v1 ))?v2 ))):named a148 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_stream$ ))(= (fun_app$z (smap$a ?v0 )(fun_app$d (smap$e ?v1 )?v2 ))(fun_app$z (smap$a (fun_app$ag (comp$f ?v0 )?v1 ))?v2 ))):named a149 ))
(assert (! (forall ((?v0 Bool_nat_stream_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_stream$ ))(= (smap$g ?v0 (fun_app$z (smap$a ?v1 )?v2 ))(fun_app$p (smap$c (fun_app$ah (comp$g ?v0 )?v1 ))?v2 ))):named a150 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_nat_stream_fun$ )(?v2 Nat_stream$ ))(= (smap$h ?v0 (fun_app$p (smap$c ?v1 )?v2 ))(fun_app$z (smap$a (fun_app$ai (comp$h ?v0 )?v1 ))?v2 ))):named a151 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_stream_nat_fun$ )(?v2 Nat_stream_stream$ ))(= (fun_app$d (smap$e ?v0 )(fun_app$h (smap$b ?v1 )?v2 ))(fun_app$h (smap$b (fun_app$aj (comp$i ?v0 )?v1 ))?v2 ))):named a152 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream_nat_fun$ )(?v2 Nat_stream_stream$ ))(= (fun_app$z (smap$a ?v0 )(fun_app$h (smap$b ?v1 )?v2 ))(smap$h (fun_app$ak (comp$j ?v0 )?v1 )?v2 ))):named a153 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ ))(= (stl$d (fun_app$y (sfilter$ ?v0 )?v1 ))(fun_app$y (sfilter$ ?v0 )(stl$d (fun_app$y (sdrop_while$b (fun_app$aa (comp$ uuc$ )?v0 ))?v1 ))))):named a154 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream_stream$ ))(= (stl$a (sfilter$a ?v0 ?v1 ))(sfilter$a ?v0 (stl$a (sdrop_while$ (fun_app$ab (comp$a uuc$ )?v0 )?v1 ))))):named a155 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (stl$ (fun_app$d (sfilter$b ?v0 )?v1 ))(fun_app$d (sfilter$b ?v0 )(stl$ (fun_app$d (sdrop_while$a (fun_app$ac (comp$b uuc$ )?v0 ))?v1 ))))):named a156 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_stream$ ))(= (shd$d (fun_app$y (sfilter$ ?v0 )?v1 ))(shd$d (fun_app$y (sdrop_while$b (fun_app$aa (comp$ uuc$ )?v0 ))?v1 )))):named a157 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream_stream$ ))(= (shd$a (sfilter$a ?v0 ?v1 ))(shd$a (sdrop_while$ (fun_app$ab (comp$a uuc$ )?v0 )?v1 )))):named a158 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (shd$ (fun_app$d (sfilter$b ?v0 )?v1 ))(shd$ (fun_app$d (sdrop_while$a (fun_app$ac (comp$b uuc$ )?v0 ))?v1 )))):named a159 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_set$ ))(=> (member$ ?v0 (streams$a ?v1 ))(member$ (stl$a ?v0 )(streams$a ?v1 )))):named a160 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_set$ ))(=> (member$a ?v0 (streams$b ?v1 ))(member$a (stl$ ?v0 )(streams$b ?v1 )))):named a161 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_set$ ))(=> (member$c ?v0 (streams$ ?v1 ))(member$ (shd$b ?v0 )?v1 ))):named a162 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_set$ ))(=> (member$ ?v0 (streams$a ?v1 ))(member$a (shd$a ?v0 )?v1 ))):named a163 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_set$ ))(=> (member$a ?v0 (streams$b ?v1 ))(member$b (shd$ ?v0 )?v1 ))):named a164 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream_stream$ )(?v2 Nat_stream_stream_set$ ))(= (member$c (sCons$b ?v0 ?v1 )(streams$ ?v2 ))(and (member$ ?v0 ?v2 )(member$c ?v1 (streams$ ?v2 ))))):named a165 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_set$ ))(= (member$ (sCons$a ?v0 ?v1 )(streams$a ?v2 ))(and (member$a ?v0 ?v2 )(member$ ?v1 (streams$a ?v2 ))))):named a166 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_stream$ )(?v2 Nat_set$ ))(= (member$a (sCons$ ?v0 ?v1 )(streams$b ?v2 ))(and (member$b ?v0 ?v2 )(member$a ?v1 (streams$b ?v2 ))))):named a167 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_set$ ))(= (member$c ?v0 (streams$ ?v1 ))(exists ((?v2 Nat_stream_stream$ )(?v3 Nat_stream_stream_stream$ ))(and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$c ?v3 (streams$ ?v1 ))))))):named a168 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_set$ ))(= (member$ ?v0 (streams$a ?v1 ))(exists ((?v2 Nat_stream$ )(?v3 Nat_stream_stream$ ))(and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$ ?v3 (streams$a ?v1 ))))))):named a169 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_set$ ))(= (member$a ?v0 (streams$b ?v1 ))(exists ((?v2 Nat$ )(?v3 Nat_stream$ ))(and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$a ?v3 (streams$b ?v1 ))))))):named a170 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_set$ ))(=> (and (member$c ?v0 (streams$ ?v1 ))(forall ((?v2 Nat_stream_stream$ )(?v3 Nat_stream_stream_stream$ ))(=> (and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$c ?v3 (streams$ ?v1 ))))false )))false )):named a171 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_set$ ))(=> (and (member$ ?v0 (streams$a ?v1 ))(forall ((?v2 Nat_stream$ )(?v3 Nat_stream_stream$ ))(=> (and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$ ?v3 (streams$a ?v1 ))))false )))false )):named a172 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_set$ ))(=> (and (member$a ?v0 (streams$b ?v1 ))(forall ((?v2 Nat$ )(?v3 Nat_stream$ ))(=> (and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$a ?v3 (streams$b ?v1 ))))false )))false )):named a173 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream_bool_fun$ )(?v1 Nat_stream_stream_stream$ )(?v2 Nat_stream_stream_set$ ))(=> (and (fun_app$al ?v0 ?v1 )(forall ((?v3 Nat_stream_stream_stream$ ))(=> (fun_app$al ?v0 ?v3 )(exists ((?v4 Nat_stream_stream$ )(?v5 Nat_stream_stream_stream$ ))(and (= ?v3 (sCons$b ?v4 ?v5 ))(and (member$ ?v4 ?v2 )(or (fun_app$al ?v0 ?v5 )(member$c ?v5 (streams$ ?v2 )))))))))(member$c ?v1 (streams$ ?v2 )))):named a174 ))
(assert (! (forall ((?v0 Nat_stream_stream_bool_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_set$ ))(=> (and (fun_app$a ?v0 ?v1 )(forall ((?v3 Nat_stream_stream$ ))(=> (fun_app$a ?v0 ?v3 )(exists ((?v4 Nat_stream$ )(?v5 Nat_stream_stream$ ))(and (= ?v3 (sCons$a ?v4 ?v5 ))(and (member$a ?v4 ?v2 )(or (fun_app$a ?v0 ?v5 )(member$ ?v5 (streams$a ?v2 )))))))))(member$ ?v1 (streams$a ?v2 )))):named a175 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream$ )(?v2 Nat_set$ ))(=> (and (fun_app$b ?v0 ?v1 )(forall ((?v3 Nat_stream$ ))(=> (fun_app$b ?v0 ?v3 )(exists ((?v4 Nat$ )(?v5 Nat_stream$ ))(and (= ?v3 (sCons$ ?v4 ?v5 ))(and (member$b ?v4 ?v2 )(or (fun_app$b ?v0 ?v5 )(member$a ?v5 (streams$b ?v2 )))))))))(member$a ?v1 (streams$b ?v2 )))):named a176 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_set$ )(?v2 Nat_nat_fun$ )(?v3 Nat_set$ ))(=> (and (member$a ?v0 (streams$b ?v1 ))(forall ((?v4 Nat$ ))(=> (member$b ?v4 ?v1 )(member$b (fun_app$e ?v2 ?v4 )?v3 ))))(member$a (fun_app$d (smap$e ?v2 )?v0 )(streams$b ?v3 )))):named a177 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_set$ )(?v2 Nat_stream_nat_fun$ )(?v3 Nat_set$ ))(=> (and (member$ ?v0 (streams$a ?v1 ))(forall ((?v4 Nat_stream$ ))(=> (member$a ?v4 ?v1 )(member$b (fun_app$j ?v2 ?v4 )?v3 ))))(member$a (fun_app$h (smap$b ?v2 )?v0 )(streams$b ?v3 )))):named a178 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_set$ )(?v2 Nat_nat_stream_fun$ )(?v3 Nat_stream_set$ ))(=> (and (member$a ?v0 (streams$b ?v1 ))(forall ((?v4 Nat$ ))(=> (member$b ?v4 ?v1 )(member$a (fun_app$r ?v2 ?v4 )?v3 ))))(member$ (fun_app$p (smap$c ?v2 )?v0 )(streams$a ?v3 )))):named a179 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_set$ )(?v2 Nat_stream_nat_stream_fun$ )(?v3 Nat_stream_set$ ))(=> (and (member$ ?v0 (streams$a ?v1 ))(forall ((?v4 Nat_stream$ ))(=> (member$a ?v4 ?v1 )(member$a (fun_app$d ?v2 ?v4 )?v3 ))))(member$ (smap$d ?v2 ?v0 )(streams$a ?v3 )))):named a180 ))
(assert (! (forall ((?v0 Bool_stream$ )(?v1 Bool_set$ )(?v2 Bool_bool_fun$ )(?v3 Bool_set$ ))(=> (and (member$d ?v0 (streams$c ?v1 ))(forall ((?v4 Bool ))(=> (member$e ?v4 ?v1 )(member$e (fun_app$ ?v2 ?v4 )?v3 ))))(member$d (fun_app$y (smap$ ?v2 )?v0 )(streams$c ?v3 )))):named a181 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_set$ )(?v2 Nat_bool_fun$ )(?v3 Bool_set$ ))(=> (and (member$a ?v0 (streams$b ?v1 ))(forall ((?v4 Nat$ ))(=> (member$b ?v4 ?v1 )(member$e (fun_app$c ?v2 ?v4 )?v3 ))))(member$d (fun_app$z (smap$a ?v2 )?v0 )(streams$c ?v3 )))):named a182 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_set$ )(?v2 Nat_stream_stream_nat_fun$ )(?v3 Nat_set$ ))(=> (and (member$c ?v0 (streams$ ?v1 ))(forall ((?v4 Nat_stream_stream$ ))(=> (member$ ?v4 ?v1 )(member$b (fun_app$am ?v2 ?v4 )?v3 ))))(member$a (smap$i ?v2 ?v0 )(streams$b ?v3 )))):named a183 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_set$ )(?v2 Nat_nat_stream_stream_fun$ )(?v3 Nat_stream_stream_set$ ))(=> (and (member$a ?v0 (streams$b ?v1 ))(forall ((?v4 Nat$ ))(=> (member$b ?v4 ?v1 )(member$ (fun_app$an ?v2 ?v4 )?v3 ))))(member$c (smap$j ?v2 ?v0 )(streams$ ?v3 )))):named a184 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_set$ )(?v2 Nat_stream_stream_nat_stream_fun$ )(?v3 Nat_stream_set$ ))(=> (and (member$c ?v0 (streams$ ?v1 ))(forall ((?v4 Nat_stream_stream$ ))(=> (member$ ?v4 ?v1 )(member$a (fun_app$h ?v2 ?v4 )?v3 ))))(member$ (smap$k ?v2 ?v0 )(streams$a ?v3 )))):named a185 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_set$ )(?v2 Nat_stream_nat_stream_stream_fun$ )(?v3 Nat_stream_stream_set$ ))(=> (and (member$ ?v0 (streams$a ?v1 ))(forall ((?v4 Nat_stream$ ))(=> (member$a ?v4 ?v1 )(member$ (fun_app$p ?v2 ?v4 )?v3 ))))(member$c (smap$l ?v2 ?v0 )(streams$ ?v3 )))):named a186 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(! (= (sfilter$a ?v0 (sCons$a ?v1 ?v2 ))(ite (fun_app$b ?v0 ?v1 )(sCons$a ?v1 (sfilter$a ?v0 ?v2 ))(sfilter$a ?v0 ?v2 ))):pattern ((sfilter$a ?v0 (sCons$a ?v1 ?v2 ))))):named a187 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (fun_app$d (sfilter$b ?v0 )(sCons$ ?v1 ?v2 ))(ite (fun_app$c ?v0 ?v1 )(sCons$ ?v1 (fun_app$d (sfilter$b ?v0 )?v2 ))(fun_app$d (sfilter$b ?v0 )?v2 ))):pattern ((fun_app$d (sfilter$b ?v0 )(sCons$ ?v1 ?v2 ))))):named a188 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream_stream$ ))(= (fun_app$a (streamsp$ ?v0 )?v1 )(exists ((?v2 Nat_stream$ )(?v3 Nat_stream_stream$ ))(and (= ?v1 (sCons$a ?v2 ?v3 ))(and (fun_app$b ?v0 ?v2 )(fun_app$a (streamsp$ ?v0 )?v3 )))))):named a189 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(= (fun_app$b (streamsp$a ?v0 )?v1 )(exists ((?v2 Nat$ )(?v3 Nat_stream$ ))(and (= ?v1 (sCons$ ?v2 ?v3 ))(and (fun_app$c ?v0 ?v2 )(fun_app$b (streamsp$a ?v0 )?v3 )))))):named a190 ))
(assert (! (forall ((?v0 Nat_stream_bool_fun$ )(?v1 Nat_stream_stream$ ))(=> (and (fun_app$a (streamsp$ ?v0 )?v1 )(forall ((?v2 Nat_stream$ )(?v3 Nat_stream_stream$ ))(=> (and (= ?v1 (sCons$a ?v2 ?v3 ))(and (fun_app$b ?v0 ?v2 )(fun_app$a (streamsp$ ?v0 )?v3 )))false )))false )):named a191 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_stream$ ))(=> (and (fun_app$b (streamsp$a ?v0 )?v1 )(forall ((?v2 Nat$ )(?v3 Nat_stream$ ))(=> (and (= ?v1 (sCons$ ?v2 ?v3 ))(and (fun_app$c ?v0 ?v2 )(fun_app$b (streamsp$a ?v0 )?v3 )))false )))false )):named a192 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ ))(! (= (fun_app$e (fun_app$ad (comp$c ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$ad (comp$c ?v0 )?v1 )?v2 )))):named a193 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat$ ))(! (= (fun_app$ao (fun_app$ap (comp$k ?v0 )?v1 )?v2 )(fun_app$y ?v0 (fun_app$ao ?v1 ?v2 ))):pattern ((fun_app$ao (fun_app$ap (comp$k ?v0 )?v1 )?v2 )))):named a194 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool ))(! (= (fun_app$ (fun_app$aa (comp$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$aa (comp$ ?v0 )?v1 )?v2 )))):named a195 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ ))(! (= (fun_app$c (fun_app$ag (comp$f ?v0 )?v1 )?v2 )(fun_app$c ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$ag (comp$f ?v0 )?v1 )?v2 )))):named a196 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ ))(! (= (fun_app$c (fun_app$ac (comp$b ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$ac (comp$b ?v0 )?v1 )?v2 )))):named a197 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_bool_stream_stream_fun$ )(?v4 Nat_nat_fun$ ))(= (fun_app$aq (comp$l (smap$m ?v0 ))(fun_app$ar (fun_app$as (fun_app$at (corec_stream$ ?v1 )?v2 )?v3 )?v4 ))(fun_app$ar (fun_app$as (fun_app$at (corec_stream$ (fun_app$ap (comp$k ?v0 )?v1 ))?v2 )(fun_app$aq (comp$l (smap$m ?v0 ))?v3 ))?v4 ))):named a198 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_stream_fun$ )(?v4 Nat_nat_fun$ ))(= (fun_app$au (comp$m (smap$e ?v0 ))(fun_app$av (fun_app$aw (fun_app$ax (corec_stream$a ?v1 )?v2 )?v3 )?v4 ))(fun_app$av (fun_app$aw (fun_app$ax (corec_stream$a (fun_app$ad (comp$c ?v0 )?v1 ))?v2 )(fun_app$au (comp$m (smap$e ?v0 ))?v3 ))?v4 ))):named a199 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_stream_fun$ )(?v4 Bool_bool_fun$ ))(= (fun_app$ay (comp$n (smap$ ?v0 ))(fun_app$az (fun_app$ba (fun_app$bb (corec_stream$b ?v1 )?v2 )?v3 )?v4 ))(fun_app$az (fun_app$ba (fun_app$bb (corec_stream$b (fun_app$aa (comp$ ?v0 )?v1 ))?v2 )(fun_app$ay (comp$n (smap$ ?v0 ))?v3 ))?v4 ))):named a200 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_stream_fun$ )(?v4 Nat_nat_fun$ ))(= (fun_app$bc (comp$o (smap$a ?v0 ))(fun_app$av (fun_app$aw (fun_app$ax (corec_stream$a ?v1 )?v2 )?v3 )?v4 ))(fun_app$bd (fun_app$be (fun_app$bf (corec_stream$c (fun_app$ag (comp$f ?v0 )?v1 ))?v2 )(fun_app$bc (comp$o (smap$a ?v0 ))?v3 ))?v4 ))):named a201 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_bool_stream_fun$ )(?v4 Nat_nat_fun$ ))(= (fun_app$ap (comp$k (smap$ ?v0 ))(fun_app$bd (fun_app$be (fun_app$bf (corec_stream$c ?v1 )?v2 )?v3 )?v4 ))(fun_app$bd (fun_app$be (fun_app$bf (corec_stream$c (fun_app$ac (comp$b ?v0 )?v1 ))?v2 )(fun_app$ap (comp$k (smap$ ?v0 ))?v3 ))?v4 ))):named a202 ))
(assert (! (forall ((?v0 Bool_nat_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$ae (comp$d ?v0 )(fun_app$ag (comp$f ?v1 )?v2 ))(fun_app$ad (comp$c (fun_app$ae (comp$d ?v0 )?v1 ))?v2 ))):named a203 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$ad (comp$c ?v0 )(fun_app$ad (comp$c ?v1 )?v2 ))(fun_app$ad (comp$c (fun_app$ad (comp$c ?v0 )?v1 ))?v2 ))):named a204 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$ap (comp$k ?v0 )(fun_app$bd (comp$p ?v1 )?v2 ))(fun_app$bd (comp$p (fun_app$ap (comp$k ?v0 )?v1 ))?v2 ))):named a205 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Bool_stream_bool_stream_fun$ )(?v2 Nat_bool_stream_fun$ ))(= (fun_app$ap (comp$k ?v0 )(fun_app$ap (comp$k ?v1 )?v2 ))(fun_app$ap (comp$k (fun_app$bg (comp$q ?v0 )?v1 ))?v2 ))):named a206 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Bool_nat_fun$ ))(= (fun_app$aa (comp$ ?v0 )(fun_app$af (comp$e ?v1 )?v2 ))(fun_app$af (comp$e (fun_app$ac (comp$b ?v0 )?v1 ))?v2 ))):named a207 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ ))(= (fun_app$aa (comp$ ?v0 )(fun_app$aa (comp$ ?v1 )?v2 ))(fun_app$aa (comp$ (fun_app$aa (comp$ ?v0 )?v1 ))?v2 ))):named a208 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Bool_nat_fun$ )(?v2 Nat_bool_fun$ ))(= (fun_app$ag (comp$f ?v0 )(fun_app$ae (comp$d ?v1 )?v2 ))(fun_app$ac (comp$b (fun_app$af (comp$e ?v0 )?v1 ))?v2 ))):named a209 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$ag (comp$f ?v0 )(fun_app$ad (comp$c ?v1 )?v2 ))(fun_app$ag (comp$f (fun_app$ag (comp$f ?v0 )?v1 ))?v2 ))):named a210 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$ac (comp$b ?v0 )(fun_app$ag (comp$f ?v1 )?v2 ))(fun_app$ag (comp$f (fun_app$ac (comp$b ?v0 )?v1 ))?v2 ))):named a211 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Nat_bool_fun$ ))(= (fun_app$ac (comp$b ?v0 )(fun_app$ac (comp$b ?v1 )?v2 ))(fun_app$ac (comp$b (fun_app$aa (comp$ ?v0 )?v1 ))?v2 ))):named a212 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Bool_nat_fun$ ))(= (fun_app$af (comp$e (fun_app$ac (comp$b ?v0 )?v1 ))?v2 )(fun_app$aa (comp$ ?v0 )(fun_app$af (comp$e ?v1 )?v2 )))):named a213 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$bd (comp$p (fun_app$ap (comp$k ?v0 )?v1 ))?v2 )(fun_app$ap (comp$k ?v0 )(fun_app$bd (comp$p ?v1 )?v2 )))):named a214 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Bool_nat_fun$ )(?v2 Nat_bool_fun$ ))(= (fun_app$ac (comp$b (fun_app$af (comp$e ?v0 )?v1 ))?v2 )(fun_app$ag (comp$f ?v0 )(fun_app$ae (comp$d ?v1 )?v2 )))):named a215 ))
(assert (! (forall ((?v0 Bool_nat_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$ad (comp$c (fun_app$ae (comp$d ?v0 )?v1 ))?v2 )(fun_app$ae (comp$d ?v0 )(fun_app$ag (comp$f ?v1 )?v2 )))):named a216 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$ad (comp$c (fun_app$ad (comp$c ?v0 )?v1 ))?v2 )(fun_app$ad (comp$c ?v0 )(fun_app$ad (comp$c ?v1 )?v2 )))):named a217 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Bool_stream_bool_stream_fun$ )(?v2 Nat_bool_stream_fun$ ))(= (fun_app$ap (comp$k (fun_app$bg (comp$q ?v0 )?v1 ))?v2 )(fun_app$ap (comp$k ?v0 )(fun_app$ap (comp$k ?v1 )?v2 )))):named a218 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ ))(= (fun_app$aa (comp$ (fun_app$aa (comp$ ?v0 )?v1 ))?v2 )(fun_app$aa (comp$ ?v0 )(fun_app$aa (comp$ ?v1 )?v2 )))):named a219 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$ag (comp$f (fun_app$ag (comp$f ?v0 )?v1 ))?v2 )(fun_app$ag (comp$f ?v0 )(fun_app$ad (comp$c ?v1 )?v2 )))):named a220 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_nat_fun$ ))(= (fun_app$ag (comp$f (fun_app$ac (comp$b ?v0 )?v1 ))?v2 )(fun_app$ac (comp$b ?v0 )(fun_app$ag (comp$f ?v1 )?v2 )))):named a221 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Nat_bool_fun$ ))(= (fun_app$ac (comp$b (fun_app$aa (comp$ ?v0 )?v1 ))?v2 )(fun_app$ac (comp$b ?v0 )(fun_app$ac (comp$b ?v1 )?v2 )))):named a222 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ ))(! (= (fun_app$e (fun_app$ad (comp$c ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$ad (comp$c ?v0 )?v1 )?v2 )))):named a223 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat$ ))(! (= (fun_app$ao (fun_app$ap (comp$k ?v0 )?v1 )?v2 )(fun_app$y ?v0 (fun_app$ao ?v1 ?v2 ))):pattern ((fun_app$ao (fun_app$ap (comp$k ?v0 )?v1 )?v2 )))):named a224 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool ))(! (= (fun_app$ (fun_app$aa (comp$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$aa (comp$ ?v0 )?v1 )?v2 )))):named a225 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ ))(! (= (fun_app$c (fun_app$ag (comp$f ?v0 )?v1 )?v2 )(fun_app$c ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$ag (comp$f ?v0 )?v1 )?v2 )))):named a226 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ ))(! (= (fun_app$c (fun_app$ac (comp$b ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$ac (comp$b ?v0 )?v1 )?v2 )))):named a227 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_fun$ ))(=> (and (= (fun_app$ac (comp$b ?v0 )?v1 )(fun_app$ag (comp$f ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$ ?v0 (fun_app$c ?v1 ?v4 ))(fun_app$c ?v2 (fun_app$e ?v3 ?v4 ))))false ))false )):named a228 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun$ ))(=> (and (= (fun_app$ad (comp$c ?v0 )?v1 )(fun_app$ad (comp$c ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$e ?v0 (fun_app$e ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$e ?v3 ?v4 ))))false ))false )):named a229 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Bool_stream_bool_stream_fun$ )(?v3 Nat_bool_stream_fun$ ))(=> (and (= (fun_app$ap (comp$k ?v0 )?v1 )(fun_app$ap (comp$k ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$y ?v0 (fun_app$ao ?v1 ?v4 ))(fun_app$y ?v2 (fun_app$ao ?v3 ?v4 ))))false ))false )):named a230 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (and (= (fun_app$aa (comp$ ?v0 )?v1 )(fun_app$aa (comp$ ?v2 )?v3 ))(=> (forall ((?v4 Bool ))(= (fun_app$ ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$ ?v3 ?v4 ))))false ))false )):named a231 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ ))(=> (and (= (fun_app$ag (comp$f ?v0 )?v1 )(fun_app$ac (comp$b ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$c ?v0 (fun_app$e ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$c ?v3 ?v4 ))))false ))false )):named a232 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_fun$ ))(=> (and (= (fun_app$ag (comp$f ?v0 )?v1 )(fun_app$ag (comp$f ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$c ?v0 (fun_app$e ?v1 ?v4 ))(fun_app$c ?v2 (fun_app$e ?v3 ?v4 ))))false ))false )):named a233 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ ))(=> (and (= (fun_app$ac (comp$b ?v0 )?v1 )(fun_app$ac (comp$b ?v2 )?v3 ))(=> (forall ((?v4 Nat$ ))(= (fun_app$ ?v0 (fun_app$c ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$c ?v3 ?v4 ))))false ))false )):named a234 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_stream_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(! (= (fun_app$ao (fun_app$bd (fun_app$be (fun_app$bf (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 )(fun_app$ao (fun_app$bd (fun_app$be (fun_app$bf (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 )):pattern ((fun_app$ao (fun_app$bd (fun_app$be (fun_app$bf (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 )))):named a235 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_stream_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(= (stl$d (fun_app$ao (fun_app$bd (fun_app$be (fun_app$bf (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 ))(ite (fun_app$c ?v1 ?v4 )(fun_app$ao ?v2 ?v4 )(fun_app$ao (fun_app$bd (fun_app$be (fun_app$bf (corec_stream$c ?v0 )?v1 )?v2 )?v3 )(fun_app$e ?v3 ?v4 ))))):named a236 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_stream_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(= (shd$d (fun_app$ao (fun_app$bd (fun_app$be (fun_app$bf (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 ))(fun_app$c ?v0 ?v4 ))):named a237 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_stream_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(= (fun_app$ao (fun_app$bd (fun_app$be (fun_app$bf (corec_stream$c ?v0 )?v1 )?v2 )?v3 )?v4 )(fun_app$y (sCons$d (fun_app$c ?v0 ?v4 ))(ite (fun_app$c ?v1 ?v4 )(fun_app$ao ?v2 ?v4 )(fun_app$ao (fun_app$bd (fun_app$be (fun_app$bf (corec_stream$c ?v0 )?v1 )?v2 )?v3 )(fun_app$e ?v3 ?v4 )))))):named a238 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ )(?v3 Nat$ ))(=> (= (fun_app$ad (comp$c ?v0 )?v1 )?v2 )(= (fun_app$e ?v0 (fun_app$e ?v1 ?v3 ))(fun_app$e ?v2 ?v3 )))):named a239 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat_bool_stream_fun$ )(?v3 Nat$ ))(=> (= (fun_app$ap (comp$k ?v0 )?v1 )?v2 )(= (fun_app$y ?v0 (fun_app$ao ?v1 ?v3 ))(fun_app$ao ?v2 ?v3 )))):named a240 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool ))(=> (= (fun_app$aa (comp$ ?v0 )?v1 )?v2 )(= (fun_app$ ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$ ?v2 ?v3 )))):named a241 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat$ ))(=> (= (fun_app$ag (comp$f ?v0 )?v1 )?v2 )(= (fun_app$c ?v0 (fun_app$e ?v1 ?v3 ))(fun_app$c ?v2 ?v3 )))):named a242 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat$ ))(=> (= (fun_app$ac (comp$b ?v0 )?v1 )?v2 )(= (fun_app$ ?v0 (fun_app$c ?v1 ?v3 ))(fun_app$c ?v2 ?v3 )))):named a243 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(=> (= (fun_app$ac (comp$b ?v0 )?v1 )(fun_app$ag (comp$f ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$c ?v1 ?v4 ))(fun_app$c ?v2 (fun_app$e ?v3 ?v4 ))))):named a244 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(=> (= (fun_app$ad (comp$c ?v0 )?v1 )(fun_app$ad (comp$c ?v2 )?v3 ))(= (fun_app$e ?v0 (fun_app$e ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$e ?v3 ?v4 ))))):named a245 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Bool_stream_bool_stream_fun$ )(?v3 Nat_bool_stream_fun$ )(?v4 Nat$ ))(=> (= (fun_app$ap (comp$k ?v0 )?v1 )(fun_app$ap (comp$k ?v2 )?v3 ))(= (fun_app$y ?v0 (fun_app$ao ?v1 ?v4 ))(fun_app$y ?v2 (fun_app$ao ?v3 ?v4 ))))):named a246 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ )(?v4 Bool ))(=> (= (fun_app$aa (comp$ ?v0 )?v1 )(fun_app$aa (comp$ ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$ ?v3 ?v4 ))))):named a247 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ )(?v4 Nat$ ))(=> (= (fun_app$ag (comp$f ?v0 )?v1 )(fun_app$ac (comp$b ?v2 )?v3 ))(= (fun_app$c ?v0 (fun_app$e ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$c ?v3 ?v4 ))))):named a248 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_fun$ )(?v4 Nat$ ))(=> (= (fun_app$ag (comp$f ?v0 )?v1 )(fun_app$ag (comp$f ?v2 )?v3 ))(= (fun_app$c ?v0 (fun_app$e ?v1 ?v4 ))(fun_app$c ?v2 (fun_app$e ?v3 ?v4 ))))):named a249 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ )(?v4 Nat$ ))(=> (= (fun_app$ac (comp$b ?v0 )?v1 )(fun_app$ac (comp$b ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$c ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$c ?v3 ?v4 ))))):named a250 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ )(?v3 Bool_bool_fun$ )(?v4 Nat_bool_fun$ )(?v5 Nat$ ))(=> (= (fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v5 )))(= (fun_app$c (fun_app$ac (comp$b ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ac (comp$b ?v3 )?v4 )?v5 )))):named a251 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool ))(=> (= (fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$c (fun_app$ac (comp$b ?v0 )?v1 )?v2 )(fun_app$ (fun_app$aa (comp$ ?v3 )?v4 )?v5 )))):named a252 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ )(?v3 Nat_bool_fun$ )(?v4 Nat_nat_fun$ )(?v5 Nat$ ))(=> (= (fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$c ?v3 (fun_app$e ?v4 ?v5 )))(= (fun_app$c (fun_app$ac (comp$b ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ag (comp$f ?v3 )?v4 )?v5 )))):named a253 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Nat_nat_fun$ )(?v4 Nat_nat_fun$ )(?v5 Nat$ ))(=> (= (fun_app$e ?v0 (fun_app$e ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$e ?v4 ?v5 )))(= (fun_app$e (fun_app$ad (comp$c ?v0 )?v1 )?v2 )(fun_app$e (fun_app$ad (comp$c ?v3 )?v4 )?v5 )))):named a254 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Bool_bool_fun$ )(?v4 Nat_bool_fun$ )(?v5 Nat$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v5 )))(= (fun_app$ (fun_app$aa (comp$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ac (comp$b ?v3 )?v4 )?v5 )))):named a255 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$ (fun_app$aa (comp$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$aa (comp$ ?v3 )?v4 )?v5 )))):named a256 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Nat_bool_fun$ )(?v4 Nat_nat_fun$ )(?v5 Nat$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$c ?v3 (fun_app$e ?v4 ?v5 )))(= (fun_app$ (fun_app$aa (comp$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ag (comp$f ?v3 )?v4 )?v5 )))):named a257 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Bool_bool_fun$ )(?v4 Nat_bool_fun$ )(?v5 Nat$ ))(=> (= (fun_app$c ?v0 (fun_app$e ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v5 )))(= (fun_app$c (fun_app$ag (comp$f ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ac (comp$b ?v3 )?v4 )?v5 )))):named a258 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool ))(=> (= (fun_app$c ?v0 (fun_app$e ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$c (fun_app$ag (comp$f ?v0 )?v1 )?v2 )(fun_app$ (fun_app$aa (comp$ ?v3 )?v4 )?v5 )))):named a259 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Nat_bool_fun$ )(?v4 Nat_nat_fun$ )(?v5 Nat$ ))(=> (= (fun_app$c ?v0 (fun_app$e ?v1 ?v2 ))(fun_app$c ?v3 (fun_app$e ?v4 ?v5 )))(= (fun_app$c (fun_app$ag (comp$f ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ag (comp$f ?v3 )?v4 )?v5 )))):named a260 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ )(?v3 Nat_bool_fun$ )(?v4 Nat_nat_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$c ?v3 (fun_app$e ?v4 ?v2 )))(= (fun_app$c (fun_app$ac (comp$b ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ag (comp$f ?v3 )?v4 )?v2 )))):named a261 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Nat_nat_fun$ )(?v4 Nat_nat_fun$ ))(=> (= (fun_app$e ?v0 (fun_app$e ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$e ?v4 ?v2 )))(= (fun_app$e (fun_app$ad (comp$c ?v0 )?v1 )?v2 )(fun_app$e (fun_app$ad (comp$c ?v3 )?v4 )?v2 )))):named a262 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat$ )(?v3 Bool_stream_bool_stream_fun$ )(?v4 Nat_bool_stream_fun$ ))(=> (= (fun_app$y ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$y ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$ao (fun_app$ap (comp$k ?v0 )?v1 )?v2 )(fun_app$ao (fun_app$ap (comp$k ?v3 )?v4 )?v2 )))):named a263 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$aa (comp$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$aa (comp$ ?v3 )?v4 )?v2 )))):named a264 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Bool_bool_fun$ )(?v4 Nat_bool_fun$ ))(=> (= (fun_app$c ?v0 (fun_app$e ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v2 )))(= (fun_app$c (fun_app$ag (comp$f ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ac (comp$b ?v3 )?v4 )?v2 )))):named a265 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Nat_bool_fun$ )(?v4 Nat_nat_fun$ ))(=> (= (fun_app$c ?v0 (fun_app$e ?v1 ?v2 ))(fun_app$c ?v3 (fun_app$e ?v4 ?v2 )))(= (fun_app$c (fun_app$ag (comp$f ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ag (comp$f ?v3 )?v4 )?v2 )))):named a266 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ )(?v3 Bool_bool_fun$ )(?v4 Nat_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v2 )))(= (fun_app$c (fun_app$ac (comp$b ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ac (comp$b ?v3 )?v4 )?v2 )))):named a267 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Bool_bool_fun$ )(?v4 Nat_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$c ?v0 (fun_app$e ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v2 )))(= (fun_app$c (fun_app$ag (comp$f (fun_app$ac (comp$b ?v5 )?v0 ))?v1 )?v2 )(fun_app$c (fun_app$ac (comp$b (fun_app$aa (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a268 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ )(?v3 Nat_bool_fun$ )(?v4 Nat_nat_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$c ?v3 (fun_app$e ?v4 ?v2 )))(= (fun_app$c (fun_app$ac (comp$b (fun_app$aa (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$c (fun_app$ag (comp$f (fun_app$ac (comp$b ?v5 )?v3 ))?v4 )?v2 )))):named a269 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Bool_nat_fun$ )(?v2 Bool )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$c ?v0 (fun_app$bh ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$af (comp$e (fun_app$ac (comp$b ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$aa (comp$ (fun_app$aa (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a270 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Bool_nat_fun$ )(?v2 Bool )(?v3 Bool_nat_fun$ )(?v4 Bool_bool_fun$ )(?v5 Nat_bool_fun$ ))(=> (= (fun_app$e ?v0 (fun_app$bh ?v1 ?v2 ))(fun_app$bh ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$af (comp$e (fun_app$ag (comp$f ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$aa (comp$ (fun_app$af (comp$e ?v5 )?v3 ))?v4 )?v2 )))):named a271 ))
(assert (! (forall ((?v0 Bool_nat_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ )(?v3 Nat_nat_fun$ )(?v4 Nat_nat_fun$ )(?v5 Nat_bool_fun$ ))(=> (= (fun_app$bh ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$e ?v4 ?v2 )))(= (fun_app$c (fun_app$ac (comp$b (fun_app$af (comp$e ?v5 )?v0 ))?v1 )?v2 )(fun_app$c (fun_app$ag (comp$f (fun_app$ag (comp$f ?v5 )?v3 ))?v4 )?v2 )))):named a272 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ )(?v3 Bool_bool_fun$ )(?v4 Nat_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v2 )))(= (fun_app$c (fun_app$ac (comp$b (fun_app$aa (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$c (fun_app$ac (comp$b (fun_app$aa (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a273 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Nat_nat_fun$ )(?v4 Nat_nat_fun$ )(?v5 Nat_nat_fun$ ))(=> (= (fun_app$e ?v0 (fun_app$e ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$e ?v4 ?v2 )))(= (fun_app$e (fun_app$ad (comp$c (fun_app$ad (comp$c ?v5 )?v0 ))?v1 )?v2 )(fun_app$e (fun_app$ad (comp$c (fun_app$ad (comp$c ?v5 )?v3 ))?v4 )?v2 )))):named a274 ))
(assert (! (forall ((?v0 Bool_nat_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Nat_nat_fun$ )(?v4 Bool_nat_fun$ )(?v5 Nat_bool_fun$ ))(=> (= (fun_app$bh ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$bh ?v4 ?v2 )))(= (fun_app$ (fun_app$aa (comp$ (fun_app$af (comp$e ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$af (comp$e (fun_app$ag (comp$f ?v5 )?v3 ))?v4 )?v2 )))):named a275 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Nat_bool_fun$ )(?v4 Bool_nat_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$c ?v3 (fun_app$bh ?v4 ?v2 )))(= (fun_app$ (fun_app$aa (comp$ (fun_app$aa (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$af (comp$e (fun_app$ac (comp$b ?v5 )?v3 ))?v4 )?v2 )))):named a276 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$aa (comp$ (fun_app$aa (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$aa (comp$ (fun_app$aa (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a277 ))
(assert (! (forall ((?v0 Bool_stream_bool_stream_fun$ )(?v1 Nat_bool_stream_fun$ )(?v2 Nat_bool_stream_fun$ )(?v3 Nat_nat_fun$ ))(=> (= (fun_app$ap (comp$k ?v0 )?v1 )?v2 )(= (fun_app$ap (comp$k ?v0 )(fun_app$bd (comp$p ?v1 )?v3 ))(fun_app$bd (comp$p ?v2 )?v3 )))):named a278 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (= (fun_app$aa (comp$ ?v0 )?v1 )?v2 )(= (fun_app$aa (comp$ ?v0 )(fun_app$aa (comp$ ?v1 )?v3 ))(fun_app$aa (comp$ ?v2 )?v3 )))):named a279 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_fun$ ))(=> (= (fun_app$ag (comp$f ?v0 )?v1 )?v2 )(= (fun_app$ag (comp$f ?v0 )(fun_app$ad (comp$c ?v1 )?v3 ))(fun_app$ag (comp$f ?v2 )?v3 )))):named a280 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ ))(=> (= (fun_app$aa (comp$ ?v0 )?v1 )?v2 )(= (fun_app$ac (comp$b ?v0 )(fun_app$ac (comp$b ?v1 )?v3 ))(fun_app$ac (comp$b ?v2 )?v3 )))):named a281 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_fun$ ))(=> (= (fun_app$ac (comp$b ?v0 )?v1 )?v2 )(= (fun_app$ac (comp$b ?v0 )(fun_app$ag (comp$f ?v1 )?v3 ))(fun_app$ag (comp$f ?v2 )?v3 )))):named a282 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (= (fun_app$ag (comp$f ?v0 )?v1 )?v2 )(= (fun_app$ag (comp$f (fun_app$ac (comp$b ?v3 )?v0 ))?v1 )(fun_app$ac (comp$b ?v3 )?v2 )))):named a283 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (= (fun_app$ac (comp$b ?v0 )?v1 )?v2 )(= (fun_app$ac (comp$b (fun_app$aa (comp$ ?v3 )?v0 ))?v1 )(fun_app$ac (comp$b ?v3 )?v2 )))):named a284 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$ag (comp$f ?v0 )?v1 )(fun_app$ac (comp$b ?v2 )?v3 ))(= (fun_app$aa (comp$ ?v4 )?v2 )?v5 ))(= (fun_app$ag (comp$f (fun_app$ac (comp$b ?v4 )?v0 ))?v1 )(fun_app$ac (comp$b ?v5 )?v3 )))):named a285 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat_bool_fun$ )(?v3 Nat_nat_fun$ )(?v4 Bool_bool_fun$ )(?v5 Nat_bool_fun$ ))(=> (and (= (fun_app$ac (comp$b ?v0 )?v1 )(fun_app$ag (comp$f ?v2 )?v3 ))(= (fun_app$ac (comp$b ?v4 )?v2 )?v5 ))(= (fun_app$ac (comp$b (fun_app$aa (comp$ ?v4 )?v0 ))?v1 )(fun_app$ag (comp$f ?v5 )?v3 )))):named a286 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$ac (comp$b ?v0 )?v1 )(fun_app$ac (comp$b ?v2 )?v3 ))(= (fun_app$aa (comp$ ?v4 )?v2 )?v5 ))(= (fun_app$ac (comp$b (fun_app$aa (comp$ ?v4 )?v0 ))?v1 )(fun_app$ac (comp$b ?v5 )?v3 )))):named a287 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ )(?v4 Nat_bool_fun$ )(?v5 Nat_bool_fun$ ))(=> (and (= (fun_app$aa (comp$ ?v0 )?v1 )(fun_app$aa (comp$ ?v2 )?v3 ))(= (fun_app$ac (comp$b ?v3 )?v4 )?v5 ))(= (fun_app$ac (comp$b ?v0 )(fun_app$ac (comp$b ?v1 )?v4 ))(fun_app$ac (comp$b ?v2 )?v5 )))):named a288 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Nat_bool_fun$ )(?v4 Nat_nat_fun$ )(?v5 Nat_bool_fun$ ))(=> (and (= (fun_app$ac (comp$b ?v0 )?v1 )(fun_app$ac (comp$b ?v2 )?v3 ))(= (fun_app$ag (comp$f ?v3 )?v4 )?v5 ))(= (fun_app$ac (comp$b ?v0 )(fun_app$ag (comp$f ?v1 )?v4 ))(fun_app$ac (comp$b ?v2 )?v5 )))):named a289 ))
(assert (! (= (of_nat$ one$a )one$a ):named a290 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (minus$ ?v0 )?v1 ))?v2 )(fun_app$e (minus$ ?v0 )(fun_app$e (plus$a ?v1 )?v2 )))):named a291 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$e (plus$a ?v0 )zero$ )?v0 ):pattern ((plus$a ?v0 )))):named a292 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (fun_app$e (plus$a ?v0 )?v1 )zero$ )(and (= ?v0 zero$ )(= ?v1 zero$ )))):named a293 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (of_nat$ ?v0 )(of_nat$ ?v1 ))(= ?v0 ?v1 ))):named a294 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$e (plus$a zero$ )?v0 )?v0 )):named a295 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$e (plus$a zero$ )?v0 )?v0 )):named a296 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$e (plus$a ?v0 )zero$ )?v0 )):named a297 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$e (plus$a ?v0 )zero$ )?v0 )):named a298 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$e (minus$ ?v0 )zero$ )?v0 )):named a299 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$e (minus$ ?v0 )?v0 )zero$ ):pattern ((minus$ ?v0 )))):named a300 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$e (minus$ zero$ )?v0 )zero$ )):named a301 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (plus$a ?v0 )?v1 ))?v0 )?v1 )):named a302 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (plus$a ?v0 )?v1 ))?v1 )?v0 )):named a303 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (plus$a ?v0 )?v1 ))(fun_app$e (plus$a ?v0 )?v2 ))(fun_app$e (minus$ ?v1 )?v2 ))):named a304 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (plus$a ?v0 )?v1 ))(fun_app$e (plus$a ?v2 )?v1 ))(fun_app$e (minus$ ?v0 )?v2 ))):named a305 ))
(assert (! (forall ((?v0 Nat$ ))(= (= (of_nat$ ?v0 )zero$ )(= ?v0 zero$ ))):named a306 ))
(assert (! (forall ((?v0 Nat$ ))(= (= zero$ (of_nat$ ?v0 ))(= zero$ ?v0 ))):named a307 ))
(assert (! (= (of_nat$ zero$ )zero$ ):named a308 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$e (minus$ ?v0 )(fun_app$e (plus$a ?v0 )?v1 ))zero$ )):named a309 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (of_nat$ (fun_app$e (plus$a ?v0 )?v1 ))(fun_app$e (plus$a (of_nat$ ?v0 ))(of_nat$ ?v1 )))):named a310 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (minus$ ?v0 )?v1 ))?v2 )(fun_app$e (minus$ ?v0 )(fun_app$e (plus$a ?v1 )?v2 )))):named a311 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (fun_app$e (plus$a ?v0 )?v1 )?v2 )(= ?v0 (fun_app$e (minus$ ?v2 )?v1 )))):named a312 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (plus$a ?v0 )?v1 ))?v0 )?v1 )):named a313 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (plus$a ?v0 )?v1 ))?v1 )?v0 )):named a314 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (plus$a ?v0 )?v1 ))(fun_app$e (plus$a ?v0 )?v2 ))(fun_app$e (minus$ ?v1 )?v2 ))):named a315 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (plus$a ?v0 )?v1 ))(fun_app$e (plus$a ?v2 )?v1 ))(fun_app$e (minus$ ?v0 )?v2 ))):named a316 ))
(assert (! (forall ((?v0 Nat$ ))(= (= zero$ ?v0 )(= ?v0 zero$ ))):named a317 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (minus$ ?v0 )?v1 ))?v2 )(fun_app$e (minus$ (fun_app$e (minus$ ?v0 )?v2 ))?v1 ))):named a318 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (fun_app$e (minus$ ?v0 )(fun_app$e (plus$a ?v0 )?v1 ))zero$ )):named a319 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= ?v0 (fun_app$e (plus$a ?v0 )?v1 ))(= ?v1 zero$ ))):named a320 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$e (plus$a ?v0 )zero$ )?v0 )):named a321 ))
(assert (! (forall ((?v0 Nat$ ))(= (fun_app$e (plus$a zero$ )?v0 )?v0 )):named a322 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (= (fun_app$e (plus$a ?v0 )?v1 )?v0 )(= ?v1 zero$ ))):named a323 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$e (plus$a zero$ )?v0 )?v0 ):pattern ((fun_app$e (plus$a zero$ )?v0 )))):named a324 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (fun_app$e (plus$a ?v0 )?v1 )?v2 )(= ?v0 (fun_app$e (minus$ ?v2 )?v1 )))):named a325 ))
(assert (! (not (= zero$ one$a )):named a326 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (of_nat$ ?v0 )(fun_app$e (fun_app$ad (fun_app$bi compow$ ?v0 )(plus$a one$a ))zero$ )):pattern ((of_nat$ ?v0 )))):named a327 ))
(assert (! (forall ((?v0 Num$ )(?v1 Num$ ))(= (= (numeral$ ?v0 )(numeral$ ?v1 ))(= ?v0 ?v1 ))):named a328 ))
(assert (! (forall ((?v0 Num$ )(?v1 Num$ )(?v2 Nat$ ))(= (fun_app$e (plus$a (numeral$ ?v0 ))(fun_app$e (plus$a (numeral$ ?v1 ))?v2 ))(fun_app$e (plus$a (numeral$ (fun_app$bj (plus$b ?v0 )?v1 )))?v2 ))):named a329 ))
(assert (! (forall ((?v0 Num$ )(?v1 Num$ ))(= (fun_app$e (plus$a (numeral$ ?v0 ))(numeral$ ?v1 ))(numeral$ (fun_app$bj (plus$b ?v0 )?v1 )))):named a330 ))
(assert (! (forall ((?v0 Num$ ))(= (of_nat$ (numeral$ ?v0 ))(numeral$ ?v0 ))):named a331 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$e (minus$ ?v0 )?v0 )zero$ ):pattern ((minus$ ?v0 )))):named a332 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$e (minus$ zero$ )?v0 )zero$ ):pattern ((fun_app$e (minus$ zero$ )?v0 )))):named a333 ))
(assert (! (= zero$ zero$ ):named a334 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e (minus$ (fun_app$e (minus$ ?v0 )?v1 ))?v2 )(fun_app$e (minus$ (fun_app$e (minus$ ?v0 )?v2 ))?v1 ))):named a335 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$e (minus$ ?v0 )zero$ )?v0 ):pattern ((minus$ ?v0 )))):named a336 ))
(assert (! (forall ((?v0 Nat$ ))(=> (and (=> (= ?v0 zero$ )false )(=> (not (= ?v0 zero$ ))false ))false )):named a337 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (and (= (fun_app$e (minus$ ?v0 )?v1 )zero$ )(= (fun_app$e (minus$ ?v1 )?v0 )zero$ ))(= ?v0 ?v1 ))):named a338 ))
(assert (! (forall ((?v0 Num$ ))(not (= zero$ (numeral$ ?v0 )))):named a339 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Bool_bool_fun$ ))(= (fun_app$bk (compow$a ?v0 )(comp$b ?v1 ))(comp$b (fun_app$aa (compow$b ?v0 )?v1 )))):named a340 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(= (fun_app$e ?v0 (fun_app$e (fun_app$ad (fun_app$bi compow$ ?v1 )?v0 )?v2 ))(fun_app$e (fun_app$ad (fun_app$bi compow$ ?v1 )?v0 )(fun_app$e ?v0 ?v2 )))):named a341 ))
(assert (! (forall ((?v0 Num$ ))(= (fun_app$e (plus$a one$a )(numeral$ ?v0 ))(fun_app$e (plus$a (numeral$ ?v0 ))one$a ))):named a342 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat_nat_fun$ ))(= (fun_app$ad (fun_app$bi compow$ (fun_app$e (plus$a ?v0 )?v1 ))?v2 )(fun_app$ad (comp$c (fun_app$ad (fun_app$bi compow$ ?v0 )?v2 ))(fun_app$ad (fun_app$bi compow$ ?v1 )?v2 )))):named a343 ))
(assert (! (= funpow$ compow$ ):named a344 ))
(assert (! (forall ((?v0 Num$ )(?v1 Num$ ))(= (fun_app$bj (plus$b ?v0 )(inc$ ?v1 ))(inc$ (fun_app$bj (plus$b ?v0 )?v1 )))):named a345 ))
(assert (! (forall ((?v0 Num$ ))(= (numeral$ (inc$ ?v0 ))(fun_app$e (plus$a (numeral$ ?v0 ))one$a ))):named a346 ))
(assert (! (forall ((?v0 Num$ ))(= (= one$a (numeral$ ?v0 ))(= one$ ?v0 ))):named a347 ))
(assert (! (forall ((?v0 Num$ ))(= (= (numeral$ ?v0 )one$a )(= ?v0 one$ ))):named a348 ))
(assert (! (forall ((?v0 Num$ ))(= (fun_app$e (plus$a (numeral$ ?v0 ))one$a )(numeral$ (fun_app$bj (plus$b ?v0 )one$ )))):named a349 ))
(assert (! (forall ((?v0 Num$ ))(= (fun_app$e (plus$a one$a )(numeral$ ?v0 ))(numeral$ (fun_app$bj (plus$b one$ )?v0 )))):named a350 ))
(assert (! (forall ((?v0 Num$ ))(! (= (fun_app$bj (plus$b ?v0 )one$ )(inc$ ?v0 )):pattern ((plus$b ?v0 )))):named a351 ))
(assert (! (forall ((?v0 Num_bool_fun$ )(?v1 Num$ ))(=> (and (fun_app$bl ?v0 one$ )(forall ((?v2 Num$ ))(=> (fun_app$bl ?v0 ?v2 )(fun_app$bl ?v0 (inc$ ?v2 )))))(fun_app$bl ?v0 ?v1 ))):named a352 ))
(assert (! (forall ((?v0 Num$ ))(! (= (fun_app$bj (plus$b one$ )?v0 )(fun_app$bj (plus$b ?v0 )one$ )):pattern ((fun_app$bj (plus$b one$ )?v0 )))):named a353 ))
(assert (! (= (numeral$ one$ )one$a ):named a354 ))
(assert (! (= (numeral$ one$ )one$a ):named a355 ))
(check-sat )
(get-unsat-core )
