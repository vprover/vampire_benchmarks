(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort A_set$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort T_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort T_bool_fun$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort A_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_a_fun$ 0 )
(declare-sort A_set_a_set_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort T_N_sum_bool_fun$ 0 )
(declare-sort A_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_a_fun$ 0 )
(declare-sort T_N_sum_T_N_sum_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun$ 0 )
(declare-sort T_set_set_T_set_set_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort T_bool_fun_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort A_bool_fun_T_N_sum_bool_fun_fun$ 0 )
(declare-sort N_N_fun_T_N_sum_T_N_sum_fun_fun$ 0 )
(declare-sort T_N_sum_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort A_set_a_bool_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort T_N_sum_bool_fun_T_N_sum_bool_fun_fun$ 0 )
(declare-sort Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ 0 )
(declare-sort N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ 0 )
(declare-sort A_set_T_N_sum_bool_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort T_N_sum_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_N_sum_set_a_bool_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_T_N_sum_bool_fun_fun$ 0 )
(declare-sort A_set_T_dtree_sum_bool_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_a_bool_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_set_T_N_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ 0 )
(declare-sort Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ 0 )
(declare-sort T_N_sum_set_a_bool_fun_T_N_sum_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun_T_dtree_sum_T_N_sum_fun_fun$ 0 )
(declare-sort T_N_sum_set_T_N_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ 0 )
(declare-sort A_set_T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun_T_dtree_sum_T_N_sum_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_a_bool_fun_T_dtree_sum_bool_fun_fun_fun$ 0 )
(declare-sort T_N_sum_set_T_dtree_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_T_N_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ 0 )
(declare-sort T_N_sum_set_T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_T_N_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum$ 0)
(declare-sort T_N_sum$ 0)
(declare-fun projl$ (T_dtree_sum$)T$)
(declare-fun inl$ (T$ )T_dtree_sum$)
(declare-fun projr$ (T_dtree_sum$)Dtree$)
(declare-fun inr$ (Dtree$ )T_dtree_sum$)
(declare-fun projl$a (T_N_sum$)T$)
(declare-fun inl$a (T$ )T_N_sum$)
(declare-fun projr$a (T_N_sum$)N$)
(declare-fun inr$a (N$ )T_N_sum$)
(declare-fun k$ (Dtree$ )A_set$ )
(declare-fun id$ ()T_T_fun$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ ()A_bool_fun$ )
(declare-fun wf$ (Dtree$ )Bool )
(declare-fun id$a ()T_set_T_set_fun$ )
(declare-fun id$b ()T_set_set_T_set_set_fun$ )
(declare-fun id$c ()A_a_fun$ )
(declare-fun id$d ()A_set_a_set_fun$ )
(declare-fun id$e ()T_N_sum_T_N_sum_fun$ )
(declare-fun id$f ()T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun uua$ ()A_bool_fun$ )
(declare-fun uub$ ()T_T_fun$ )
(declare-fun uuc$ ()A_a_fun$ )
(declare-fun uud$ (T_T_fun$ )T_bool_fun_T_bool_fun_fun$ )
(declare-fun uue$ (A_T_dtree_sum_fun$ )A_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuf$ (A_T_N_sum_fun$ )A_bool_fun_T_N_sum_bool_fun_fun$ )
(declare-fun uug$ (T_dtree_sum_a_fun$ )T_dtree_sum_bool_fun_a_bool_fun_fun$ )
(declare-fun uuh$ (T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uui$ (T_N_sum_a_fun$ )T_N_sum_bool_fun_a_bool_fun_fun$ )
(declare-fun uuj$ (T_N_sum_T_dtree_sum_fun$ )T_N_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuk$ (T_N_sum_T_N_sum_fun$ )T_N_sum_bool_fun_T_N_sum_bool_fun_fun$ )
(declare-fun uul$ (T_dtree_sum_T_N_sum_fun$ )T_dtree_sum_bool_fun_T_N_sum_bool_fun_fun$ )
(declare-fun uum$ (A_a_fun$ )A_bool_fun_a_bool_fun_fun$ )
(declare-fun uun$ ()N_N_fun$ )
(declare-fun uuo$ ()Dtree_dtree_fun$ )
(declare-fun uup$ (T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_set_T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ )
(declare-fun uuq$ (T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_set_T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ )
(declare-fun uur$ (T_N_sum_T_dtree_sum_fun$ )T_N_sum_set_T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ )
(declare-fun uus$ (T_N_sum_T_dtree_sum_fun$ )T_N_sum_set_T_dtree_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ )
(declare-fun uut$ (T_dtree_sum_T_N_sum_fun$ )T_dtree_sum_set_T_N_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ )
(declare-fun uuu$ (T_dtree_sum_T_N_sum_fun$ )T_dtree_sum_set_T_N_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ )
(declare-fun uuv$ (T_N_sum_T_N_sum_fun$ )T_N_sum_set_T_N_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ )
(declare-fun uuw$ (T_N_sum_T_N_sum_fun$ )T_N_sum_set_T_N_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ )
(declare-fun uux$ (A_T_dtree_sum_fun$ )A_set_T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ )
(declare-fun uuy$ (A_T_dtree_sum_fun$ )A_set_T_dtree_sum_bool_fun_a_bool_fun_fun_fun$ )
(declare-fun uuz$ (A_T_N_sum_fun$ )A_set_T_N_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ )
(declare-fun uva$ (A_T_N_sum_fun$ )A_set_T_N_sum_bool_fun_a_bool_fun_fun_fun$ )
(declare-fun uvb$ (T_dtree_sum_a_fun$ )T_dtree_sum_set_a_bool_fun_a_bool_fun_fun_fun$ )
(declare-fun uvc$ (T_dtree_sum_a_fun$ )T_dtree_sum_set_a_bool_fun_T_dtree_sum_bool_fun_fun_fun$ )
(declare-fun uvd$ (T_N_sum_a_fun$ )T_N_sum_set_a_bool_fun_a_bool_fun_fun_fun$ )
(declare-fun uve$ (T_N_sum_a_fun$ )T_N_sum_set_a_bool_fun_T_N_sum_bool_fun_fun_fun$ )
(declare-fun uvf$ (A_a_fun$ )A_set_a_bool_fun_a_bool_fun_fun_fun$ )
(declare-fun uvg$ (A_a_fun$ )A_set_a_bool_fun_a_bool_fun_fun_fun$ )
(declare-fun uvh$ (T_N_sum_T_N_sum_fun$ )T_dtree_sum_T_N_sum_fun_T_dtree_sum_T_N_sum_fun_fun$ )
(declare-fun uvi$ (T_dtree_sum_T_N_sum_fun$ )T_dtree_sum_T_dtree_sum_fun_T_dtree_sum_T_N_sum_fun_fun$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun root$ ()Dtree_N_fun$ )
(declare-fun image$ (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$ )T_N_sum_set$ )
(declare-fun image$a (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$b (T_dtree_sum_a_fun$ T_dtree_sum_set$ )A_set$ )
(declare-fun image$c (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$d (T_N_sum_T_N_sum_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun image$e (T_N_sum_a_fun$ T_N_sum_set$ )A_set$ )
(declare-fun image$f (A_T_dtree_sum_fun$ A_set$ )T_dtree_sum_set$ )
(declare-fun image$g (A_T_N_sum_fun$ A_set$ )T_N_sum_set$ )
(declare-fun image$h (A_a_fun$ )A_set_a_set_fun$ )
(declare-fun image$i (T_set_T_set_fun$ )T_set_set_T_set_set_fun$ )
(declare-fun image$j (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun member$ (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun collect$ (A_bool_fun$ )A_set$ )
(declare-fun fun_app$ (A_bool_fun$ A$ )Bool )
(declare-fun map_sum$ (T_T_fun$ )Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$c (T$ T_set$ )Bool )
(declare-fun subtrOf$ (Dtree$ )N_dtree_fun$ )
(declare-fun collect$a (T_bool_fun$ )T_set$ )
(declare-fun collect$b (T_dtree_sum_bool_fun$ )T_dtree_sum_set$ )
(declare-fun collect$c (T_N_sum_bool_fun$ )T_N_sum_set$ )
(declare-fun fun_app$a (N_dtree_fun$ N$ )Dtree$ )
(declare-fun fun_app$b (Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ Dtree_N_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun fun_app$c (T_dtree_sum_T_N_sum_fun$ T_dtree_sum$ )T_N_sum$ )
(declare-fun fun_app$d (T_dtree_sum_T_dtree_sum_fun_T_dtree_sum_T_N_sum_fun_fun$ T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun fun_app$e (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$f (T_dtree_sum_T_N_sum_fun_T_dtree_sum_T_N_sum_fun_fun$ T_dtree_sum_T_N_sum_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun fun_app$g (T_N_sum_T_N_sum_fun$ T_N_sum$ )T_N_sum$ )
(declare-fun fun_app$h (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$i (T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ T_dtree_sum_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$j (T_N_sum_bool_fun$ T_N_sum$ )Bool )
(declare-fun fun_app$k (T_dtree_sum_bool_fun_T_N_sum_bool_fun_fun$ T_dtree_sum_bool_fun$ )T_N_sum_bool_fun$ )
(declare-fun fun_app$l (T_dtree_sum_bool_fun_a_bool_fun_fun$ T_dtree_sum_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$m (T_dtree_sum_a_fun$ T_dtree_sum$ )A$ )
(declare-fun fun_app$n (T_N_sum_bool_fun_T_dtree_sum_bool_fun_fun$ T_N_sum_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$o (T_N_sum_T_dtree_sum_fun$ T_N_sum$ )T_dtree_sum$ )
(declare-fun fun_app$p (T_N_sum_bool_fun_T_N_sum_bool_fun_fun$ T_N_sum_bool_fun$ )T_N_sum_bool_fun$ )
(declare-fun fun_app$q (T_N_sum_bool_fun_a_bool_fun_fun$ T_N_sum_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$r (T_N_sum_a_fun$ T_N_sum$ )A$ )
(declare-fun fun_app$s (T_bool_fun$ T$ )Bool )
(declare-fun fun_app$t (T_bool_fun_T_bool_fun_fun$ T_bool_fun$ )T_bool_fun$ )
(declare-fun fun_app$u (T_T_fun$ T$ )T$ )
(declare-fun fun_app$v (A_bool_fun_T_dtree_sum_bool_fun_fun$ A_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$w (A_T_dtree_sum_fun$ A$ )T_dtree_sum$ )
(declare-fun fun_app$x (A_bool_fun_T_N_sum_bool_fun_fun$ A_bool_fun$ )T_N_sum_bool_fun$ )
(declare-fun fun_app$y (A_T_N_sum_fun$ A$ )T_N_sum$ )
(declare-fun fun_app$z (A_bool_fun_a_bool_fun_fun$ A_bool_fun$ )A_bool_fun$ )
(declare-fun map_sum$a (T_T_fun$ )Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ )
(declare-fun map_sum$b (T_T_fun$ )N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ )
(declare-fun map_sum$c (T_T_fun$ )N_N_fun_T_N_sum_T_N_sum_fun_fun$ )
(declare-fun fun_app$aa (A_a_fun$ A$ )A$ )
(declare-fun fun_app$ab (T_dtree_sum_set_T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ T_dtree_sum_set$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun fun_app$ac (T_dtree_sum_set_T_N_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ T_dtree_sum_set$ )T_N_sum_bool_fun_T_N_sum_bool_fun_fun$ )
(declare-fun fun_app$ad (T_dtree_sum_set_a_bool_fun_a_bool_fun_fun_fun$ T_dtree_sum_set$ )A_bool_fun_a_bool_fun_fun$ )
(declare-fun fun_app$ae (T_N_sum_set_T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ T_N_sum_set$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun fun_app$af (T_N_sum_set_T_N_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ T_N_sum_set$ )T_N_sum_bool_fun_T_N_sum_bool_fun_fun$ )
(declare-fun fun_app$ag (T_N_sum_set_a_bool_fun_a_bool_fun_fun_fun$ T_N_sum_set$ )A_bool_fun_a_bool_fun_fun$ )
(declare-fun fun_app$ah (A_set_T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ A_set$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun fun_app$ai (A_set_T_N_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ A_set$ )T_N_sum_bool_fun_T_N_sum_bool_fun_fun$ )
(declare-fun fun_app$aj (A_set_a_bool_fun_a_bool_fun_fun_fun$ A_set$ )A_bool_fun_a_bool_fun_fun$ )
(declare-fun fun_app$ak (A_set_a_set_fun$ A_set$ )A_set$ )
(declare-fun fun_app$al (T_dtree_sum_set_T_N_sum_bool_fun_T_dtree_sum_bool_fun_fun_fun$ T_dtree_sum_set$ )T_N_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun fun_app$am (T_dtree_sum_set_a_bool_fun_T_dtree_sum_bool_fun_fun_fun$ T_dtree_sum_set$ )A_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun fun_app$an (T_N_sum_set_T_dtree_sum_bool_fun_T_N_sum_bool_fun_fun_fun$ T_N_sum_set$ )T_dtree_sum_bool_fun_T_N_sum_bool_fun_fun$ )
(declare-fun fun_app$ao (T_N_sum_set_a_bool_fun_T_N_sum_bool_fun_fun_fun$ T_N_sum_set$ )A_bool_fun_T_N_sum_bool_fun_fun$ )
(declare-fun fun_app$ap (A_set_T_dtree_sum_bool_fun_a_bool_fun_fun_fun$ A_set$ )T_dtree_sum_bool_fun_a_bool_fun_fun$ )
(declare-fun fun_app$aq (A_set_T_N_sum_bool_fun_a_bool_fun_fun_fun$ A_set$ )T_N_sum_bool_fun_a_bool_fun_fun$ )
(declare-fun fun_app$ar (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$as (N_N_fun$ N$ )N$ )
(declare-fun fun_app$at (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$au (Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ Dtree_dtree_fun$ )T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$av (N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ N_dtree_fun$ )T_N_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$aw (N_N_fun_T_N_sum_T_N_sum_fun_fun$ N_N_fun$ )T_N_sum_T_N_sum_fun$ )
(declare-fun fun_app$ax (T_set_T_set_fun$ T_set$ )T_set$ )
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$ uua$ ?v0 )(exists ((?v1 A_set$ ))(and (exists ((?v2 N$ ))(and (= ?v1 (k$ (fun_app$a (subtrOf$ tr$ )?v2 )))(member$ (inr$a ?v2 )(image$ (fun_app$b (map_sum$ id$ )root$ )(cont$ tr$ )))))(member$a ?v0 ?v1 )))):pattern ((fun_app$ uua$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$ uu$ ?v0 )(exists ((?v1 A_set$ ))(and (exists ((?v2 Dtree$ ))(and (= ?v1 (k$ ?v2 ))(member$b (inr$ ?v2 )(cont$ tr$ ))))(member$a ?v0 ?v1 )))):pattern ((fun_app$ uu$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$c (fun_app$d (uvi$ ?v0 )?v1 )?v2 )(fun_app$c ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$d (uvi$ ?v0 )?v1 )?v2 )))):named a2 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$c (fun_app$f (uvh$ ?v0 )?v1 )?v2 )(fun_app$g ?v0 (fun_app$c ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$f (uvh$ ?v0 )?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$h (fun_app$i (uuh$ ?v0 )?v1 )?v2 )(exists ((?v3 T_dtree_sum$ ))(and (= ?v2 (fun_app$e ?v0 ?v3 ))(fun_app$h ?v1 ?v3 )))):pattern ((fun_app$h (fun_app$i (uuh$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_N_sum$ ))(! (= (fun_app$j (fun_app$k (uul$ ?v0 )?v1 )?v2 )(exists ((?v3 T_dtree_sum$ ))(and (= ?v2 (fun_app$c ?v0 ?v3 ))(fun_app$h ?v1 ?v3 )))):pattern ((fun_app$j (fun_app$k (uul$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 T_dtree_sum_a_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$l (uug$ ?v0 )?v1 )?v2 )(exists ((?v3 T_dtree_sum$ ))(and (= ?v2 (fun_app$m ?v0 ?v3 ))(fun_app$h ?v1 ?v3 )))):pattern ((fun_app$ (fun_app$l (uug$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$h (fun_app$n (uuj$ ?v0 )?v1 )?v2 )(exists ((?v3 T_N_sum$ ))(and (= ?v2 (fun_app$o ?v0 ?v3 ))(fun_app$j ?v1 ?v3 )))):pattern ((fun_app$h (fun_app$n (uuj$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_bool_fun$ )(?v2 T_N_sum$ ))(! (= (fun_app$j (fun_app$p (uuk$ ?v0 )?v1 )?v2 )(exists ((?v3 T_N_sum$ ))(and (= ?v2 (fun_app$g ?v0 ?v3 ))(fun_app$j ?v1 ?v3 )))):pattern ((fun_app$j (fun_app$p (uuk$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 T_N_sum_a_fun$ )(?v1 T_N_sum_bool_fun$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$q (uui$ ?v0 )?v1 )?v2 )(exists ((?v3 T_N_sum$ ))(and (= ?v2 (fun_app$r ?v0 ?v3 ))(fun_app$j ?v1 ?v3 )))):pattern ((fun_app$ (fun_app$q (uui$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_bool_fun$ )(?v2 T$ ))(! (= (fun_app$s (fun_app$t (uud$ ?v0 )?v1 )?v2 )(exists ((?v3 T$ ))(and (= ?v2 (fun_app$u ?v0 ?v3 ))(fun_app$s ?v1 ?v3 )))):pattern ((fun_app$s (fun_app$t (uud$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_T_dtree_sum_fun$ )(?v1 A_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$h (fun_app$v (uue$ ?v0 )?v1 )?v2 )(exists ((?v3 A$ ))(and (= ?v2 (fun_app$w ?v0 ?v3 ))(fun_app$ ?v1 ?v3 )))):pattern ((fun_app$h (fun_app$v (uue$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_T_N_sum_fun$ )(?v1 A_bool_fun$ )(?v2 T_N_sum$ ))(! (= (fun_app$j (fun_app$x (uuf$ ?v0 )?v1 )?v2 )(exists ((?v3 A$ ))(and (= ?v2 (fun_app$y ?v0 ?v3 ))(fun_app$ ?v1 ?v3 )))):pattern ((fun_app$j (fun_app$x (uuf$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_bool_fun$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$z (uum$ ?v0 )?v1 )?v2 )(exists ((?v3 A$ ))(and (= ?v2 (fun_app$aa ?v0 ?v3 ))(fun_app$ ?v1 ?v3 )))):pattern ((fun_app$ (fun_app$z (uum$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ )(?v3 T_dtree_sum$ ))(! (= (fun_app$h (fun_app$i (fun_app$ab (uup$ ?v0 )?v1 )?v2 )?v3 )(and (member$b ?v3 (image$a ?v0 ?v1 ))(fun_app$h ?v2 ?v3 ))):pattern ((fun_app$h (fun_app$i (fun_app$ab (uup$ ?v0 )?v1 )?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ )(?v3 T_N_sum$ ))(! (= (fun_app$j (fun_app$p (fun_app$ac (uut$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$j ?v2 ?v3 ))):pattern ((fun_app$j (fun_app$p (fun_app$ac (uut$ ?v0 )?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 T_dtree_sum_a_fun$ )(?v1 T_dtree_sum_set$ )(?v2 A_bool_fun$ )(?v3 A$ ))(! (= (fun_app$ (fun_app$z (fun_app$ad (uvb$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 (image$b ?v0 ?v1 ))(fun_app$ ?v2 ?v3 ))):pattern ((fun_app$ (fun_app$z (fun_app$ad (uvb$ ?v0 )?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum_bool_fun$ )(?v3 T_dtree_sum$ ))(! (= (fun_app$h (fun_app$i (fun_app$ae (uur$ ?v0 )?v1 )?v2 )?v3 )(and (member$b ?v3 (image$c ?v0 ?v1 ))(fun_app$h ?v2 ?v3 ))):pattern ((fun_app$h (fun_app$i (fun_app$ae (uur$ ?v0 )?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_bool_fun$ )(?v3 T_N_sum$ ))(! (= (fun_app$j (fun_app$p (fun_app$af (uuv$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 (image$d ?v0 ?v1 ))(fun_app$j ?v2 ?v3 ))):pattern ((fun_app$j (fun_app$p (fun_app$af (uuv$ ?v0 )?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 T_N_sum_a_fun$ )(?v1 T_N_sum_set$ )(?v2 A_bool_fun$ )(?v3 A$ ))(! (= (fun_app$ (fun_app$z (fun_app$ag (uvd$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 (image$e ?v0 ?v1 ))(fun_app$ ?v2 ?v3 ))):pattern ((fun_app$ (fun_app$z (fun_app$ag (uvd$ ?v0 )?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 A_T_dtree_sum_fun$ )(?v1 A_set$ )(?v2 T_dtree_sum_bool_fun$ )(?v3 T_dtree_sum$ ))(! (= (fun_app$h (fun_app$i (fun_app$ah (uux$ ?v0 )?v1 )?v2 )?v3 )(and (member$b ?v3 (image$f ?v0 ?v1 ))(fun_app$h ?v2 ?v3 ))):pattern ((fun_app$h (fun_app$i (fun_app$ah (uux$ ?v0 )?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 A_T_N_sum_fun$ )(?v1 A_set$ )(?v2 T_N_sum_bool_fun$ )(?v3 T_N_sum$ ))(! (= (fun_app$j (fun_app$p (fun_app$ai (uuz$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 (image$g ?v0 ?v1 ))(fun_app$j ?v2 ?v3 ))):pattern ((fun_app$j (fun_app$p (fun_app$ai (uuz$ ?v0 )?v1 )?v2 )?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_set$ )(?v2 A_bool_fun$ )(?v3 A$ ))(! (= (fun_app$ (fun_app$z (fun_app$aj (uvf$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 (fun_app$ak (image$h ?v0 )?v1 ))(fun_app$ ?v2 ?v3 ))):pattern ((fun_app$ (fun_app$z (fun_app$aj (uvf$ ?v0 )?v1 )?v2 )?v3 )))):named a22 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ )(?v3 T_dtree_sum$ ))(! (= (fun_app$h (fun_app$i (fun_app$ab (uuq$ ?v0 )?v1 )?v2 )?v3 )(and (member$b ?v3 ?v1 )(fun_app$h ?v2 (fun_app$e ?v0 ?v3 )))):pattern ((fun_app$h (fun_app$i (fun_app$ab (uuq$ ?v0 )?v1 )?v2 )?v3 )))):named a23 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ )(?v3 T_dtree_sum$ ))(! (= (fun_app$h (fun_app$n (fun_app$al (uuu$ ?v0 )?v1 )?v2 )?v3 )(and (member$b ?v3 ?v1 )(fun_app$j ?v2 (fun_app$c ?v0 ?v3 )))):pattern ((fun_app$h (fun_app$n (fun_app$al (uuu$ ?v0 )?v1 )?v2 )?v3 )))):named a24 ))
(assert (! (forall ((?v0 T_dtree_sum_a_fun$ )(?v1 T_dtree_sum_set$ )(?v2 A_bool_fun$ )(?v3 T_dtree_sum$ ))(! (= (fun_app$h (fun_app$v (fun_app$am (uvc$ ?v0 )?v1 )?v2 )?v3 )(and (member$b ?v3 ?v1 )(fun_app$ ?v2 (fun_app$m ?v0 ?v3 )))):pattern ((fun_app$h (fun_app$v (fun_app$am (uvc$ ?v0 )?v1 )?v2 )?v3 )))):named a25 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum_bool_fun$ )(?v3 T_N_sum$ ))(! (= (fun_app$j (fun_app$k (fun_app$an (uus$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 ?v1 )(fun_app$h ?v2 (fun_app$o ?v0 ?v3 )))):pattern ((fun_app$j (fun_app$k (fun_app$an (uus$ ?v0 )?v1 )?v2 )?v3 )))):named a26 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_bool_fun$ )(?v3 T_N_sum$ ))(! (= (fun_app$j (fun_app$p (fun_app$af (uuw$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 ?v1 )(fun_app$j ?v2 (fun_app$g ?v0 ?v3 )))):pattern ((fun_app$j (fun_app$p (fun_app$af (uuw$ ?v0 )?v1 )?v2 )?v3 )))):named a27 ))
(assert (! (forall ((?v0 T_N_sum_a_fun$ )(?v1 T_N_sum_set$ )(?v2 A_bool_fun$ )(?v3 T_N_sum$ ))(! (= (fun_app$j (fun_app$x (fun_app$ao (uve$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 ?v1 )(fun_app$ ?v2 (fun_app$r ?v0 ?v3 )))):pattern ((fun_app$j (fun_app$x (fun_app$ao (uve$ ?v0 )?v1 )?v2 )?v3 )))):named a28 ))
(assert (! (forall ((?v0 A_T_dtree_sum_fun$ )(?v1 A_set$ )(?v2 T_dtree_sum_bool_fun$ )(?v3 A$ ))(! (= (fun_app$ (fun_app$l (fun_app$ap (uuy$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 ?v1 )(fun_app$h ?v2 (fun_app$w ?v0 ?v3 )))):pattern ((fun_app$ (fun_app$l (fun_app$ap (uuy$ ?v0 )?v1 )?v2 )?v3 )))):named a29 ))
(assert (! (forall ((?v0 A_T_N_sum_fun$ )(?v1 A_set$ )(?v2 T_N_sum_bool_fun$ )(?v3 A$ ))(! (= (fun_app$ (fun_app$q (fun_app$aq (uva$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 ?v1 )(fun_app$j ?v2 (fun_app$y ?v0 ?v3 )))):pattern ((fun_app$ (fun_app$q (fun_app$aq (uva$ ?v0 )?v1 )?v2 )?v3 )))):named a30 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_set$ )(?v2 A_bool_fun$ )(?v3 A$ ))(! (= (fun_app$ (fun_app$z (fun_app$aj (uvg$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 ?v1 )(fun_app$ ?v2 (fun_app$aa ?v0 ?v3 )))):pattern ((fun_app$ (fun_app$z (fun_app$aj (uvg$ ?v0 )?v1 )?v2 )?v3 )))):named a31 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$ar uuo$ ?v0 )?v0 ):pattern ((fun_app$ar uuo$ ?v0 )))):named a32 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$u uub$ ?v0 )?v0 ):pattern ((fun_app$u uub$ ?v0 )))):named a33 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$as uun$ ?v0 )?v0 ):pattern ((fun_app$as uun$ ?v0 )))):named a34 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$aa uuc$ ?v0 )?v0 ):pattern ((fun_app$aa uuc$ ?v0 )))):named a35 ))
(assert (! (not (= (collect$ uu$ )(collect$ uua$ ))):named a36 ))
(assert (! (wf$ tr$ ):named a37 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$ (inr$a ?v0 )(image$ (fun_app$b (map_sum$ id$ )root$ )(cont$ ?v1 )))(= (fun_app$at root$ (fun_app$a (subtrOf$ ?v1 )?v0 ))?v0 ))):named a38 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$ (inr$a ?v0 )(image$ (fun_app$b (map_sum$ id$ )root$ )(cont$ ?v1 )))(and (member$b (inr$ (fun_app$a (subtrOf$ ?v1 )?v0 ))(cont$ ?v1 ))(= (fun_app$at root$ (fun_app$a (subtrOf$ ?v1 )?v0 ))?v0 )))):named a39 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$ (inr$a ?v0 )(image$ (fun_app$b (map_sum$ id$ )root$ )(cont$ ?v1 )))(member$b (inr$ (fun_app$a (subtrOf$ ?v1 )?v0 ))(cont$ ?v1 )))):named a40 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (member$b (inr$ ?v0 )(cont$ ?v1 ))(member$ (inr$a (fun_app$at root$ ?v0 ))(image$ (fun_app$b (map_sum$ id$ )root$ )(cont$ ?v1 ))))):named a41 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b (inr$ ?v0 )(image$a (fun_app$au (map_sum$a id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$b (inr$ ?v3 )?v2 )(= (fun_app$ar ?v1 ?v3 )?v0 ))))):named a42 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(= (member$b (inr$ ?v0 )(image$c (fun_app$av (map_sum$b id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$a ?v3 )?v2 )(= (fun_app$a ?v1 ?v3 )?v0 ))))):named a43 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$ (inr$a ?v0 )(image$d (fun_app$aw (map_sum$c id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$a ?v3 )?v2 )(= (fun_app$as ?v1 ?v3 )?v0 ))))):named a44 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ (inr$a ?v0 )(image$ (fun_app$b (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$b (inr$ ?v3 )?v2 )(= (fun_app$at ?v1 ?v3 )?v0 ))))):named a45 ))
(assert (! (= (image$i id$a )id$b ):named a46 ))
(assert (! (= (image$h id$c )id$d ):named a47 ))
(assert (! (= (image$j id$ )id$a ):named a48 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$b (inr$ ?v0 )(image$a (fun_app$au (map_sum$a id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$b (inr$ ?v3 )?v2 )(= (fun_app$ar ?v1 ?v3 )?v0 ))))):named a49 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(=> (member$b (inr$ ?v0 )(image$c (fun_app$av (map_sum$b id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$a ?v3 )?v2 )(= (fun_app$a ?v1 ?v3 )?v0 ))))):named a50 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(=> (member$ (inr$a ?v0 )(image$d (fun_app$aw (map_sum$c id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$a ?v3 )?v2 )(= (fun_app$as ?v1 ?v3 )?v0 ))))):named a51 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (inr$a ?v0 )(image$ (fun_app$b (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$b (inr$ ?v3 )?v2 )(= (fun_app$at ?v1 ?v3 )?v0 ))))):named a52 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (wf$ ?v0 )(member$b (inr$ ?v1 )(cont$ ?v0 )))(exists ((?v2 N$ ))(and (member$ (inr$a ?v2 )(image$ (fun_app$b (map_sum$ id$ )root$ )(cont$ ?v0 )))(= (fun_app$a (subtrOf$ ?v0 )?v2 )?v1 ))))):named a53 ))
(assert (! (forall ((?v0 T_set$ ))(= (fun_app$ax (image$j uub$ )?v0 )?v0 )):named a54 ))
(assert (! (forall ((?v0 A_set$ ))(= (fun_app$ak (image$h uuc$ )?v0 )?v0 )):named a55 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a56 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a57 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a58 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a59 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$ax id$a ?v0 )?v0 ):pattern ((fun_app$ax id$a ?v0 )))):named a60 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$u id$ ?v0 )?v0 ):pattern ((fun_app$u id$ ?v0 )))):named a61 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$u ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$c ?v0 (fun_app$ax (image$j ?v1 )?v3 )))):named a62 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$e ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$b ?v0 (image$a ?v1 ?v3 )))):named a63 ))
(assert (! (forall ((?v0 A$ )(?v1 T_dtree_sum_a_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$m ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$a ?v0 (image$b ?v1 ?v3 )))):named a64 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$c ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$ ?v0 (image$ ?v1 ?v3 )))):named a65 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 A_T_dtree_sum_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$w ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$b ?v0 (image$f ?v1 ?v3 )))):named a66 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$aa ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (fun_app$ak (image$h ?v1 )?v3 )))):named a67 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 A_T_N_sum_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$y ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$g ?v1 ?v3 )))):named a68 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$b ?v0 (image$c ?v1 ?v3 )))):named a69 ))
(assert (! (forall ((?v0 A$ )(?v1 T_N_sum_a_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$r ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$e ?v1 ?v3 )))):named a70 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_N_sum_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$g ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (image$d ?v1 ?v3 )))):named a71 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_bool_fun$ ))(= (fun_app$ax (image$j ?v0 )(collect$a ?v1 ))(collect$a (fun_app$t (uud$ ?v0 )?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_T_dtree_sum_fun$ )(?v1 A_bool_fun$ ))(= (image$f ?v0 (collect$ ?v1 ))(collect$b (fun_app$v (uue$ ?v0 )?v1 )))):named a73 ))
(assert (! (forall ((?v0 A_T_N_sum_fun$ )(?v1 A_bool_fun$ ))(= (image$g ?v0 (collect$ ?v1 ))(collect$c (fun_app$x (uuf$ ?v0 )?v1 )))):named a74 ))
(assert (! (forall ((?v0 T_dtree_sum_a_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (image$b ?v0 (collect$b ?v1 ))(collect$ (fun_app$l (uug$ ?v0 )?v1 )))):named a75 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (image$a ?v0 (collect$b ?v1 ))(collect$b (fun_app$i (uuh$ ?v0 )?v1 )))):named a76 ))
(assert (! (forall ((?v0 T_N_sum_a_fun$ )(?v1 T_N_sum_bool_fun$ ))(= (image$e ?v0 (collect$c ?v1 ))(collect$ (fun_app$q (uui$ ?v0 )?v1 )))):named a77 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_bool_fun$ ))(= (image$c ?v0 (collect$c ?v1 ))(collect$b (fun_app$n (uuj$ ?v0 )?v1 )))):named a78 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_bool_fun$ ))(= (image$d ?v0 (collect$c ?v1 ))(collect$c (fun_app$p (uuk$ ?v0 )?v1 )))):named a79 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (image$ ?v0 (collect$b ?v1 ))(collect$c (fun_app$k (uul$ ?v0 )?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_bool_fun$ ))(= (fun_app$ak (image$h ?v0 )(collect$ ?v1 ))(collect$ (fun_app$z (uum$ ?v0 )?v1 )))):named a81 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (wf$ ?v0 )(member$b (inr$ ?v1 )(cont$ ?v0 )))(= (fun_app$a (subtrOf$ ?v0 )(fun_app$at root$ ?v1 ))?v1 ))):named a82 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 Dtree$ )(?v4 T_dtree_sum$ ))(= (fun_app$e (fun_app$au (map_sum$a ?v0 )?v1 )(ite ?v2 (inr$ ?v3 )?v4 ))(ite ?v2 (inr$ (fun_app$ar ?v1 ?v3 ))(fun_app$e (fun_app$au (map_sum$a ?v0 )?v1 )?v4 )))):named a83 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 N$ )(?v4 T_N_sum$ ))(= (fun_app$o (fun_app$av (map_sum$b ?v0 )?v1 )(ite ?v2 (inr$a ?v3 )?v4 ))(ite ?v2 (inr$ (fun_app$a ?v1 ?v3 ))(fun_app$o (fun_app$av (map_sum$b ?v0 )?v1 )?v4 )))):named a84 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 N$ )(?v4 T_N_sum$ ))(= (fun_app$g (fun_app$aw (map_sum$c ?v0 )?v1 )(ite ?v2 (inr$a ?v3 )?v4 ))(ite ?v2 (inr$a (fun_app$as ?v1 ?v3 ))(fun_app$g (fun_app$aw (map_sum$c ?v0 )?v1 )?v4 )))):named a85 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 Dtree$ )(?v4 T_dtree_sum$ ))(= (fun_app$c (fun_app$b (map_sum$ ?v0 )?v1 )(ite ?v2 (inr$ ?v3 )?v4 ))(ite ?v2 (inr$a (fun_app$at ?v1 ?v3 ))(fun_app$c (fun_app$b (map_sum$ ?v0 )?v1 )?v4 )))):named a86 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 Dtree$ ))(=> (and (wf$ ?v0 )(and (member$b (inr$ ?v1 )(cont$ ?v0 ))(member$b (inr$ ?v2 )(cont$ ?v0 ))))(= (= (fun_app$at root$ ?v1 )(fun_app$at root$ ?v2 ))(= ?v1 ?v2 )))):named a87 ))
(assert (! (= (fun_app$aw (map_sum$c uub$ )uun$ )id$e ):named a88 ))
(assert (! (= (fun_app$au (map_sum$a uub$ )uuo$ )id$f ):named a89 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (wf$ ?v0 )(member$b (inr$ ?v1 )(cont$ ?v0 )))(wf$ ?v1 ))):named a90 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_dtree_sum_fun$ ))(=> (member$b ?v0 ?v1 )(member$b (fun_app$e ?v2 ?v0 )(image$a ?v2 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_a_fun$ ))(=> (member$b ?v0 ?v1 )(member$a (fun_app$m ?v2 ?v0 )(image$b ?v2 ?v1 )))):named a92 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ ))(=> (member$b ?v0 ?v1 )(member$ (fun_app$c ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a93 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_T_dtree_sum_fun$ ))(=> (member$a ?v0 ?v1 )(member$b (fun_app$w ?v2 ?v0 )(image$f ?v2 ?v1 )))):named a94 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_a_fun$ ))(=> (member$a ?v0 ?v1 )(member$a (fun_app$aa ?v2 ?v0 )(fun_app$ak (image$h ?v2 )?v1 )))):named a95 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_T_N_sum_fun$ ))(=> (member$a ?v0 ?v1 )(member$ (fun_app$y ?v2 ?v0 )(image$g ?v2 ?v1 )))):named a96 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_dtree_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$b (fun_app$o ?v2 ?v0 )(image$c ?v2 ?v1 )))):named a97 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_a_fun$ ))(=> (member$ ?v0 ?v1 )(member$a (fun_app$r ?v2 ?v0 )(image$e ?v2 ?v1 )))):named a98 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_N_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$g ?v2 ?v0 )(image$d ?v2 ?v1 )))):named a99 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_T_dtree_sum_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$e ?v3 ?v0 )))(member$b ?v2 (image$a ?v3 ?v1 )))):named a100 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 A$ )(?v3 T_dtree_sum_a_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$m ?v3 ?v0 )))(member$a ?v2 (image$b ?v3 ?v1 )))):named a101 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$c ?v3 ?v0 )))(member$ ?v2 (image$ ?v3 ?v1 )))):named a102 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 T_dtree_sum$ )(?v3 A_T_dtree_sum_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$w ?v3 ?v0 )))(member$b ?v2 (image$f ?v3 ?v1 )))):named a103 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A$ )(?v3 A_a_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$aa ?v3 ?v0 )))(member$a ?v2 (fun_app$ak (image$h ?v3 )?v1 )))):named a104 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 T_N_sum$ )(?v3 A_T_N_sum_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$y ?v3 ?v0 )))(member$ ?v2 (image$g ?v3 ?v1 )))):named a105 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_N_sum_T_dtree_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$o ?v3 ?v0 )))(member$b ?v2 (image$c ?v3 ?v1 )))):named a106 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 A$ )(?v3 T_N_sum_a_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$r ?v3 ?v0 )))(member$a ?v2 (image$e ?v3 ?v1 )))):named a107 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum$ )(?v3 T_N_sum_T_N_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$g ?v3 ?v0 )))(member$ ?v2 (image$d ?v3 ?v1 )))):named a108 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 (image$a ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 ?v1 )(fun_app$h ?v2 (fun_app$e ?v0 ?v3 )))))):named a109 ))
(assert (! (forall ((?v0 A_T_dtree_sum_fun$ )(?v1 A_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 (image$f ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$a ?v3 ?v1 )(fun_app$h ?v2 (fun_app$w ?v0 ?v3 )))))):named a110 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 (image$c ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$h ?v2 (fun_app$o ?v0 ?v3 )))))):named a111 ))
(assert (! (forall ((?v0 T_dtree_sum_a_fun$ )(?v1 T_dtree_sum_set$ )(?v2 A_bool_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$a ?v3 (image$b ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 ?v1 )(fun_app$ ?v2 (fun_app$m ?v0 ?v3 )))))):named a112 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_set$ )(?v2 A_bool_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$a ?v3 (fun_app$ak (image$h ?v0 )?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$a ?v3 ?v1 )(fun_app$ ?v2 (fun_app$aa ?v0 ?v3 )))))):named a113 ))
(assert (! (forall ((?v0 T_N_sum_a_fun$ )(?v1 T_N_sum_set$ )(?v2 A_bool_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$a ?v3 (image$e ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$ ?v2 (fun_app$r ?v0 ?v3 )))))):named a114 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 ?v1 )(fun_app$j ?v2 (fun_app$c ?v0 ?v3 )))))):named a115 ))
(assert (! (forall ((?v0 A_T_N_sum_fun$ )(?v1 A_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 (image$g ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$a ?v3 ?v1 )(fun_app$j ?v2 (fun_app$y ?v0 ?v3 )))))):named a116 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 (image$d ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$j ?v2 (fun_app$g ?v0 ?v3 )))))):named a117 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 (image$a ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 ?v1 )(fun_app$h ?v2 (fun_app$e ?v0 ?v3 )))))):named a118 ))
(assert (! (forall ((?v0 A_T_dtree_sum_fun$ )(?v1 A_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 (image$f ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$a ?v3 ?v1 )(fun_app$h ?v2 (fun_app$w ?v0 ?v3 )))))):named a119 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 (image$c ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$h ?v2 (fun_app$o ?v0 ?v3 )))))):named a120 ))
(assert (! (forall ((?v0 T_dtree_sum_a_fun$ )(?v1 T_dtree_sum_set$ )(?v2 A_bool_fun$ ))(=> (exists ((?v3 A$ ))(and (member$a ?v3 (image$b ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 ?v1 )(fun_app$ ?v2 (fun_app$m ?v0 ?v3 )))))):named a121 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_set$ )(?v2 A_bool_fun$ ))(=> (exists ((?v3 A$ ))(and (member$a ?v3 (fun_app$ak (image$h ?v0 )?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$a ?v3 ?v1 )(fun_app$ ?v2 (fun_app$aa ?v0 ?v3 )))))):named a122 ))
(assert (! (forall ((?v0 T_N_sum_a_fun$ )(?v1 T_N_sum_set$ )(?v2 A_bool_fun$ ))(=> (exists ((?v3 A$ ))(and (member$a ?v3 (image$e ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$ ?v2 (fun_app$r ?v0 ?v3 )))))):named a123 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 ?v1 )(fun_app$j ?v2 (fun_app$c ?v0 ?v3 )))))):named a124 ))
(assert (! (forall ((?v0 A_T_N_sum_fun$ )(?v1 A_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$ ?v3 (image$g ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$a ?v3 ?v1 )(fun_app$j ?v2 (fun_app$y ?v0 ?v3 )))))):named a125 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$ ?v3 (image$d ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$j ?v2 (fun_app$g ?v0 ?v3 )))))):named a126 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (member$b ?v4 ?v1 )(= (fun_app$c ?v2 ?v4 )(fun_app$c ?v3 ?v4 )))))(= (image$ ?v2 ?v0 )(image$ ?v3 ?v1 )))):named a127 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b ?v0 (image$a ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$e ?v1 ?v3 )))))):named a128 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 A_T_dtree_sum_fun$ )(?v2 A_set$ ))(= (member$b ?v0 (image$f ?v1 ?v2 ))(exists ((?v3 A$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$w ?v1 ?v3 )))))):named a129 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$b ?v0 (image$c ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$o ?v1 ?v3 )))))):named a130 ))
(assert (! (forall ((?v0 A$ )(?v1 T_dtree_sum_a_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a ?v0 (image$b ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$m ?v1 ?v3 )))))):named a131 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A_set$ ))(= (member$a ?v0 (fun_app$ak (image$h ?v1 )?v2 ))(exists ((?v3 A$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$aa ?v1 ?v3 )))))):named a132 ))
(assert (! (forall ((?v0 A$ )(?v1 T_N_sum_a_fun$ )(?v2 T_N_sum_set$ ))(= (member$a ?v0 (image$e ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$r ?v1 ?v3 )))))):named a133 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (image$ ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$c ?v1 ?v3 )))))):named a134 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 A_T_N_sum_fun$ )(?v2 A_set$ ))(= (member$ ?v0 (image$g ?v1 ?v2 ))(exists ((?v3 A$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$y ?v1 ?v3 )))))):named a135 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$ ?v0 (image$d ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$g ?v1 ?v3 )))))):named a136 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$u id$ ?v0 )?v0 ):pattern ((fun_app$u id$ ?v0 )))):named a137 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a138 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(=> (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a139 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$b ?v0 (image$a ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= ?v0 (fun_app$e ?v1 ?v3 ))(member$b ?v3 ?v2 ))false )))false )):named a140 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 A_T_dtree_sum_fun$ )(?v2 A_set$ ))(=> (and (member$b ?v0 (image$f ?v1 ?v2 ))(forall ((?v3 A$ ))(=> (and (= ?v0 (fun_app$w ?v1 ?v3 ))(member$a ?v3 ?v2 ))false )))false )):named a141 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_N_sum_set$ ))(=> (and (member$b ?v0 (image$c ?v1 ?v2 ))(forall ((?v3 T_N_sum$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v3 ))(member$ ?v3 ?v2 ))false )))false )):named a142 ))
(assert (! (forall ((?v0 A$ )(?v1 T_dtree_sum_a_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$a ?v0 (image$b ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= ?v0 (fun_app$m ?v1 ?v3 ))(member$b ?v3 ?v2 ))false )))false )):named a143 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A_set$ ))(=> (and (member$a ?v0 (fun_app$ak (image$h ?v1 )?v2 ))(forall ((?v3 A$ ))(=> (and (= ?v0 (fun_app$aa ?v1 ?v3 ))(member$a ?v3 ?v2 ))false )))false )):named a144 ))
(assert (! (forall ((?v0 A$ )(?v1 T_N_sum_a_fun$ )(?v2 T_N_sum_set$ ))(=> (and (member$a ?v0 (image$e ?v1 ?v2 ))(forall ((?v3 T_N_sum$ ))(=> (and (= ?v0 (fun_app$r ?v1 ?v3 ))(member$ ?v3 ?v2 ))false )))false )):named a145 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$ ?v0 (image$ ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= ?v0 (fun_app$c ?v1 ?v3 ))(member$b ?v3 ?v2 ))false )))false )):named a146 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 A_T_N_sum_fun$ )(?v2 A_set$ ))(=> (and (member$ ?v0 (image$g ?v1 ?v2 ))(forall ((?v3 A$ ))(=> (and (= ?v0 (fun_app$y ?v1 ?v3 ))(member$a ?v3 ?v2 ))false )))false )):named a147 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(=> (and (member$ ?v0 (image$d ?v1 ?v2 ))(forall ((?v3 T_N_sum$ ))(=> (and (= ?v0 (fun_app$g ?v1 ?v3 ))(member$ ?v3 ?v2 ))false )))false )):named a148 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(= (collect$b (fun_app$i (fun_app$ab (uup$ ?v0 )?v1 )?v2 ))(image$a ?v0 (collect$b (fun_app$i (fun_app$ab (uuq$ ?v0 )?v1 )?v2 ))))):named a149 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(= (collect$b (fun_app$i (fun_app$ae (uur$ ?v0 )?v1 )?v2 ))(image$c ?v0 (collect$c (fun_app$k (fun_app$an (uus$ ?v0 )?v1 )?v2 ))))):named a150 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(= (collect$c (fun_app$p (fun_app$ac (uut$ ?v0 )?v1 )?v2 ))(image$ ?v0 (collect$b (fun_app$n (fun_app$al (uuu$ ?v0 )?v1 )?v2 ))))):named a151 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(= (collect$c (fun_app$p (fun_app$af (uuv$ ?v0 )?v1 )?v2 ))(image$d ?v0 (collect$c (fun_app$p (fun_app$af (uuw$ ?v0 )?v1 )?v2 ))))):named a152 ))
(assert (! (forall ((?v0 A_T_dtree_sum_fun$ )(?v1 A_set$ )(?v2 T_dtree_sum_bool_fun$ ))(= (collect$b (fun_app$i (fun_app$ah (uux$ ?v0 )?v1 )?v2 ))(image$f ?v0 (collect$ (fun_app$l (fun_app$ap (uuy$ ?v0 )?v1 )?v2 ))))):named a153 ))
(assert (! (forall ((?v0 A_T_N_sum_fun$ )(?v1 A_set$ )(?v2 T_N_sum_bool_fun$ ))(= (collect$c (fun_app$p (fun_app$ai (uuz$ ?v0 )?v1 )?v2 ))(image$g ?v0 (collect$ (fun_app$q (fun_app$aq (uva$ ?v0 )?v1 )?v2 ))))):named a154 ))
(assert (! (forall ((?v0 T_dtree_sum_a_fun$ )(?v1 T_dtree_sum_set$ )(?v2 A_bool_fun$ ))(= (collect$ (fun_app$z (fun_app$ad (uvb$ ?v0 )?v1 )?v2 ))(image$b ?v0 (collect$b (fun_app$v (fun_app$am (uvc$ ?v0 )?v1 )?v2 ))))):named a155 ))
(assert (! (forall ((?v0 T_N_sum_a_fun$ )(?v1 T_N_sum_set$ )(?v2 A_bool_fun$ ))(= (collect$ (fun_app$z (fun_app$ag (uvd$ ?v0 )?v1 )?v2 ))(image$e ?v0 (collect$c (fun_app$x (fun_app$ao (uve$ ?v0 )?v1 )?v2 ))))):named a156 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_set$ )(?v2 A_bool_fun$ ))(= (collect$ (fun_app$z (fun_app$aj (uvf$ ?v0 )?v1 )?v2 ))(fun_app$ak (image$h ?v0 )(collect$ (fun_app$z (fun_app$aj (uvg$ ?v0 )?v1 )?v2 ))))):named a157 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (image$d ?v0 (image$ ?v1 ?v2 ))(image$ (fun_app$f (uvh$ ?v0 )?v1 )?v2 ))):named a158 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (image$ ?v0 (image$a ?v1 ?v2 ))(image$ (fun_app$d (uvi$ ?v0 )?v1 )?v2 ))):named a159 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum$ )(?v3 Dtree$ ))(=> (= (fun_app$e (fun_app$au (map_sum$a ?v0 )?v1 )?v2 )(inr$ ?v3 ))(exists ((?v4 Dtree$ ))(and (= ?v2 (inr$ ?v4 ))(= (fun_app$ar ?v1 ?v4 )?v3 ))))):named a160 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum$ )(?v3 Dtree$ ))(=> (= (fun_app$o (fun_app$av (map_sum$b ?v0 )?v1 )?v2 )(inr$ ?v3 ))(exists ((?v4 N$ ))(and (= ?v2 (inr$a ?v4 ))(= (fun_app$a ?v1 ?v4 )?v3 ))))):named a161 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 T_N_sum$ )(?v3 N$ ))(=> (= (fun_app$g (fun_app$aw (map_sum$c ?v0 )?v1 )?v2 )(inr$a ?v3 ))(exists ((?v4 N$ ))(and (= ?v2 (inr$a ?v4 ))(= (fun_app$as ?v1 ?v4 )?v3 ))))):named a162 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum$ )(?v3 N$ ))(=> (= (fun_app$c (fun_app$b (map_sum$ ?v0 )?v1 )?v2 )(inr$a ?v3 ))(exists ((?v4 Dtree$ ))(and (= ?v2 (inr$ ?v4 ))(= (fun_app$at ?v1 ?v4 )?v3 ))))):named a163 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree$ ))(! (= (fun_app$e (fun_app$au (map_sum$a ?v0 )?v1 )(inr$ ?v2 ))(inr$ (fun_app$ar ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$au (map_sum$a ?v0 )?v1 )(inr$ ?v2 ))))):named a164 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 N$ ))(! (= (fun_app$o (fun_app$av (map_sum$b ?v0 )?v1 )(inr$a ?v2 ))(inr$ (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$av (map_sum$b ?v0 )?v1 )(inr$a ?v2 ))))):named a165 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 N$ ))(! (= (fun_app$g (fun_app$aw (map_sum$c ?v0 )?v1 )(inr$a ?v2 ))(inr$a (fun_app$as ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$aw (map_sum$c ?v0 )?v1 )(inr$a ?v2 ))))):named a166 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Dtree$ ))(! (= (fun_app$c (fun_app$b (map_sum$ ?v0 )?v1 )(inr$ ?v2 ))(inr$a (fun_app$at ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$b (map_sum$ ?v0 )?v1 )(inr$ ?v2 ))))):named a167 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 Dtree$ ))(= (fun_app$e (fun_app$au (map_sum$a ?v0 )?v1 )(ite ?v2 ?v3 (inr$ ?v4 )))(ite ?v2 (fun_app$e (fun_app$au (map_sum$a ?v0 )?v1 )?v3 )(inr$ (fun_app$ar ?v1 ?v4 ))))):named a168 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 N$ ))(= (fun_app$o (fun_app$av (map_sum$b ?v0 )?v1 )(ite ?v2 ?v3 (inr$a ?v4 )))(ite ?v2 (fun_app$o (fun_app$av (map_sum$b ?v0 )?v1 )?v3 )(inr$ (fun_app$a ?v1 ?v4 ))))):named a169 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 N$ ))(= (fun_app$g (fun_app$aw (map_sum$c ?v0 )?v1 )(ite ?v2 ?v3 (inr$a ?v4 )))(ite ?v2 (fun_app$g (fun_app$aw (map_sum$c ?v0 )?v1 )?v3 )(inr$a (fun_app$as ?v1 ?v4 ))))):named a170 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 Dtree$ ))(= (fun_app$c (fun_app$b (map_sum$ ?v0 )?v1 )(ite ?v2 ?v3 (inr$ ?v4 )))(ite ?v2 (fun_app$c (fun_app$b (map_sum$ ?v0 )?v1 )?v3 )(inr$a (fun_app$at ?v1 ?v4 ))))):named a171 ))
(check-sat )
(get-unsat-core )
