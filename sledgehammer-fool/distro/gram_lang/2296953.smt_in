(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort N_bool_fun$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort T_T_sum_set$ 0 )
(declare-sort N_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_N_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort N_set_N_set_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort T_N_sum_bool_fun$ 0 )
(declare-sort N_T_dtree_sum_fun$ 0 )
(declare-sort T_N_sum_dtree_fun$ 0 )
(declare-sort T_T_N_sum_sum_set$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort T_N_sum_T_N_sum_fun$ 0 )
(declare-sort T_T_sum_T_T_sum_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_set$ 0 )
(declare-sort T_dtree_sum_dtree_fun$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun$ 0 )
(declare-sort T_set_set_T_set_set_fun$ 0 )
(declare-sort T_N_sum_T_T_N_sum_sum_fun$ 0 )
(declare-sort T_T_N_sum_sum_T_N_sum_fun$ 0 )
(declare-sort T_T_sum_set_T_T_sum_set_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_T_N_sum_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_N_sum_fun$ 0 )
(declare-sort N_N_fun_T_N_sum_T_N_sum_fun_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ 0 )
(declare-sort Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ 0 )
(declare-sort N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ 0 )
(declare-sort Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ 0 )
(declare-sort T_N_sum$ 0)
(declare-sort T_dtree_sum$ 0)
(declare-sort T_T_sum$ 0)
(declare-sort T_T_N_sum_sum$ 0)
(declare-sort T_T_dtree_sum_sum$ 0)
(declare-fun projl$ (T_N_sum$)T$)
(declare-fun inl$ (T$ )T_N_sum$)
(declare-fun projr$ (T_N_sum$)N$)
(declare-fun inr$ (N$ )T_N_sum$)
(declare-fun projl$a (T_dtree_sum$)T$)
(declare-fun inl$a (T$ )T_dtree_sum$)
(declare-fun projr$a (T_dtree_sum$)Dtree$)
(declare-fun inr$a (Dtree$ )T_dtree_sum$)
(declare-fun projl$b (T_T_sum$)T$)
(declare-fun inl$b (T$ )T_T_sum$)
(declare-fun projr$b (T_T_sum$)T$)
(declare-fun inr$b (T$ )T_T_sum$)
(declare-fun projl$c (T_T_N_sum_sum$)T$)
(declare-fun inl$c (T$ )T_T_N_sum_sum$)
(declare-fun projr$c (T_T_N_sum_sum$)T_N_sum$)
(declare-fun inr$c (T_N_sum$ )T_T_N_sum_sum$)
(declare-fun projl$d (T_T_dtree_sum_sum$)T$)
(declare-fun inl$d (T$ )T_T_dtree_sum_sum$)
(declare-fun projr$d (T_T_dtree_sum_sum$)T_dtree_sum$)
(declare-fun inr$d (T_dtree_sum$ )T_T_dtree_sum_sum$)
(declare-fun id$ ()T_T_fun$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ ()T_N_sum_T_T_N_sum_sum_fun$ )
(declare-fun wf$ (Dtree$ )Bool )
(declare-fun id$a ()T_set_T_set_fun$ )
(declare-fun id$b ()T_set_set_T_set_set_fun$ )
(declare-fun id$c ()T_T_sum_T_T_sum_fun$ )
(declare-fun id$d ()T_T_sum_set_T_T_sum_set_fun$ )
(declare-fun id$e ()N_N_fun$ )
(declare-fun id$f ()N_set_N_set_fun$ )
(declare-fun tr$a ()Dtree$ )
(declare-fun uua$ ()T_dtree_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun uub$ ()N_T_N_sum_fun$ )
(declare-fun uuc$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun node$ (N$ T_dtree_sum_set$ )Dtree$ )
(declare-fun root$ ()Dtree_N_fun$ )
(declare-fun image$ (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$ )T_N_sum_set$ )
(declare-fun inFr2$ (N_set$ Dtree$ T$ )Bool )
(declare-fun image$a (T_N_sum_T_N_sum_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun image$b (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$c (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$d (T_T_sum_T_T_sum_fun$ )T_T_sum_set_T_T_sum_set_fun$ )
(declare-fun image$e (T_T_N_sum_sum_T_N_sum_fun$ T_T_N_sum_sum_set$ )T_N_sum_set$ )
(declare-fun image$f (T_T_dtree_sum_sum_T_N_sum_fun$ T_T_dtree_sum_sum_set$ )T_N_sum_set$ )
(declare-fun image$g (T_T_N_sum_sum_T_dtree_sum_fun$ T_T_N_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$h (T_T_dtree_sum_sum_T_dtree_sum_fun$ T_T_dtree_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$i (T_N_sum_T_T_N_sum_sum_fun$ T_N_sum_set$ )T_T_N_sum_sum_set$ )
(declare-fun image$j (T_set_T_set_fun$ )T_set_set_T_set_set_fun$ )
(declare-fun image$k (N_N_fun$ )N_set_N_set_fun$ )
(declare-fun image$l (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun image$m (T_N_sum_N_fun$ T_N_sum_set$ )N_set$ )
(declare-fun image$n (T_dtree_sum_N_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun image$o (N_T_N_sum_fun$ N_set$ )T_N_sum_set$ )
(declare-fun image$p (N_T_dtree_sum_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun image$q (T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_T_N_sum_sum_set$ )
(declare-fun image$r (N_dtree_fun$ N_set$ )Dtree_set$ )
(declare-fun image$s (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun image$t (Dtree_N_fun$ Dtree_set$ )N_set$ )
(declare-fun member$ (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun vimage$ (T_N_sum_T_T_N_sum_sum_fun$ T_T_N_sum_sum_set$ )T_N_sum_set$ )
(declare-fun fun_app$ (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_dtree_sum$ )T_T_dtree_sum_sum$ )
(declare-fun map_sum$ (T_T_fun$ )Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ )
(declare-fun member$a (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$b (T_T_sum$ T_T_sum_set$ )Bool )
(declare-fun member$c (T_T_N_sum_sum$ T_T_N_sum_sum_set$ )Bool )
(declare-fun member$d (T_T_dtree_sum_sum$ T_T_dtree_sum_sum_set$ )Bool )
(declare-fun member$e (N$ N_set$ )Bool )
(declare-fun member$f (T$ T_set$ )Bool )
(declare-fun subtrOf$ (Dtree$ )N_dtree_fun$ )
(declare-fun vimage$a (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$b (N_T_N_sum_fun$ T_N_sum_set$ )N_set$ )
(declare-fun vimage$c (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun fun_app$a (T_N_sum_T_T_N_sum_sum_fun$ T_N_sum$ )T_T_N_sum_sum$ )
(declare-fun fun_app$b (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun fun_app$c (N_T_N_sum_fun$ N$ )T_N_sum$ )
(declare-fun fun_app$d (Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ Dtree_N_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun fun_app$e (N_dtree_fun$ N$ )Dtree$ )
(declare-fun fun_app$f (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$g (N_N_fun_T_N_sum_T_N_sum_fun_fun$ N_N_fun$ )T_N_sum_T_N_sum_fun$ )
(declare-fun fun_app$h (N_N_fun$ N$ )N$ )
(declare-fun fun_app$i (N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ N_dtree_fun$ )T_N_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$j (Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ Dtree_dtree_fun$ )T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$k (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$l (T_T_sum_set_T_T_sum_set_fun$ T_T_sum_set$ )T_T_sum_set$ )
(declare-fun fun_app$m (T_T_fun$ T$ )T$ )
(declare-fun fun_app$n (T_N_sum_N_fun$ T_N_sum$ )N$ )
(declare-fun fun_app$o (T_dtree_sum_N_fun$ T_dtree_sum$ )N$ )
(declare-fun fun_app$p (T_N_sum_dtree_fun$ T_N_sum$ )Dtree$ )
(declare-fun fun_app$q (T_dtree_sum_dtree_fun$ T_dtree_sum$ )Dtree$ )
(declare-fun fun_app$r (T_set_T_set_fun$ T_set$ )T_set$ )
(declare-fun fun_app$s (T_T_sum_T_T_sum_fun$ T_T_sum$ )T_T_sum$ )
(declare-fun fun_app$t (N_set_N_set_fun$ N_set$ )N_set$ )
(declare-fun fun_app$u (N_T_dtree_sum_fun$ N$ )T_dtree_sum$ )
(declare-fun fun_app$v (T_N_sum_T_N_sum_fun$ T_N_sum$ )T_N_sum$ )
(declare-fun fun_app$w (T_N_sum_T_dtree_sum_fun$ T_N_sum$ )T_dtree_sum$ )
(declare-fun fun_app$x (T_dtree_sum_T_N_sum_fun$ T_dtree_sum$ )T_N_sum$ )
(declare-fun fun_app$y (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$z (T_T_dtree_sum_sum_T_N_sum_fun$ T_T_dtree_sum_sum$ )T_N_sum$ )
(declare-fun map_sum$a (T_T_fun$ )N_N_fun_T_N_sum_T_N_sum_fun_fun$ )
(declare-fun map_sum$b (T_T_fun$ )N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ )
(declare-fun map_sum$c (T_T_fun$ )Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ )
(declare-fun map_sum$d (T_T_fun$ T_T_fun$ )T_T_sum_T_T_sum_fun$ )
(declare-fun map_sum$e (T_T_fun$ T_N_sum_N_fun$ )T_T_N_sum_sum_T_N_sum_fun$ )
(declare-fun map_sum$f (T_T_fun$ T_dtree_sum_N_fun$ )T_T_dtree_sum_sum_T_N_sum_fun$ )
(declare-fun map_sum$g (T_T_fun$ T_N_sum_dtree_fun$ )T_T_N_sum_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$h (T_T_fun$ T_dtree_sum_dtree_fun$ )T_T_dtree_sum_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$i (T_T_fun$ N_T_N_sum_fun$ )T_N_sum_T_T_N_sum_sum_fun$ )
(declare-fun map_sum$j (T_T_fun$ T_N_sum_T_dtree_sum_fun$ T_T_N_sum_sum$ )T_T_dtree_sum_sum$ )
(declare-fun map_sum$k (T_T_fun$ T_dtree_sum_T_dtree_sum_fun$ T_T_dtree_sum_sum$ )T_T_dtree_sum_sum$ )
(declare-fun map_sum$l (T_T_fun$ T_dtree_sum_T_N_sum_fun$ )T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ )
(declare-fun fun_app$aa (T_T_dtree_sum_sum_T_dtree_sum_fun$ T_T_dtree_sum_sum$ )T_dtree_sum$ )
(declare-fun fun_app$ab (T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ T_T_dtree_sum_sum$ )T_T_N_sum_sum$ )
(declare-fun fun_app$ac (T_N_sum_bool_fun$ T_N_sum$ )Bool )
(declare-fun fun_app$ad (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$ae (N_bool_fun$ N$ )Bool )
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$ uua$ ?v0 )(inr$d ?v0 )):pattern ((fun_app$ uua$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 T_N_sum$ ))(! (= (fun_app$a uu$ ?v0 )(inr$c ?v0 )):pattern ((fun_app$a uu$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$b uuc$ ?v0 )(inr$a ?v0 )):pattern ((fun_app$b uuc$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$c uub$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$c uub$ ?v0 )))):named a3 ))
(assert (! (not (exists ((?v0 N$ ))(and (member$ (inr$ ?v0 )(image$ (fun_app$d (map_sum$ id$ )root$ )(cont$ tr$ )))(= (fun_app$e (subtrOf$ tr$ )?v0 )tr$a )))):named a4 ))
(assert (! (wf$ tr$ ):named a5 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$ (inr$ ?v0 )(image$ (fun_app$d (map_sum$ id$ )root$ )(cont$ ?v1 )))(= (fun_app$f root$ (fun_app$e (subtrOf$ ?v1 )?v0 ))?v0 ))):named a6 ))
(assert (! (member$a (inr$a tr$a )(cont$ tr$ )):named a7 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$ (inr$ ?v0 )(image$a (fun_app$g (map_sum$a id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$h ?v1 ?v3 )?v0 ))))):named a8 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(= (member$a (inr$a ?v0 )(image$b (fun_app$i (map_sum$b id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$e ?v1 ?v3 )?v0 ))))):named a9 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a (inr$a ?v0 )(image$c (fun_app$j (map_sum$c id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$k ?v1 ?v3 )?v0 ))))):named a10 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ (inr$ ?v0 )(image$ (fun_app$d (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$f ?v1 ?v3 )?v0 ))))):named a11 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_T_sum_set$ ))(= (member$b (inr$b ?v0 )(fun_app$l (image$d (map_sum$d id$ ?v1 ))?v2 ))(exists ((?v3 T$ ))(and (member$b (inr$b ?v3 )?v2 )(= (fun_app$m ?v1 ?v3 )?v0 ))))):named a12 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_T_N_sum_sum_set$ ))(= (member$ (inr$ ?v0 )(image$e (map_sum$e id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$c (inr$c ?v3 )?v2 )(= (fun_app$n ?v1 ?v3 )?v0 ))))):named a13 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$ (inr$ ?v0 )(image$f (map_sum$f id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$d (inr$d ?v3 )?v2 )(= (fun_app$o ?v1 ?v3 )?v0 ))))):named a14 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_N_sum_dtree_fun$ )(?v2 T_T_N_sum_sum_set$ ))(= (member$a (inr$a ?v0 )(image$g (map_sum$g id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$c (inr$c ?v3 )?v2 )(= (fun_app$p ?v1 ?v3 )?v0 ))))):named a15 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$a (inr$a ?v0 )(image$h (map_sum$h id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$d (inr$d ?v3 )?v2 )(= (fun_app$q ?v1 ?v3 )?v0 ))))):named a16 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$c (inr$c ?v0 )(image$i (map_sum$i id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$c ?v1 ?v3 )?v0 ))))):named a17 ))
(assert (! (= (image$j id$a )id$b ):named a18 ))
(assert (! (= (image$d id$c )id$d ):named a19 ))
(assert (! (= (image$k id$e )id$f ):named a20 ))
(assert (! (= (image$l id$ )id$a ):named a21 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(=> (member$ (inr$ ?v0 )(image$a (fun_app$g (map_sum$a id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$h ?v1 ?v3 )?v0 ))))):named a22 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(=> (member$a (inr$a ?v0 )(image$b (fun_app$i (map_sum$b id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$e ?v1 ?v3 )?v0 ))))):named a23 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$a (inr$a ?v0 )(image$c (fun_app$j (map_sum$c id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$k ?v1 ?v3 )?v0 ))))):named a24 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (inr$ ?v0 )(image$ (fun_app$d (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$f ?v1 ?v3 )?v0 ))))):named a25 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_T_sum_set$ ))(=> (member$b (inr$b ?v0 )(fun_app$l (image$d (map_sum$d id$ ?v1 ))?v2 ))(exists ((?v3 T$ ))(and (member$b (inr$b ?v3 )?v2 )(= (fun_app$m ?v1 ?v3 )?v0 ))))):named a26 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_T_N_sum_sum_set$ ))(=> (member$ (inr$ ?v0 )(image$e (map_sum$e id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$c (inr$c ?v3 )?v2 )(= (fun_app$n ?v1 ?v3 )?v0 ))))):named a27 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(=> (member$ (inr$ ?v0 )(image$f (map_sum$f id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$d (inr$d ?v3 )?v2 )(= (fun_app$o ?v1 ?v3 )?v0 ))))):named a28 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_N_sum_dtree_fun$ )(?v2 T_T_N_sum_sum_set$ ))(=> (member$a (inr$a ?v0 )(image$g (map_sum$g id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$c (inr$c ?v3 )?v2 )(= (fun_app$p ?v1 ?v3 )?v0 ))))):named a29 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(=> (member$a (inr$a ?v0 )(image$h (map_sum$h id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$d (inr$d ?v3 )?v2 )(= (fun_app$q ?v1 ?v3 )?v0 ))))):named a30 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(=> (member$c (inr$c ?v0 )(image$i (map_sum$i id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$c ?v1 ?v3 )?v0 ))))):named a31 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum$ ))(= (= (inr$c ?v0 )(inr$c ?v1 ))(= ?v0 ?v1 ))):named a32 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inr$d ?v0 )(inr$d ?v1 ))(= ?v0 ?v1 ))):named a33 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a34 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a35 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum$ ))(= (= (inr$c ?v0 )(inr$c ?v1 ))(= ?v0 ?v1 ))):named a36 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inr$d ?v0 )(inr$d ?v1 ))(= ?v0 ?v1 ))):named a37 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a38 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a39 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$r id$a ?v0 )?v0 ):pattern ((fun_app$r id$a ?v0 )))):named a40 ))
(assert (! (forall ((?v0 T_T_sum$ ))(! (= (fun_app$s id$c ?v0 )?v0 ):pattern ((fun_app$s id$c ?v0 )))):named a41 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$m id$ ?v0 )?v0 ):pattern ((fun_app$m id$ ?v0 )))):named a42 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$h ?v1 ?v2 ))(member$e ?v2 ?v3 ))(member$e ?v0 (fun_app$t (image$k ?v1 )?v3 )))):named a43 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$n ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$e ?v0 (image$m ?v1 ?v3 )))):named a44 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$e ?v0 (image$n ?v1 ?v3 )))):named a45 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$c ?v1 ?v2 ))(member$e ?v2 ?v3 ))(member$ ?v0 (image$o ?v1 ?v3 )))):named a46 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$u ?v1 ?v2 ))(member$e ?v2 ?v3 ))(member$a ?v0 (image$p ?v1 ?v3 )))):named a47 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_N_sum_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$v ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (image$a ?v1 ?v3 )))):named a48 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$w ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$b ?v1 ?v3 )))):named a49 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$x ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$ ?v1 ?v3 )))):named a50 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$y ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (image$c ?v1 ?v3 )))):named a51 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$m ?v1 ?v2 ))(member$f ?v2 ?v3 ))(member$f ?v0 (fun_app$r (image$l ?v1 )?v3 )))):named a52 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$ (inr$ ?v0 )(image$ (fun_app$d (map_sum$ id$ )root$ )(cont$ ?v1 )))(and (member$a (inr$a (fun_app$e (subtrOf$ ?v1 )?v0 ))(cont$ ?v1 ))(= (fun_app$f root$ (fun_app$e (subtrOf$ ?v1 )?v0 ))?v0 )))):named a53 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$ (inr$ ?v0 )(image$ (fun_app$d (map_sum$ id$ )root$ )(cont$ ?v1 )))(member$a (inr$a (fun_app$e (subtrOf$ ?v1 )?v0 ))(cont$ ?v1 )))):named a54 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (= (fun_app$f root$ ?v0 )(fun_app$f root$ ?v1 ))(= (cont$ ?v0 )(cont$ ?v1 )))(= ?v0 ?v1 ))):named a55 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 T_T_N_sum_sum$ ))(= (map_sum$j ?v0 ?v1 (ite ?v2 (inr$c ?v3 )?v4 ))(ite ?v2 (inr$d (fun_app$w ?v1 ?v3 ))(map_sum$j ?v0 ?v1 ?v4 )))):named a56 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_dtree_sum_N_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 T_T_dtree_sum_sum$ ))(= (fun_app$z (map_sum$f ?v0 ?v1 )(ite ?v2 (inr$d ?v3 )?v4 ))(ite ?v2 (inr$ (fun_app$o ?v1 ?v3 ))(fun_app$z (map_sum$f ?v0 ?v1 )?v4 )))):named a57 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 T_T_dtree_sum_sum$ ))(= (fun_app$aa (map_sum$h ?v0 ?v1 )(ite ?v2 (inr$d ?v3 )?v4 ))(ite ?v2 (inr$a (fun_app$q ?v1 ?v3 ))(fun_app$aa (map_sum$h ?v0 ?v1 )?v4 )))):named a58 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 T_T_dtree_sum_sum$ ))(= (map_sum$k ?v0 ?v1 (ite ?v2 (inr$d ?v3 )?v4 ))(ite ?v2 (inr$d (fun_app$y ?v1 ?v3 ))(map_sum$k ?v0 ?v1 ?v4 )))):named a59 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_T_fun$ )(?v2 Bool )(?v3 T$ )(?v4 T_T_sum$ ))(= (fun_app$s (map_sum$d ?v0 ?v1 )(ite ?v2 (inr$b ?v3 )?v4 ))(ite ?v2 (inr$b (fun_app$m ?v1 ?v3 ))(fun_app$s (map_sum$d ?v0 ?v1 )?v4 )))):named a60 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 T_T_dtree_sum_sum$ ))(= (fun_app$ab (map_sum$l ?v0 ?v1 )(ite ?v2 (inr$d ?v3 )?v4 ))(ite ?v2 (inr$c (fun_app$x ?v1 ?v3 ))(fun_app$ab (map_sum$l ?v0 ?v1 )?v4 )))):named a61 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 N$ )(?v4 T_N_sum$ ))(= (fun_app$v (fun_app$g (map_sum$a ?v0 )?v1 )(ite ?v2 (inr$ ?v3 )?v4 ))(ite ?v2 (inr$ (fun_app$h ?v1 ?v3 ))(fun_app$v (fun_app$g (map_sum$a ?v0 )?v1 )?v4 )))):named a62 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 N$ )(?v4 T_N_sum$ ))(= (fun_app$w (fun_app$i (map_sum$b ?v0 )?v1 )(ite ?v2 (inr$ ?v3 )?v4 ))(ite ?v2 (inr$a (fun_app$e ?v1 ?v3 ))(fun_app$w (fun_app$i (map_sum$b ?v0 )?v1 )?v4 )))):named a63 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 Dtree$ )(?v4 T_dtree_sum$ ))(= (fun_app$y (fun_app$j (map_sum$c ?v0 )?v1 )(ite ?v2 (inr$a ?v3 )?v4 ))(ite ?v2 (inr$a (fun_app$k ?v1 ?v3 ))(fun_app$y (fun_app$j (map_sum$c ?v0 )?v1 )?v4 )))):named a64 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 Dtree$ )(?v4 T_dtree_sum$ ))(= (fun_app$x (fun_app$d (map_sum$ ?v0 )?v1 )(ite ?v2 (inr$a ?v3 )?v4 ))(ite ?v2 (inr$ (fun_app$f ?v1 ?v3 ))(fun_app$x (fun_app$d (map_sum$ ?v0 )?v1 )?v4 )))):named a65 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 N$ ))(= (fun_app$v (fun_app$g (map_sum$a ?v0 )?v1 )(ite ?v2 ?v3 (inr$ ?v4 )))(ite ?v2 (fun_app$v (fun_app$g (map_sum$a ?v0 )?v1 )?v3 )(inr$ (fun_app$h ?v1 ?v4 ))))):named a66 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 N$ ))(= (fun_app$w (fun_app$i (map_sum$b ?v0 )?v1 )(ite ?v2 ?v3 (inr$ ?v4 )))(ite ?v2 (fun_app$w (fun_app$i (map_sum$b ?v0 )?v1 )?v3 )(inr$a (fun_app$e ?v1 ?v4 ))))):named a67 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 Dtree$ ))(= (fun_app$y (fun_app$j (map_sum$c ?v0 )?v1 )(ite ?v2 ?v3 (inr$a ?v4 )))(ite ?v2 (fun_app$y (fun_app$j (map_sum$c ?v0 )?v1 )?v3 )(inr$a (fun_app$k ?v1 ?v4 ))))):named a68 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 Dtree$ ))(= (fun_app$x (fun_app$d (map_sum$ ?v0 )?v1 )(ite ?v2 ?v3 (inr$a ?v4 )))(ite ?v2 (fun_app$x (fun_app$d (map_sum$ ?v0 )?v1 )?v3 )(inr$ (fun_app$f ?v1 ?v4 ))))):named a69 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 Dtree$ ))(=> (and (wf$ ?v0 )(and (member$a (inr$a ?v1 )(cont$ ?v0 ))(member$a (inr$a ?v2 )(cont$ ?v0 ))))(= (= (fun_app$f root$ ?v1 )(fun_app$f root$ ?v2 ))(= ?v1 ?v2 )))):named a70 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (wf$ ?v0 )(member$a (inr$a ?v1 )(cont$ ?v0 )))(= (fun_app$e (subtrOf$ ?v0 )(fun_app$f root$ ?v1 ))?v1 ))):named a71 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (wf$ ?v0 )(member$a (inr$a ?v1 )(cont$ ?v0 )))(wf$ ?v1 ))):named a72 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_N_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$v ?v2 ?v0 )(image$a ?v2 ?v1 )))):named a73 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_dtree_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$a (fun_app$w ?v2 ?v0 )(image$b ?v2 ?v1 )))):named a74 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_N_fun$ ))(=> (member$ ?v0 ?v1 )(member$e (fun_app$n ?v2 ?v0 )(image$m ?v2 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ ))(=> (member$a ?v0 ?v1 )(member$ (fun_app$x ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_dtree_sum_fun$ ))(=> (member$a ?v0 ?v1 )(member$a (fun_app$y ?v2 ?v0 )(image$c ?v2 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_N_fun$ ))(=> (member$a ?v0 ?v1 )(member$e (fun_app$o ?v2 ?v0 )(image$n ?v2 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_T_N_sum_fun$ ))(=> (member$e ?v0 ?v1 )(member$ (fun_app$c ?v2 ?v0 )(image$o ?v2 ?v1 )))):named a79 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_T_dtree_sum_fun$ ))(=> (member$e ?v0 ?v1 )(member$a (fun_app$u ?v2 ?v0 )(image$p ?v2 ?v1 )))):named a80 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_N_fun$ ))(=> (member$e ?v0 ?v1 )(member$e (fun_app$h ?v2 ?v0 )(fun_app$t (image$k ?v2 )?v1 )))):named a81 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum$ )(?v3 T_N_sum_T_N_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$v ?v3 ?v0 )))(member$ ?v2 (image$a ?v3 ?v1 )))):named a82 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_N_sum_T_dtree_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$w ?v3 ?v0 )))(member$a ?v2 (image$b ?v3 ?v1 )))):named a83 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 N$ )(?v3 T_N_sum_N_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$n ?v3 ?v0 )))(member$e ?v2 (image$m ?v3 ?v1 )))):named a84 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$x ?v3 ?v0 )))(member$ ?v2 (image$ ?v3 ?v1 )))):named a85 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_T_dtree_sum_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$y ?v3 ?v0 )))(member$a ?v2 (image$c ?v3 ?v1 )))):named a86 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 N$ )(?v3 T_dtree_sum_N_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$o ?v3 ?v0 )))(member$e ?v2 (image$n ?v3 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 T_N_sum$ )(?v3 N_T_N_sum_fun$ ))(=> (and (member$e ?v0 ?v1 )(= ?v2 (fun_app$c ?v3 ?v0 )))(member$ ?v2 (image$o ?v3 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 T_dtree_sum$ )(?v3 N_T_dtree_sum_fun$ ))(=> (and (member$e ?v0 ?v1 )(= ?v2 (fun_app$u ?v3 ?v0 )))(member$a ?v2 (image$p ?v3 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N$ )(?v3 N_N_fun$ ))(=> (and (member$e ?v0 ?v1 )(= ?v2 (fun_app$h ?v3 ?v0 )))(member$e ?v2 (fun_app$t (image$k ?v3 )?v1 )))):named a90 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 (image$a ?v0 ?v1 ))(fun_app$ac ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$ac ?v2 (fun_app$v ?v0 ?v3 )))))):named a91 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$ac ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$ac ?v2 (fun_app$x ?v0 ?v3 )))))):named a92 ))
(assert (! (forall ((?v0 N_T_N_sum_fun$ )(?v1 N_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 (image$o ?v0 ?v1 ))(fun_app$ac ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$e ?v3 ?v1 )(fun_app$ac ?v2 (fun_app$c ?v0 ?v3 )))))):named a93 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 (image$b ?v0 ?v1 ))(fun_app$ad ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$ad ?v2 (fun_app$w ?v0 ?v3 )))))):named a94 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 (image$c ?v0 ?v1 ))(fun_app$ad ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$ad ?v2 (fun_app$y ?v0 ?v3 )))))):named a95 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 (image$p ?v0 ?v1 ))(fun_app$ad ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$e ?v3 ?v1 )(fun_app$ad ?v2 (fun_app$u ?v0 ?v3 )))))):named a96 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_N_sum_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$e ?v3 (image$m ?v0 ?v1 ))(fun_app$ae ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$ae ?v2 (fun_app$n ?v0 ?v3 )))))):named a97 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$e ?v3 (image$n ?v0 ?v1 ))(fun_app$ae ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$ae ?v2 (fun_app$o ?v0 ?v3 )))))):named a98 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$e ?v3 (fun_app$t (image$k ?v0 )?v1 ))(fun_app$ae ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$e ?v3 ?v1 )(fun_app$ae ?v2 (fun_app$h ?v0 ?v3 )))))):named a99 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$ ?v3 (image$a ?v0 ?v1 ))(fun_app$ac ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$ac ?v2 (fun_app$v ?v0 ?v3 )))))):named a100 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$ac ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$ac ?v2 (fun_app$x ?v0 ?v3 )))))):named a101 ))
(assert (! (forall ((?v0 N_T_N_sum_fun$ )(?v1 N_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$ ?v3 (image$o ?v0 ?v1 ))(fun_app$ac ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$e ?v3 ?v1 )(fun_app$ac ?v2 (fun_app$c ?v0 ?v3 )))))):named a102 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 (image$b ?v0 ?v1 ))(fun_app$ad ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$ad ?v2 (fun_app$w ?v0 ?v3 )))))):named a103 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 (image$c ?v0 ?v1 ))(fun_app$ad ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$ad ?v2 (fun_app$y ?v0 ?v3 )))))):named a104 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 (image$p ?v0 ?v1 ))(fun_app$ad ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$e ?v3 ?v1 )(fun_app$ad ?v2 (fun_app$u ?v0 ?v3 )))))):named a105 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_N_sum_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$e ?v3 (image$m ?v0 ?v1 ))(fun_app$ae ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$ae ?v2 (fun_app$n ?v0 ?v3 )))))):named a106 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$e ?v3 (image$n ?v0 ?v1 ))(fun_app$ae ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$ae ?v2 (fun_app$o ?v0 ?v3 )))))):named a107 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$e ?v3 (fun_app$t (image$k ?v0 )?v1 ))(fun_app$ae ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$e ?v3 ?v1 )(fun_app$ae ?v2 (fun_app$h ?v0 ?v3 )))))):named a108 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$x ?v2 ?v4 )(fun_app$x ?v3 ?v4 )))))(= (image$ ?v2 ?v0 )(image$ ?v3 ?v1 )))):named a109 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$ ?v0 (image$a ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$v ?v1 ?v3 )))))):named a110 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (image$ ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$x ?v1 ?v3 )))))):named a111 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 N_set$ ))(= (member$ ?v0 (image$o ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$e ?v3 ?v2 )(= ?v0 (fun_app$c ?v1 ?v3 )))))):named a112 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$a ?v0 (image$b ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$w ?v1 ?v3 )))))):named a113 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a ?v0 (image$c ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$y ?v1 ?v3 )))))):named a114 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N_set$ ))(= (member$a ?v0 (image$p ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$e ?v3 ?v2 )(= ?v0 (fun_app$u ?v1 ?v3 )))))):named a115 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$e ?v0 (image$m ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$n ?v1 ?v3 )))))):named a116 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$e ?v0 (image$n ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$o ?v1 ?v3 )))))):named a117 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(= (member$e ?v0 (fun_app$t (image$k ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$e ?v3 ?v2 )(= ?v0 (fun_app$h ?v1 ?v3 )))))):named a118 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$m id$ ?v0 )?v0 ):pattern ((fun_app$m id$ ?v0 )))):named a119 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(=> (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a120 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a121 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (member$a (inr$a ?v0 )(cont$ ?v1 ))(member$ (inr$ (fun_app$f root$ ?v0 ))(image$ (fun_app$d (map_sum$ id$ )root$ )(cont$ ?v1 ))))):named a122 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 T_N_sum$ )(?v3 N$ ))(=> (= (fun_app$v (fun_app$g (map_sum$a ?v0 )?v1 )?v2 )(inr$ ?v3 ))(exists ((?v4 N$ ))(and (= ?v2 (inr$ ?v4 ))(= (fun_app$h ?v1 ?v4 )?v3 ))))):named a123 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum$ )(?v3 Dtree$ ))(=> (= (fun_app$w (fun_app$i (map_sum$b ?v0 )?v1 )?v2 )(inr$a ?v3 ))(exists ((?v4 N$ ))(and (= ?v2 (inr$ ?v4 ))(= (fun_app$e ?v1 ?v4 )?v3 ))))):named a124 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum$ )(?v3 Dtree$ ))(=> (= (fun_app$y (fun_app$j (map_sum$c ?v0 )?v1 )?v2 )(inr$a ?v3 ))(exists ((?v4 Dtree$ ))(and (= ?v2 (inr$a ?v4 ))(= (fun_app$k ?v1 ?v4 )?v3 ))))):named a125 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum$ )(?v3 N$ ))(=> (= (fun_app$x (fun_app$d (map_sum$ ?v0 )?v1 )?v2 )(inr$ ?v3 ))(exists ((?v4 Dtree$ ))(and (= ?v2 (inr$a ?v4 ))(= (fun_app$f ?v1 ?v4 )?v3 ))))):named a126 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 N$ ))(! (= (fun_app$v (fun_app$g (map_sum$a ?v0 )?v1 )(inr$ ?v2 ))(inr$ (fun_app$h ?v1 ?v2 ))):pattern ((fun_app$v (fun_app$g (map_sum$a ?v0 )?v1 )(inr$ ?v2 ))))):named a127 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 N$ ))(! (= (fun_app$w (fun_app$i (map_sum$b ?v0 )?v1 )(inr$ ?v2 ))(inr$a (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$w (fun_app$i (map_sum$b ?v0 )?v1 )(inr$ ?v2 ))))):named a128 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree$ ))(! (= (fun_app$y (fun_app$j (map_sum$c ?v0 )?v1 )(inr$a ?v2 ))(inr$a (fun_app$k ?v1 ?v2 ))):pattern ((fun_app$y (fun_app$j (map_sum$c ?v0 )?v1 )(inr$a ?v2 ))))):named a129 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Dtree$ ))(! (= (fun_app$x (fun_app$d (map_sum$ ?v0 )?v1 )(inr$a ?v2 ))(inr$ (fun_app$f ?v1 ?v2 ))):pattern ((fun_app$x (fun_app$d (map_sum$ ?v0 )?v1 )(inr$a ?v2 ))))):named a130 ))
(assert (! (= (map_sum$d id$ id$ )id$c ):named a131 ))
(assert (! (forall ((?v0 T_T_sum$ ))(= (fun_app$s (map_sum$d id$ id$ )?v0 )?v0 )):named a132 ))
(assert (! (forall ((?v0 Dtree$ ))(= (node$ (fun_app$f root$ ?v0 )(cont$ ?v0 ))?v0 )):named a133 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_T_dtree_sum_sum_set$ ))(= (vimage$ uu$ (image$q (map_sum$l id$ ?v0 )?v1 ))(image$ ?v0 (vimage$a uua$ ?v1 )))):named a134 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$b uub$ (image$a (fun_app$g (map_sum$a id$ )?v0 )?v1 ))(fun_app$t (image$k ?v0 )(vimage$b uub$ ?v1 )))):named a135 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$c uuc$ (image$b (fun_app$i (map_sum$b id$ )?v0 )?v1 ))(image$r ?v0 (vimage$b uub$ ?v1 )))):named a136 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$c uuc$ (image$c (fun_app$j (map_sum$c id$ )?v0 )?v1 ))(image$s ?v0 (vimage$c uuc$ ?v1 )))):named a137 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$b uub$ (image$ (fun_app$d (map_sum$ id$ )?v0 )?v1 ))(image$t ?v0 (vimage$c uuc$ ?v1 )))):named a138 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ )(?v3 Dtree$ ))(=> (and (inFr2$ ?v0 ?v1 ?v2 )(and (member$e (fun_app$f root$ ?v3 )?v0 )(member$a (inr$a ?v1 )(cont$ ?v3 ))))(inFr2$ ?v0 ?v3 ?v2 ))):named a139 ))
(check-sat )
(get-unsat-core )
