(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort A_set$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort T_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort T_set_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort T_bool_fun$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort A_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_a_fun$ 0 )
(declare-sort A_set_a_set_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort T_N_sum_bool_fun$ 0 )
(declare-sort A_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_a_fun$ 0 )
(declare-sort T_N_sum_T_N_sum_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort A_set_set_a_set_set_fun$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun$ 0 )
(declare-sort T_set_set_T_set_set_fun$ 0 )
(declare-sort T_N_sum_set_T_N_sum_set_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort N_N_fun_T_N_sum_T_N_sum_fun_fun$ 0 )
(declare-sort T_set_set_set_T_set_set_set_fun$ 0 )
(declare-sort T_dtree_sum_set_T_dtree_sum_set_fun$ 0 )
(declare-sort Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ 0 )
(declare-sort N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ 0 )
(declare-sort Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ 0 )
(declare-sort T_N_sum$ 0)
(declare-sort T_dtree_sum$ 0)
(declare-fun projl$ (T_N_sum$)T$)
(declare-fun inl$ (T$ )T_N_sum$)
(declare-fun projr$ (T_N_sum$)N$)
(declare-fun inr$ (N$ )T_N_sum$)
(declare-fun projl$a (T_dtree_sum$)T$)
(declare-fun inl$a (T$ )T_dtree_sum$)
(declare-fun projr$a (T_dtree_sum$)Dtree$)
(declare-fun inr$a (Dtree$ )T_dtree_sum$)
(declare-fun k$ (Dtree$ )A_set$ )
(declare-fun x$ ()A$ )
(declare-fun id$ ()T_T_fun$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun wf$ (Dtree$ )Bool )
(declare-fun id$a ()A_set_a_set_fun$ )
(declare-fun id$b ()A_set_set_a_set_set_fun$ )
(declare-fun id$c ()T_set_set_T_set_set_fun$ )
(declare-fun id$d ()T_set_set_set_T_set_set_set_fun$ )
(declare-fun id$e ()T_N_sum_T_N_sum_fun$ )
(declare-fun id$f ()T_N_sum_set_T_N_sum_set_fun$ )
(declare-fun id$g ()T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun id$h ()T_dtree_sum_set_T_dtree_sum_set_fun$ )
(declare-fun id$i ()T_set_T_set_fun$ )
(declare-fun id$j ()A_a_fun$ )
(declare-fun tr$a ()Dtree$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun root$ ()Dtree_N_fun$ )
(declare-fun image$ (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$ )T_N_sum_set$ )
(declare-fun image$a (T_N_sum_T_N_sum_fun$ )T_N_sum_set_T_N_sum_set_fun$ )
(declare-fun image$b (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$c (T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_set_T_dtree_sum_set_fun$ )
(declare-fun image$d (A_set_a_set_fun$ )A_set_set_a_set_set_fun$ )
(declare-fun image$e (T_set_set_T_set_set_fun$ )T_set_set_set_T_set_set_set_fun$ )
(declare-fun image$f (T_set_T_set_fun$ )T_set_set_T_set_set_fun$ )
(declare-fun image$g (A_a_fun$ )A_set_a_set_fun$ )
(declare-fun image$h (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun image$i (T_N_sum_a_fun$ T_N_sum_set$ )A_set$ )
(declare-fun image$j (A_T_N_sum_fun$ A_set$ )T_N_sum_set$ )
(declare-fun image$k (A_T_dtree_sum_fun$ A_set$ )T_dtree_sum_set$ )
(declare-fun image$l (T_dtree_sum_a_fun$ T_dtree_sum_set$ )A_set$ )
(declare-fun member$ (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun fun_app$ (N_dtree_fun$ N$ )Dtree$ )
(declare-fun map_sum$ (T_T_fun$ )Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$c (T$ T_set$ )Bool )
(declare-fun member$d (T_set$ T_set_set$ )Bool )
(declare-fun subtrOf$ (Dtree$ )N_dtree_fun$ )
(declare-fun fun_app$a (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$b (Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ Dtree_N_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun fun_app$c (T_N_sum_set_T_N_sum_set_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun fun_app$d (N_N_fun_T_N_sum_T_N_sum_fun_fun$ N_N_fun$ )T_N_sum_T_N_sum_fun$ )
(declare-fun fun_app$e (N_N_fun$ N$ )N$ )
(declare-fun fun_app$f (N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ N_dtree_fun$ )T_N_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$g (T_dtree_sum_set_T_dtree_sum_set_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun fun_app$h (Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ Dtree_dtree_fun$ )T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$i (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$j (A_a_fun$ A$ )A$ )
(declare-fun fun_app$k (A_set_a_set_fun$ A_set$ )A_set$ )
(declare-fun fun_app$l (T_set_set_T_set_set_fun$ T_set_set$ )T_set_set$ )
(declare-fun fun_app$m (T_set_T_set_fun$ T_set$ )T_set$ )
(declare-fun fun_app$n (T_T_fun$ T$ )T$ )
(declare-fun fun_app$o (T_N_sum_a_fun$ T_N_sum$ )A$ )
(declare-fun fun_app$p (A_T_N_sum_fun$ A$ )T_N_sum$ )
(declare-fun fun_app$q (A_T_dtree_sum_fun$ A$ )T_dtree_sum$ )
(declare-fun fun_app$r (T_dtree_sum_a_fun$ T_dtree_sum$ )A$ )
(declare-fun fun_app$s (T_N_sum_T_N_sum_fun$ T_N_sum$ )T_N_sum$ )
(declare-fun fun_app$t (T_N_sum_T_dtree_sum_fun$ T_N_sum$ )T_dtree_sum$ )
(declare-fun fun_app$u (T_dtree_sum_T_N_sum_fun$ T_dtree_sum$ )T_N_sum$ )
(declare-fun fun_app$v (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$w (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$x (T_N_sum_bool_fun$ T_N_sum$ )Bool )
(declare-fun fun_app$y (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$z (T_bool_fun$ T$ )Bool )
(declare-fun map_sum$a (T_T_fun$ )N_N_fun_T_N_sum_T_N_sum_fun_fun$ )
(declare-fun map_sum$b (T_T_fun$ )N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ )
(declare-fun map_sum$c (T_T_fun$ )Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ )
(assert (! (not (exists ((?v0 N$ ))(and (= (k$ (fun_app$ (subtrOf$ tr$ )(fun_app$a root$ tr$a )))(k$ (fun_app$ (subtrOf$ tr$ )?v0 )))(member$ (inr$ ?v0 )(image$ (fun_app$b (map_sum$ id$ )root$ )(cont$ tr$ )))))):named a0 ))
(assert (! (member$a x$ (k$ tr$a )):named a1 ))
(assert (! (wf$ tr$ ):named a2 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$ (inr$ ?v0 )(image$ (fun_app$b (map_sum$ id$ )root$ )(cont$ ?v1 )))(= (fun_app$a root$ (fun_app$ (subtrOf$ ?v1 )?v0 ))?v0 ))):named a3 ))
(assert (! (member$b (inr$a tr$a )(cont$ tr$ )):named a4 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$ (inr$ ?v0 )(fun_app$c (image$a (fun_app$d (map_sum$a id$ )?v1 ))?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$e ?v1 ?v3 )?v0 ))))):named a5 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(= (member$b (inr$a ?v0 )(image$b (fun_app$f (map_sum$b id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$ ?v1 ?v3 )?v0 ))))):named a6 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b (inr$a ?v0 )(fun_app$g (image$c (fun_app$h (map_sum$c id$ )?v1 ))?v2 ))(exists ((?v3 Dtree$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$i ?v1 ?v3 )?v0 ))))):named a7 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ (inr$ ?v0 )(image$ (fun_app$b (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$a ?v1 ?v3 )?v0 ))))):named a8 ))
(assert (! (= (image$d id$a )id$b ):named a9 ))
(assert (! (= (image$e id$c )id$d ):named a10 ))
(assert (! (= (image$a id$e )id$f ):named a11 ))
(assert (! (= (image$c id$g )id$h ):named a12 ))
(assert (! (= (image$f id$i )id$c ):named a13 ))
(assert (! (= (image$g id$j )id$a ):named a14 ))
(assert (! (= (image$h id$ )id$i ):named a15 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(=> (member$ (inr$ ?v0 )(fun_app$c (image$a (fun_app$d (map_sum$a id$ )?v1 ))?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$e ?v1 ?v3 )?v0 ))))):named a16 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(=> (member$b (inr$a ?v0 )(image$b (fun_app$f (map_sum$b id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$ ?v1 ?v3 )?v0 ))))):named a17 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$b (inr$a ?v0 )(fun_app$g (image$c (fun_app$h (map_sum$c id$ )?v1 ))?v2 ))(exists ((?v3 Dtree$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$i ?v1 ?v3 )?v0 ))))):named a18 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (inr$ ?v0 )(image$ (fun_app$b (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$a ?v1 ?v3 )?v0 ))))):named a19 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a20 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a21 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a22 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a23 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$j id$j ?v0 )?v0 ):pattern ((fun_app$j id$j ?v0 )))):named a24 ))
(assert (! (forall ((?v0 A_set$ ))(! (= (fun_app$k id$a ?v0 )?v0 ):pattern ((fun_app$k id$a ?v0 )))):named a25 ))
(assert (! (forall ((?v0 T_set_set$ ))(! (= (fun_app$l id$c ?v0 )?v0 ):pattern ((fun_app$l id$c ?v0 )))):named a26 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$m id$i ?v0 )?v0 ):pattern ((fun_app$m id$i ?v0 )))):named a27 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$n id$ ?v0 )?v0 ):pattern ((fun_app$n id$ ?v0 )))):named a28 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$j ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (fun_app$k (image$g ?v1 )?v3 )))):named a29 ))
(assert (! (forall ((?v0 A$ )(?v1 T_N_sum_a_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$i ?v1 ?v3 )))):named a30 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 A_T_N_sum_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$p ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$j ?v1 ?v3 )))):named a31 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 A_T_dtree_sum_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$q ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$b ?v0 (image$k ?v1 ?v3 )))):named a32 ))
(assert (! (forall ((?v0 A$ )(?v1 T_dtree_sum_a_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$r ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$a ?v0 (image$l ?v1 ?v3 )))):named a33 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_N_sum_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$s ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (fun_app$c (image$a ?v1 )?v3 )))):named a34 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$t ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$b ?v0 (image$b ?v1 ?v3 )))):named a35 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$u ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$ ?v0 (image$ ?v1 ?v3 )))):named a36 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$v ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$b ?v0 (fun_app$g (image$c ?v1 )?v3 )))):named a37 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$n ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$c ?v0 (fun_app$m (image$h ?v1 )?v3 )))):named a38 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$ (inr$ ?v0 )(image$ (fun_app$b (map_sum$ id$ )root$ )(cont$ ?v1 )))(and (member$b (inr$a (fun_app$ (subtrOf$ ?v1 )?v0 ))(cont$ ?v1 ))(= (fun_app$a root$ (fun_app$ (subtrOf$ ?v1 )?v0 ))?v0 )))):named a39 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$ (inr$ ?v0 )(image$ (fun_app$b (map_sum$ id$ )root$ )(cont$ ?v1 )))(member$b (inr$a (fun_app$ (subtrOf$ ?v1 )?v0 ))(cont$ ?v1 )))):named a40 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 N$ )(?v4 T_N_sum$ ))(= (fun_app$s (fun_app$d (map_sum$a ?v0 )?v1 )(ite ?v2 (inr$ ?v3 )?v4 ))(ite ?v2 (inr$ (fun_app$e ?v1 ?v3 ))(fun_app$s (fun_app$d (map_sum$a ?v0 )?v1 )?v4 )))):named a41 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 N$ )(?v4 T_N_sum$ ))(= (fun_app$t (fun_app$f (map_sum$b ?v0 )?v1 )(ite ?v2 (inr$ ?v3 )?v4 ))(ite ?v2 (inr$a (fun_app$ ?v1 ?v3 ))(fun_app$t (fun_app$f (map_sum$b ?v0 )?v1 )?v4 )))):named a42 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 Dtree$ )(?v4 T_dtree_sum$ ))(= (fun_app$v (fun_app$h (map_sum$c ?v0 )?v1 )(ite ?v2 (inr$a ?v3 )?v4 ))(ite ?v2 (inr$a (fun_app$i ?v1 ?v3 ))(fun_app$v (fun_app$h (map_sum$c ?v0 )?v1 )?v4 )))):named a43 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 Dtree$ )(?v4 T_dtree_sum$ ))(= (fun_app$u (fun_app$b (map_sum$ ?v0 )?v1 )(ite ?v2 (inr$a ?v3 )?v4 ))(ite ?v2 (inr$ (fun_app$a ?v1 ?v3 ))(fun_app$u (fun_app$b (map_sum$ ?v0 )?v1 )?v4 )))):named a44 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 N$ ))(= (fun_app$s (fun_app$d (map_sum$a ?v0 )?v1 )(ite ?v2 ?v3 (inr$ ?v4 )))(ite ?v2 (fun_app$s (fun_app$d (map_sum$a ?v0 )?v1 )?v3 )(inr$ (fun_app$e ?v1 ?v4 ))))):named a45 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 N$ ))(= (fun_app$t (fun_app$f (map_sum$b ?v0 )?v1 )(ite ?v2 ?v3 (inr$ ?v4 )))(ite ?v2 (fun_app$t (fun_app$f (map_sum$b ?v0 )?v1 )?v3 )(inr$a (fun_app$ ?v1 ?v4 ))))):named a46 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 Dtree$ ))(= (fun_app$v (fun_app$h (map_sum$c ?v0 )?v1 )(ite ?v2 ?v3 (inr$a ?v4 )))(ite ?v2 (fun_app$v (fun_app$h (map_sum$c ?v0 )?v1 )?v3 )(inr$a (fun_app$i ?v1 ?v4 ))))):named a47 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 Dtree$ ))(= (fun_app$u (fun_app$b (map_sum$ ?v0 )?v1 )(ite ?v2 ?v3 (inr$a ?v4 )))(ite ?v2 (fun_app$u (fun_app$b (map_sum$ ?v0 )?v1 )?v3 )(inr$ (fun_app$a ?v1 ?v4 ))))):named a48 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 N$ ))(! (= (fun_app$s (fun_app$d (map_sum$a ?v0 )?v1 )(inr$ ?v2 ))(inr$ (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$s (fun_app$d (map_sum$a ?v0 )?v1 )(inr$ ?v2 ))))):named a49 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 N$ ))(! (= (fun_app$t (fun_app$f (map_sum$b ?v0 )?v1 )(inr$ ?v2 ))(inr$a (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$t (fun_app$f (map_sum$b ?v0 )?v1 )(inr$ ?v2 ))))):named a50 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree$ ))(! (= (fun_app$v (fun_app$h (map_sum$c ?v0 )?v1 )(inr$a ?v2 ))(inr$a (fun_app$i ?v1 ?v2 ))):pattern ((fun_app$v (fun_app$h (map_sum$c ?v0 )?v1 )(inr$a ?v2 ))))):named a51 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Dtree$ ))(! (= (fun_app$u (fun_app$b (map_sum$ ?v0 )?v1 )(inr$a ?v2 ))(inr$ (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$u (fun_app$b (map_sum$ ?v0 )?v1 )(inr$a ?v2 ))))):named a52 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 Dtree$ ))(=> (and (wf$ ?v0 )(and (member$b (inr$a ?v1 )(cont$ ?v0 ))(member$b (inr$a ?v2 )(cont$ ?v0 ))))(= (= (fun_app$a root$ ?v1 )(fun_app$a root$ ?v2 ))(= ?v1 ?v2 )))):named a53 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (wf$ ?v0 )(member$b (inr$a ?v1 )(cont$ ?v0 )))(= (fun_app$ (subtrOf$ ?v0 )(fun_app$a root$ ?v1 ))?v1 ))):named a54 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (wf$ ?v0 )(member$b (inr$a ?v1 )(cont$ ?v0 )))(wf$ ?v1 ))):named a55 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_a_fun$ ))(=> (member$a ?v0 ?v1 )(member$a (fun_app$j ?v2 ?v0 )(fun_app$k (image$g ?v2 )?v1 )))):named a56 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_a_fun$ ))(=> (member$ ?v0 ?v1 )(member$a (fun_app$o ?v2 ?v0 )(image$i ?v2 ?v1 )))):named a57 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_T_N_sum_fun$ ))(=> (member$a ?v0 ?v1 )(member$ (fun_app$p ?v2 ?v0 )(image$j ?v2 ?v1 )))):named a58 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_T_dtree_sum_fun$ ))(=> (member$a ?v0 ?v1 )(member$b (fun_app$q ?v2 ?v0 )(image$k ?v2 ?v1 )))):named a59 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_a_fun$ ))(=> (member$b ?v0 ?v1 )(member$a (fun_app$r ?v2 ?v0 )(image$l ?v2 ?v1 )))):named a60 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_N_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$s ?v2 ?v0 )(fun_app$c (image$a ?v2 )?v1 )))):named a61 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_dtree_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$b (fun_app$t ?v2 ?v0 )(image$b ?v2 ?v1 )))):named a62 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ ))(=> (member$b ?v0 ?v1 )(member$ (fun_app$u ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a63 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_dtree_sum_fun$ ))(=> (member$b ?v0 ?v1 )(member$b (fun_app$v ?v2 ?v0 )(fun_app$g (image$c ?v2 )?v1 )))):named a64 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_T_fun$ ))(=> (member$c ?v0 ?v1 )(member$c (fun_app$n ?v2 ?v0 )(fun_app$m (image$h ?v2 )?v1 )))):named a65 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A$ )(?v3 A_a_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$j ?v3 ?v0 )))(member$a ?v2 (fun_app$k (image$g ?v3 )?v1 )))):named a66 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 A$ )(?v3 T_N_sum_a_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$o ?v3 ?v0 )))(member$a ?v2 (image$i ?v3 ?v1 )))):named a67 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 T_N_sum$ )(?v3 A_T_N_sum_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$p ?v3 ?v0 )))(member$ ?v2 (image$j ?v3 ?v1 )))):named a68 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 T_dtree_sum$ )(?v3 A_T_dtree_sum_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$q ?v3 ?v0 )))(member$b ?v2 (image$k ?v3 ?v1 )))):named a69 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 A$ )(?v3 T_dtree_sum_a_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$r ?v3 ?v0 )))(member$a ?v2 (image$l ?v3 ?v1 )))):named a70 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum$ )(?v3 T_N_sum_T_N_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$s ?v3 ?v0 )))(member$ ?v2 (fun_app$c (image$a ?v3 )?v1 )))):named a71 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_N_sum_T_dtree_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$t ?v3 ?v0 )))(member$b ?v2 (image$b ?v3 ?v1 )))):named a72 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$u ?v3 ?v0 )))(member$ ?v2 (image$ ?v3 ?v1 )))):named a73 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_T_dtree_sum_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$v ?v3 ?v0 )))(member$b ?v2 (fun_app$g (image$c ?v3 )?v1 )))):named a74 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T$ )(?v3 T_T_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$n ?v3 ?v0 )))(member$c ?v2 (fun_app$m (image$h ?v3 )?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_set$ )(?v2 A_bool_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$a ?v3 (fun_app$k (image$g ?v0 )?v1 ))(fun_app$w ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$a ?v3 ?v1 )(fun_app$w ?v2 (fun_app$j ?v0 ?v3 )))))):named a76 ))
(assert (! (forall ((?v0 A_T_N_sum_fun$ )(?v1 A_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 (image$j ?v0 ?v1 ))(fun_app$x ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$a ?v3 ?v1 )(fun_app$x ?v2 (fun_app$p ?v0 ?v3 )))))):named a77 ))
(assert (! (forall ((?v0 T_N_sum_a_fun$ )(?v1 T_N_sum_set$ )(?v2 A_bool_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$a ?v3 (image$i ?v0 ?v1 ))(fun_app$w ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$w ?v2 (fun_app$o ?v0 ?v3 )))))):named a78 ))
(assert (! (forall ((?v0 T_dtree_sum_a_fun$ )(?v1 T_dtree_sum_set$ )(?v2 A_bool_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$a ?v3 (image$l ?v0 ?v1 ))(fun_app$w ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 ?v1 )(fun_app$w ?v2 (fun_app$r ?v0 ?v3 )))))):named a79 ))
(assert (! (forall ((?v0 A_T_dtree_sum_fun$ )(?v1 A_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 (image$k ?v0 ?v1 ))(fun_app$y ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$a ?v3 ?v1 )(fun_app$y ?v2 (fun_app$q ?v0 ?v3 )))))):named a80 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 (fun_app$c (image$a ?v0 )?v1 ))(fun_app$x ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$x ?v2 (fun_app$s ?v0 ?v3 )))))):named a81 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$x ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 ?v1 )(fun_app$x ?v2 (fun_app$u ?v0 ?v3 )))))):named a82 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 (image$b ?v0 ?v1 ))(fun_app$y ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$y ?v2 (fun_app$t ?v0 ?v3 )))))):named a83 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 (fun_app$g (image$c ?v0 )?v1 ))(fun_app$y ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$b ?v3 ?v1 )(fun_app$y ?v2 (fun_app$v ?v0 ?v3 )))))):named a84 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_set$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(=> (member$c ?v3 (fun_app$m (image$h ?v0 )?v1 ))(fun_app$z ?v2 ?v3 )))(forall ((?v3 T$ ))(=> (member$c ?v3 ?v1 )(fun_app$z ?v2 (fun_app$n ?v0 ?v3 )))))):named a85 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_set$ )(?v2 A_bool_fun$ ))(=> (exists ((?v3 A$ ))(and (member$a ?v3 (fun_app$k (image$g ?v0 )?v1 ))(fun_app$w ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$a ?v3 ?v1 )(fun_app$w ?v2 (fun_app$j ?v0 ?v3 )))))):named a86 ))
(assert (! (forall ((?v0 A_T_N_sum_fun$ )(?v1 A_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$ ?v3 (image$j ?v0 ?v1 ))(fun_app$x ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$a ?v3 ?v1 )(fun_app$x ?v2 (fun_app$p ?v0 ?v3 )))))):named a87 ))
(assert (! (forall ((?v0 T_N_sum_a_fun$ )(?v1 T_N_sum_set$ )(?v2 A_bool_fun$ ))(=> (exists ((?v3 A$ ))(and (member$a ?v3 (image$i ?v0 ?v1 ))(fun_app$w ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$w ?v2 (fun_app$o ?v0 ?v3 )))))):named a88 ))
(assert (! (forall ((?v0 T_dtree_sum_a_fun$ )(?v1 T_dtree_sum_set$ )(?v2 A_bool_fun$ ))(=> (exists ((?v3 A$ ))(and (member$a ?v3 (image$l ?v0 ?v1 ))(fun_app$w ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 ?v1 )(fun_app$w ?v2 (fun_app$r ?v0 ?v3 )))))):named a89 ))
(assert (! (forall ((?v0 A_T_dtree_sum_fun$ )(?v1 A_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 (image$k ?v0 ?v1 ))(fun_app$y ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$a ?v3 ?v1 )(fun_app$y ?v2 (fun_app$q ?v0 ?v3 )))))):named a90 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$ ?v3 (fun_app$c (image$a ?v0 )?v1 ))(fun_app$x ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$x ?v2 (fun_app$s ?v0 ?v3 )))))):named a91 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$x ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 ?v1 )(fun_app$x ?v2 (fun_app$u ?v0 ?v3 )))))):named a92 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 (image$b ?v0 ?v1 ))(fun_app$y ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$y ?v2 (fun_app$t ?v0 ?v3 )))))):named a93 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 (fun_app$g (image$c ?v0 )?v1 ))(fun_app$y ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$b ?v3 ?v1 )(fun_app$y ?v2 (fun_app$v ?v0 ?v3 )))))):named a94 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_set$ )(?v2 T_bool_fun$ ))(=> (exists ((?v3 T$ ))(and (member$c ?v3 (fun_app$m (image$h ?v0 )?v1 ))(fun_app$z ?v2 ?v3 )))(exists ((?v3 T$ ))(and (member$c ?v3 ?v1 )(fun_app$z ?v2 (fun_app$n ?v0 ?v3 )))))):named a95 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set$ )(?v2 T_set_T_set_fun$ )(?v3 T_set_T_set_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_set$ ))(=> (member$d ?v4 ?v1 )(= (fun_app$m ?v2 ?v4 )(fun_app$m ?v3 ?v4 )))))(= (fun_app$l (image$f ?v2 )?v0 )(fun_app$l (image$f ?v3 )?v1 )))):named a96 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_N_sum_fun$ )(?v3 T_N_sum_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_N_sum$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$s ?v2 ?v4 )(fun_app$s ?v3 ?v4 )))))(= (fun_app$c (image$a ?v2 )?v0 )(fun_app$c (image$a ?v3 )?v1 )))):named a97 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_dtree_sum_fun$ )(?v3 T_N_sum_T_dtree_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_N_sum$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$t ?v2 ?v4 )(fun_app$t ?v3 ?v4 )))))(= (image$b ?v2 ?v0 )(image$b ?v3 ?v1 )))):named a98 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_dtree_sum_fun$ )(?v3 T_dtree_sum_T_dtree_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (member$b ?v4 ?v1 )(= (fun_app$v ?v2 ?v4 )(fun_app$v ?v3 ?v4 )))))(= (fun_app$g (image$c ?v2 )?v0 )(fun_app$g (image$c ?v3 )?v1 )))):named a99 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ )(?v2 T_T_fun$ )(?v3 T_T_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T$ ))(=> (member$c ?v4 ?v1 )(= (fun_app$n ?v2 ?v4 )(fun_app$n ?v3 ?v4 )))))(= (fun_app$m (image$h ?v2 )?v0 )(fun_app$m (image$h ?v3 )?v1 )))):named a100 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_a_fun$ )(?v3 T_N_sum_a_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_N_sum$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$o ?v2 ?v4 )(fun_app$o ?v3 ?v4 )))))(= (image$i ?v2 ?v0 )(image$i ?v3 ?v1 )))):named a101 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_T_dtree_sum_fun$ )(?v3 A_T_dtree_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$q ?v2 ?v4 )(fun_app$q ?v3 ?v4 )))))(= (image$k ?v2 ?v0 )(image$k ?v3 ?v1 )))):named a102 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_T_N_sum_fun$ )(?v3 A_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$p ?v2 ?v4 )(fun_app$p ?v3 ?v4 )))))(= (image$j ?v2 ?v0 )(image$j ?v3 ?v1 )))):named a103 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$j ?v2 ?v4 )(fun_app$j ?v3 ?v4 )))))(= (fun_app$k (image$g ?v2 )?v0 )(fun_app$k (image$g ?v3 )?v1 )))):named a104 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (member$b ?v4 ?v1 )(= (fun_app$u ?v2 ?v4 )(fun_app$u ?v3 ?v4 )))))(= (image$ ?v2 ?v0 )(image$ ?v3 ?v1 )))):named a105 ))
(check-sat )
(get-unsat-core )
