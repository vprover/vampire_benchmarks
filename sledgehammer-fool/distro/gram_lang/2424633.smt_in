(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort N_bool_fun$ 0 )
(declare-sort T_bool_fun$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort T_T_sum_set$ 0 )
(declare-sort N_T_N_sum_fun$ 0 )
(declare-sort T_T_N_sum_fun$ 0 )
(declare-sort T_T_T_sum_fun$ 0 )
(declare-sort Dtree_bool_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort T_N_sum_bool_fun$ 0 )
(declare-sort N_T_dtree_sum_fun$ 0 )
(declare-sort T_T_N_sum_sum_set$ 0 )
(declare-sort T_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort T_N_sum_T_N_sum_fun$ 0 )
(declare-sort T_T_T_N_sum_sum_fun$ 0 )
(declare-sort T_T_sum_T_T_sum_fun$ 0 )
(declare-sort Dtree_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_set$ 0 )
(declare-sort Dtree_set_dtree_set_fun$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_T_T_N_sum_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ 0 )
(declare-sort T_dtree_sum_set_T_dtree_sum_set_fun$ 0 )
(declare-sort Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ 0 )
(declare-sort T_dtree_sum$ 0)
(declare-sort T_T_sum$ 0)
(declare-sort T_N_sum$ 0)
(declare-sort T_T_N_sum_sum$ 0)
(declare-sort T_T_dtree_sum_sum$ 0)
(declare-fun projl$ (T_dtree_sum$)T$)
(declare-fun inl$ (T$ )T_dtree_sum$)
(declare-fun projr$ (T_dtree_sum$)Dtree$)
(declare-fun inr$ (Dtree$ )T_dtree_sum$)
(declare-fun projl$a (T_T_sum$)T$)
(declare-fun inl$a (T$ )T_T_sum$)
(declare-fun projr$a (T_T_sum$)T$)
(declare-fun inr$a (T$ )T_T_sum$)
(declare-fun projl$b (T_N_sum$)T$)
(declare-fun inl$b (T$ )T_N_sum$)
(declare-fun projr$b (T_N_sum$)N$)
(declare-fun inr$b (N$ )T_N_sum$)
(declare-fun projl$c (T_T_N_sum_sum$)T$)
(declare-fun inl$c (T$ )T_T_N_sum_sum$)
(declare-fun projr$c (T_T_N_sum_sum$)T_N_sum$)
(declare-fun inr$c (T_N_sum$ )T_T_N_sum_sum$)
(declare-fun projl$d (T_T_dtree_sum_sum$)T$)
(declare-fun inl$d (T$ )T_T_dtree_sum_sum$)
(declare-fun projr$d (T_T_dtree_sum_sum$)T_dtree_sum$)
(declare-fun inr$d (T_dtree_sum$ )T_T_dtree_sum_sum$)
(declare-fun id$ ()T_T_fun$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ ()T_T_dtree_sum_fun$ )
(declare-fun id$a ()T_set_T_set_fun$ )
(declare-fun id$b ()T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun id$c ()T_dtree_sum_set_T_dtree_sum_set_fun$ )
(declare-fun id$d ()Dtree_dtree_fun$ )
(declare-fun id$e ()Dtree_set_dtree_set_fun$ )
(declare-fun id$f ()T_T_sum_T_T_sum_fun$ )
(declare-fun tr0$ ()Dtree$ )
(declare-fun uua$ ()T_T_T_sum_fun$ )
(declare-fun uub$ ()T_T_T_N_sum_sum_fun$ )
(declare-fun uuc$ ()T_T_T_dtree_sum_sum_fun$ )
(declare-fun uud$ ()T_T_N_sum_fun$ )
(declare-fun uue$ ()T_dtree_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun uuf$ ()T_N_sum_T_T_N_sum_sum_fun$ )
(declare-fun uug$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun uuh$ ()N_T_N_sum_fun$ )
(declare-fun uui$ (N_set$ )N_bool_fun$ )
(declare-fun uuj$ (T_dtree_sum_set$ )T_dtree_sum_bool_fun$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun root$ ()Dtree_N_fun$ )
(declare-fun image$ (T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_set_T_dtree_sum_set_fun$ )
(declare-fun inFr2$ (N_set$ )Dtree_T_bool_fun_fun$ )
(declare-fun hsubst$ (Dtree$ )Dtree_dtree_fun$ )
(declare-fun image$a (T_T_sum_T_T_sum_fun$ T_T_sum_set$ )T_T_sum_set$ )
(declare-fun image$b (T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_T_N_sum_sum_set$ )
(declare-fun image$c (T_T_dtree_sum_sum_T_T_dtree_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_T_dtree_sum_sum_set$ )
(declare-fun image$d (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$e (T_N_sum_T_N_sum_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun image$f (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$ )T_N_sum_set$ )
(declare-fun image$g (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun image$h (Dtree_dtree_fun$ )Dtree_set_dtree_set_fun$ )
(declare-fun image$i (N_N_fun$ N_set$ )N_set$ )
(declare-fun image$j (N_T_dtree_sum_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun image$k (T_dtree_sum_N_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun image$l (Dtree_N_fun$ Dtree_set$ )N_set$ )
(declare-fun member$ (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun vimage$ (T_T_dtree_sum_fun$ T_dtree_sum_set$ )T_set$ )
(declare-fun collect$ (T_dtree_sum_bool_fun$ )T_dtree_sum_set$ )
(declare-fun fun_app$ (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_dtree_sum$ )T_T_dtree_sum_sum$ )
(declare-fun map_sum$ (T_T_fun$ )Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ )
(declare-fun member$a (N$ N_set$ )Bool )
(declare-fun member$b (T_T_N_sum_sum$ T_T_N_sum_sum_set$ )Bool )
(declare-fun member$c (T_T_dtree_sum_sum$ T_T_dtree_sum_sum_set$ )Bool )
(declare-fun member$d (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun member$e (T$ T_set$ )Bool )
(declare-fun member$f (Dtree$ Dtree_set$ )Bool )
(declare-fun vimage$a (T_T_T_sum_fun$ T_T_sum_set$ )T_set$ )
(declare-fun vimage$b (T_T_T_N_sum_sum_fun$ T_T_N_sum_sum_set$ )T_set$ )
(declare-fun vimage$c (T_T_T_dtree_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_set$ )
(declare-fun vimage$d (T_T_N_sum_fun$ T_N_sum_set$ )T_set$ )
(declare-fun vimage$e (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun vimage$f (N_N_fun$ N_set$ )N_set$ )
(declare-fun vimage$g (N_T_dtree_sum_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun vimage$h (T_dtree_sum_N_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun vimage$i (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$j (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun vimage$k (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$l (T_N_sum_T_T_N_sum_sum_fun$ T_T_N_sum_sum_set$ )T_N_sum_set$ )
(declare-fun vimage$m (N_T_N_sum_fun$ T_N_sum_set$ )N_set$ )
(declare-fun collect$a (T_bool_fun$ )T_set$ )
(declare-fun collect$b (T_N_sum_bool_fun$ )T_N_sum_set$ )
(declare-fun collect$c (Dtree_bool_fun$ )Dtree_set$ )
(declare-fun collect$d (N_bool_fun$ )N_set$ )
(declare-fun fun_app$a (T_N_sum_T_T_N_sum_sum_fun$ T_N_sum$ )T_T_N_sum_sum$ )
(declare-fun fun_app$b (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun fun_app$c (N_T_N_sum_fun$ N$ )T_N_sum$ )
(declare-fun fun_app$d (T_T_T_dtree_sum_sum_fun$ T$ )T_T_dtree_sum_sum$ )
(declare-fun fun_app$e (T_T_T_N_sum_sum_fun$ T$ )T_T_N_sum_sum$ )
(declare-fun fun_app$f (T_T_dtree_sum_fun$ T$ )T_dtree_sum$ )
(declare-fun fun_app$g (T_T_T_sum_fun$ T$ )T_T_sum$ )
(declare-fun fun_app$h (T_T_N_sum_fun$ T$ )T_N_sum$ )
(declare-fun fun_app$i (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$j (N_bool_fun$ N$ )Bool )
(declare-fun fun_app$k (T_dtree_sum_set_T_dtree_sum_set_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun fun_app$l (Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ Dtree_dtree_fun$ )T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$m (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$n (Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ Dtree_N_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun fun_app$o (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$p (N_N_fun$ N$ )N$ )
(declare-fun fun_app$q (N_T_dtree_sum_fun$ N$ )T_dtree_sum$ )
(declare-fun fun_app$r (T_dtree_sum_N_fun$ T_dtree_sum$ )N$ )
(declare-fun fun_app$s (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$t (T_T_fun$ T$ )T$ )
(declare-fun fun_app$u (Dtree_set_dtree_set_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun fun_app$v (T_dtree_sum_T_N_sum_fun$ T_dtree_sum$ )T_N_sum$ )
(declare-fun fun_app$w (Dtree_bool_fun$ Dtree$ )Bool )
(declare-fun fun_app$x (T_N_sum_bool_fun$ T_N_sum$ )Bool )
(declare-fun fun_app$y (T_bool_fun$ T$ )Bool )
(declare-fun fun_app$z (T_N_sum_T_dtree_sum_fun$ T_N_sum$ )T_dtree_sum$ )
(declare-fun hsubst_c$ (Dtree$ Dtree$ )T_dtree_sum_set$ )
(declare-fun map_sum$a (T_T_fun$ T_T_fun$ )T_T_sum_T_T_sum_fun$ )
(declare-fun map_sum$b (T_T_fun$ T_dtree_sum_T_N_sum_fun$ )T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ )
(declare-fun map_sum$c (T_T_fun$ T_dtree_sum_T_dtree_sum_fun$ )T_T_dtree_sum_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun map_sum$d (T_T_fun$ N_dtree_fun$ )T_N_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$e (T_T_fun$ N_N_fun$ )T_N_sum_T_N_sum_fun$ )
(declare-fun map_sum$f (T_T_fun$ )Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ )
(declare-fun fun_app$aa (T_N_sum_T_N_sum_fun$ T_N_sum$ )T_N_sum$ )
(declare-fun fun_app$ab (T_T_sum_T_T_sum_fun$ T_T_sum$ )T_T_sum$ )
(declare-fun fun_app$ac (Dtree_T_bool_fun_fun$ Dtree$ )T_bool_fun$ )
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$ uue$ ?v0 )(inr$d ?v0 )):pattern ((fun_app$ uue$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 T_N_sum$ ))(! (= (fun_app$a uuf$ ?v0 )(inr$c ?v0 )):pattern ((fun_app$a uuf$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$b uug$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$b uug$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$c uuh$ ?v0 )(inr$b ?v0 )):pattern ((fun_app$c uuh$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$d uuc$ ?v0 )(inl$d ?v0 )):pattern ((fun_app$d uuc$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$e uub$ ?v0 )(inl$c ?v0 )):pattern ((fun_app$e uub$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$f uu$ ?v0 )(inl$ ?v0 )):pattern ((fun_app$f uu$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$g uua$ ?v0 )(inl$a ?v0 )):pattern ((fun_app$g uua$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$h uud$ ?v0 )(inl$b ?v0 )):pattern ((fun_app$h uud$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum$ ))(! (= (fun_app$i (uuj$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$i (uuj$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N$ ))(! (= (fun_app$j (uui$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$j (uui$ ?v0 )?v1 )))):named a10 ))
(assert (! (not (= (vimage$ uu$ (fun_app$k (image$ (fun_app$l (map_sum$ id$ )(hsubst$ tr0$ )))(cont$ tr$ )))(vimage$ uu$ (cont$ tr$ )))):named a11 ))
(assert (! (not (= (fun_app$m root$ tr$ )(fun_app$m root$ tr0$ ))):named a12 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_T_sum_set$ ))(= (vimage$a uua$ (image$a (map_sum$a id$ ?v0 )?v1 ))(vimage$a uua$ ?v1 ))):named a13 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_T_dtree_sum_sum_set$ ))(= (vimage$b uub$ (image$b (map_sum$b id$ ?v0 )?v1 ))(vimage$c uuc$ ?v1 ))):named a14 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_T_dtree_sum_sum_set$ ))(= (vimage$c uuc$ (image$c (map_sum$c id$ ?v0 )?v1 ))(vimage$c uuc$ ?v1 ))):named a15 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$ uu$ (image$d (map_sum$d id$ ?v0 )?v1 ))(vimage$d uud$ ?v1 ))):named a16 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$d uud$ (image$e (map_sum$e id$ ?v0 )?v1 ))(vimage$d uud$ ?v1 ))):named a17 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$ uu$ (fun_app$k (image$ (fun_app$l (map_sum$ id$ )?v0 ))?v1 ))(vimage$ uu$ ?v1 ))):named a18 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$d uud$ (image$f (fun_app$n (map_sum$f id$ )?v0 )?v1 ))(vimage$ uu$ ?v1 ))):named a19 ))
(assert (! (forall ((?v0 T$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$b (inl$c ?v0 )(image$b (map_sum$b id$ ?v1 )?v2 ))(member$c (inl$d ?v0 )?v2 ))):named a20 ))
(assert (! (forall ((?v0 T$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$c (inl$d ?v0 )(image$c (map_sum$c id$ ?v1 )?v2 ))(member$c (inl$d ?v0 )?v2 ))):named a21 ))
(assert (! (forall ((?v0 T$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(= (member$ (inl$ ?v0 )(image$d (map_sum$d id$ ?v1 )?v2 ))(member$d (inl$b ?v0 )?v2 ))):named a22 ))
(assert (! (forall ((?v0 T$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$d (inl$b ?v0 )(image$e (map_sum$e id$ ?v1 )?v2 ))(member$d (inl$b ?v0 )?v2 ))):named a23 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ (inl$ ?v0 )(fun_app$k (image$ (fun_app$l (map_sum$ id$ )?v1 ))?v2 ))(member$ (inl$ ?v0 )?v2 ))):named a24 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$d (inl$b ?v0 )(image$f (fun_app$n (map_sum$f id$ )?v1 )?v2 ))(member$ (inl$ ?v0 )?v2 ))):named a25 ))
(assert (! (= (vimage$e id$ )id$a ):named a26 ))
(assert (! (= (image$g id$ )id$a ):named a27 ))
(assert (! (= (image$ id$b )id$c ):named a28 ))
(assert (! (= (image$h id$d )id$e ):named a29 ))
(assert (! (forall ((?v0 T$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(=> (member$ (inl$ ?v0 )(image$d (map_sum$d id$ ?v1 )?v2 ))(member$d (inl$b ?v0 )?v2 ))):named a30 ))
(assert (! (forall ((?v0 T$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(=> (member$d (inl$b ?v0 )(image$e (map_sum$e id$ ?v1 )?v2 ))(member$d (inl$b ?v0 )?v2 ))):named a31 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (inl$ ?v0 )(fun_app$k (image$ (fun_app$l (map_sum$ id$ )?v1 ))?v2 ))(member$ (inl$ ?v0 )?v2 ))):named a32 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$d (inl$b ?v0 )(image$f (fun_app$n (map_sum$f id$ )?v1 )?v2 ))(member$ (inl$ ?v0 )?v2 ))):named a33 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (= (fun_app$m root$ ?v0 )(fun_app$m root$ tr0$ ))(= (cont$ (fun_app$o (hsubst$ tr0$ )?v0 ))(fun_app$k (image$ (fun_app$l (map_sum$ id$ )(hsubst$ tr0$ )))(cont$ tr0$ ))))):named a34 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (not (= (fun_app$m root$ ?v0 )(fun_app$m root$ tr0$ )))(= (cont$ (fun_app$o (hsubst$ tr0$ )?v0 ))(fun_app$k (image$ (fun_app$l (map_sum$ id$ )(hsubst$ tr0$ )))(cont$ ?v0 ))))):named a35 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a36 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$b ?v0 )(inl$b ?v1 ))(= ?v0 ?v1 ))):named a37 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a38 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$b ?v0 )(inl$b ?v1 ))(= ?v0 ?v1 ))):named a39 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(= (member$a ?v0 (vimage$f ?v1 ?v2 ))(member$a (fun_app$p ?v1 ?v0 )?v2 ))):named a40 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a ?v0 (vimage$g ?v1 ?v2 ))(member$ (fun_app$q ?v1 ?v0 )?v2 ))):named a41 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(= (member$ ?v0 (vimage$h ?v1 ?v2 ))(member$a (fun_app$r ?v1 ?v0 )?v2 ))):named a42 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (vimage$i ?v1 ?v2 ))(member$ (fun_app$s ?v1 ?v0 )?v2 ))):named a43 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$e ?v0 (vimage$ ?v1 ?v2 ))(member$ (fun_app$f ?v1 ?v0 )?v2 ))):named a44 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$e ?v0 (vimage$d ?v1 ?v2 ))(member$d (fun_app$h ?v1 ?v0 )?v2 ))):named a45 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$f ?v0 (vimage$j ?v1 ?v2 ))(member$ (fun_app$b ?v1 ?v0 )?v2 ))):named a46 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$p ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$a ?v1 (vimage$f ?v0 ?v3 )))):named a47 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$r ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$ ?v1 (vimage$h ?v0 ?v3 )))):named a48 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$q ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$a ?v1 (vimage$g ?v0 ?v3 )))):named a49 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$s ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$ ?v1 (vimage$i ?v0 ?v3 )))):named a50 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$f ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$e ?v1 (vimage$ ?v0 ?v3 )))):named a51 ))
(assert (! (forall ((?v0 T_T_N_sum_fun$ )(?v1 T$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= (fun_app$h ?v0 ?v1 )?v2 )(member$d ?v2 ?v3 ))(member$e ?v1 (vimage$d ?v0 ?v3 )))):named a52 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$b ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$f ?v1 (vimage$j ?v0 ?v3 )))):named a53 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$t id$ ?v0 )?v0 ):pattern ((fun_app$t id$ ?v0 )))):named a54 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (= (fun_app$m root$ ?v0 )(fun_app$m root$ tr0$ ))(= (fun_app$o (hsubst$ tr0$ )?v0 )(fun_app$o (hsubst$ tr0$ )tr0$ )))):named a55 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v2 ))(member$f ?v2 ?v3 ))(member$f ?v0 (fun_app$u (image$h ?v1 )?v3 )))):named a56 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$p ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (image$i ?v1 ?v3 )))):named a57 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$q ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$j ?v1 ?v3 )))):named a58 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$v ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$d ?v0 (image$f ?v1 ?v3 )))):named a59 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$r ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$k ?v1 ?v3 )))):named a60 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$s ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (fun_app$k (image$ ?v1 )?v3 )))):named a61 ))
(assert (! (forall ((?v0 Dtree$ ))(= (fun_app$m root$ (fun_app$o (hsubst$ tr0$ )?v0 ))(fun_app$m root$ ?v0 ))):named a62 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (hsubst_c$ tr0$ ?v0 )(ite (= (fun_app$m root$ ?v0 )(fun_app$m root$ tr0$ ))(cont$ tr0$ )(cont$ ?v0 ))):pattern ((hsubst_c$ tr0$ ?v0 )))):named a63 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (= (fun_app$m root$ ?v0 )(fun_app$m root$ tr0$ ))(= (vimage$ uu$ (cont$ (fun_app$o (hsubst$ tr0$ )?v0 )))(vimage$ uu$ (cont$ tr0$ ))))):named a64 ))
(assert (! (forall ((?v0 Dtree$ ))(= (vimage$d uud$ (image$f (fun_app$n (map_sum$f id$ )root$ )(cont$ ?v0 )))(vimage$ uu$ (cont$ ?v0 )))):named a65 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (= (fun_app$m root$ ?v0 )(fun_app$m root$ ?v1 ))(= (fun_app$o (hsubst$ ?v1 )?v0 )(fun_app$o (hsubst$ ?v1 )?v1 )))):named a66 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (fun_app$m root$ (fun_app$o (hsubst$ ?v0 )?v1 ))(fun_app$m root$ ?v1 ))):named a67 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_dtree_fun$ ))(=> (member$f ?v0 ?v1 )(member$f (fun_app$o ?v2 ?v0 )(fun_app$u (image$h ?v2 )?v1 )))):named a68 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_N_fun$ ))(=> (member$a ?v0 ?v1 )(member$a (fun_app$p ?v2 ?v0 )(image$i ?v2 ?v1 )))):named a69 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_T_dtree_sum_fun$ ))(=> (member$a ?v0 ?v1 )(member$ (fun_app$q ?v2 ?v0 )(image$j ?v2 ?v1 )))):named a70 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$d (fun_app$v ?v2 ?v0 )(image$f ?v2 ?v1 )))):named a71 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_N_fun$ ))(=> (member$ ?v0 ?v1 )(member$a (fun_app$r ?v2 ?v0 )(image$k ?v2 ?v1 )))):named a72 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_dtree_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$s ?v2 ?v0 )(fun_app$k (image$ ?v2 )?v1 )))):named a73 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree$ )(?v3 Dtree_dtree_fun$ ))(=> (and (member$f ?v0 ?v1 )(= ?v2 (fun_app$o ?v3 ?v0 )))(member$f ?v2 (fun_app$u (image$h ?v3 )?v1 )))):named a74 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N$ )(?v3 N_N_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$p ?v3 ?v0 )))(member$a ?v2 (image$i ?v3 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 T_dtree_sum$ )(?v3 N_T_dtree_sum_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$q ?v3 ?v0 )))(member$ ?v2 (image$j ?v3 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$v ?v3 ?v0 )))(member$d ?v2 (image$f ?v3 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 N$ )(?v3 T_dtree_sum_N_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$r ?v3 ?v0 )))(member$a ?v2 (image$k ?v3 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_T_dtree_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$s ?v3 ?v0 )))(member$ ?v2 (fun_app$k (image$ ?v3 )?v1 )))):named a79 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_set$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(=> (member$f ?v3 (fun_app$u (image$h ?v0 )?v1 ))(fun_app$w ?v2 ?v3 )))(forall ((?v3 Dtree$ ))(=> (member$f ?v3 ?v1 )(fun_app$w ?v2 (fun_app$o ?v0 ?v3 )))))):named a80 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$d ?v3 (image$f ?v0 ?v1 ))(fun_app$x ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$x ?v2 (fun_app$v ?v0 ?v3 )))))):named a81 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$a ?v3 (image$i ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$a ?v3 ?v1 )(fun_app$j ?v2 (fun_app$p ?v0 ?v3 )))))):named a82 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$a ?v3 (image$k ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$j ?v2 (fun_app$r ?v0 ?v3 )))))):named a83 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 (image$j ?v0 ?v1 ))(fun_app$i ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$a ?v3 ?v1 )(fun_app$i ?v2 (fun_app$q ?v0 ?v3 )))))):named a84 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 (fun_app$k (image$ ?v0 )?v1 ))(fun_app$i ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$i ?v2 (fun_app$s ?v0 ?v3 )))))):named a85 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_set$ )(?v2 Dtree_bool_fun$ ))(=> (exists ((?v3 Dtree$ ))(and (member$f ?v3 (fun_app$u (image$h ?v0 )?v1 ))(fun_app$w ?v2 ?v3 )))(exists ((?v3 Dtree$ ))(and (member$f ?v3 ?v1 )(fun_app$w ?v2 (fun_app$o ?v0 ?v3 )))))):named a86 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$d ?v3 (image$f ?v0 ?v1 ))(fun_app$x ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$x ?v2 (fun_app$v ?v0 ?v3 )))))):named a87 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$a ?v3 (image$i ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$a ?v3 ?v1 )(fun_app$j ?v2 (fun_app$p ?v0 ?v3 )))))):named a88 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$a ?v3 (image$k ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$j ?v2 (fun_app$r ?v0 ?v3 )))))):named a89 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 (image$j ?v0 ?v1 ))(fun_app$i ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$a ?v3 ?v1 )(fun_app$i ?v2 (fun_app$q ?v0 ?v3 )))))):named a90 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 (fun_app$k (image$ ?v0 )?v1 ))(fun_app$i ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$i ?v2 (fun_app$s ?v0 ?v3 )))))):named a91 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_set$ )(?v2 Dtree_dtree_fun$ )(?v3 Dtree_dtree_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 Dtree$ ))(=> (member$f ?v4 ?v1 )(= (fun_app$o ?v2 ?v4 )(fun_app$o ?v3 ?v4 )))))(= (fun_app$u (image$h ?v2 )?v0 )(fun_app$u (image$h ?v3 )?v1 )))):named a92 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_dtree_sum_fun$ )(?v3 T_dtree_sum_T_dtree_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$s ?v2 ?v4 )(fun_app$s ?v3 ?v4 )))))(= (fun_app$k (image$ ?v2 )?v0 )(fun_app$k (image$ ?v3 )?v1 )))):named a93 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$v ?v2 ?v4 )(fun_app$v ?v3 ?v4 )))))(= (image$f ?v2 ?v0 )(image$f ?v3 ?v1 )))):named a94 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$f ?v0 (fun_app$u (image$h ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$f ?v3 ?v2 )(= ?v0 (fun_app$o ?v1 ?v3 )))))):named a95 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$d ?v0 (image$f ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$v ?v1 ?v3 )))))):named a96 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(= (member$a ?v0 (image$i ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$p ?v1 ?v3 )))))):named a97 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a ?v0 (image$k ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$r ?v1 ?v3 )))))):named a98 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N_set$ ))(= (member$ ?v0 (image$j ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$q ?v1 ?v3 )))))):named a99 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (fun_app$k (image$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$s ?v1 ?v3 )))))):named a100 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$t id$ ?v0 )?v0 ):pattern ((fun_app$t id$ ?v0 )))):named a101 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N$ )(?v2 N_set$ ))(=> (member$a (fun_app$p ?v0 ?v1 )?v2 )(member$a ?v1 (vimage$f ?v0 ?v2 )))):named a102 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum$ )(?v2 N_set$ ))(=> (member$a (fun_app$r ?v0 ?v1 )?v2 )(member$ ?v1 (vimage$h ?v0 ?v2 )))):named a103 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (fun_app$q ?v0 ?v1 )?v2 )(member$a ?v1 (vimage$g ?v0 ?v2 )))):named a104 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (fun_app$s ?v0 ?v1 )?v2 )(member$ ?v1 (vimage$i ?v0 ?v2 )))):named a105 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (fun_app$f ?v0 ?v1 )?v2 )(member$e ?v1 (vimage$ ?v0 ?v2 )))):named a106 ))
(assert (! (forall ((?v0 T_T_N_sum_fun$ )(?v1 T$ )(?v2 T_N_sum_set$ ))(=> (member$d (fun_app$h ?v0 ?v1 )?v2 )(member$e ?v1 (vimage$d ?v0 ?v2 )))):named a107 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (fun_app$b ?v0 ?v1 )?v2 )(member$f ?v1 (vimage$j ?v0 ?v2 )))):named a108 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(=> (member$a ?v0 (vimage$f ?v1 ?v2 ))(member$a (fun_app$p ?v1 ?v0 )?v2 ))):named a109 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$a ?v0 (vimage$g ?v1 ?v2 ))(member$ (fun_app$q ?v1 ?v0 )?v2 ))):named a110 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(=> (member$ ?v0 (vimage$h ?v1 ?v2 ))(member$a (fun_app$r ?v1 ?v0 )?v2 ))):named a111 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$ ?v0 (vimage$i ?v1 ?v2 ))(member$ (fun_app$s ?v1 ?v0 )?v2 ))):named a112 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$e ?v0 (vimage$ ?v1 ?v2 ))(member$ (fun_app$f ?v1 ?v0 )?v2 ))):named a113 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(=> (member$e ?v0 (vimage$d ?v1 ?v2 ))(member$d (fun_app$h ?v1 ?v0 )?v2 ))):named a114 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$f ?v0 (vimage$j ?v1 ?v2 ))(member$ (fun_app$b ?v1 ?v0 )?v2 ))):named a115 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(=> (and (member$a ?v0 (vimage$f ?v1 ?v2 ))(forall ((?v3 N$ ))(=> (and (= (fun_app$p ?v1 ?v0 )?v3 )(member$a ?v3 ?v2 ))false )))false )):named a116 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$a ?v0 (vimage$g ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$q ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a117 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(=> (and (member$ ?v0 (vimage$h ?v1 ?v2 ))(forall ((?v3 N$ ))(=> (and (= (fun_app$r ?v1 ?v0 )?v3 )(member$a ?v3 ?v2 ))false )))false )):named a118 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$ ?v0 (vimage$i ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$s ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a119 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$e ?v0 (vimage$ ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$f ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a120 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(=> (and (member$e ?v0 (vimage$d ?v1 ?v2 ))(forall ((?v3 T_N_sum$ ))(=> (and (= (fun_app$h ?v1 ?v0 )?v3 )(member$d ?v3 ?v2 ))false )))false )):named a121 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$f ?v0 (vimage$j ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$b ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a122 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(= (fun_app$i ?v0 (fun_app$f ?v1 ?v3 ))(fun_app$y ?v2 ?v3 )))(= (vimage$ ?v1 (collect$ ?v0 ))(collect$a ?v2 )))):named a123 ))
(assert (! (forall ((?v0 T_N_sum_bool_fun$ )(?v1 T_T_N_sum_fun$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(= (fun_app$x ?v0 (fun_app$h ?v1 ?v3 ))(fun_app$y ?v2 ?v3 )))(= (vimage$d ?v1 (collect$b ?v0 ))(collect$a ?v2 )))):named a124 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(= (fun_app$i ?v0 (fun_app$b ?v1 ?v3 ))(fun_app$w ?v2 ?v3 )))(= (vimage$j ?v1 (collect$ ?v0 ))(collect$c ?v2 )))):named a125 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(=> (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a126 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(=> (= (inl$b ?v0 )(inl$b ?v1 ))(= ?v0 ?v1 ))):named a127 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (= (fun_app$m root$ ?v0 )(fun_app$m root$ ?v1 ))(= (vimage$ uu$ (cont$ (fun_app$o (hsubst$ ?v1 )?v0 )))(vimage$ uu$ (cont$ ?v1 ))))):named a128 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (not (= (fun_app$m root$ ?v0 )(fun_app$m root$ ?v1 )))(= (cont$ (fun_app$o (hsubst$ ?v1 )?v0 ))(fun_app$k (image$ (fun_app$l (map_sum$ id$ )(hsubst$ ?v1 )))(cont$ ?v0 ))))):named a129 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (= (fun_app$m root$ ?v0 )(fun_app$m root$ ?v1 ))(= (cont$ (fun_app$o (hsubst$ ?v1 )?v0 ))(fun_app$k (image$ (fun_app$l (map_sum$ id$ )(hsubst$ ?v1 )))(cont$ ?v1 ))))):named a130 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum$ )(?v3 T$ ))(=> (= (fun_app$z (map_sum$d ?v0 ?v1 )?v2 )(inl$ ?v3 ))(exists ((?v4 T$ ))(and (= ?v2 (inl$b ?v4 ))(= (fun_app$t ?v0 ?v4 )?v3 ))))):named a131 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 T_N_sum$ )(?v3 T$ ))(=> (= (fun_app$aa (map_sum$e ?v0 ?v1 )?v2 )(inl$b ?v3 ))(exists ((?v4 T$ ))(and (= ?v2 (inl$b ?v4 ))(= (fun_app$t ?v0 ?v4 )?v3 ))))):named a132 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum$ )(?v3 T$ ))(=> (= (fun_app$s (fun_app$l (map_sum$ ?v0 )?v1 )?v2 )(inl$ ?v3 ))(exists ((?v4 T$ ))(and (= ?v2 (inl$ ?v4 ))(= (fun_app$t ?v0 ?v4 )?v3 ))))):named a133 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum$ )(?v3 T$ ))(=> (= (fun_app$v (fun_app$n (map_sum$f ?v0 )?v1 )?v2 )(inl$b ?v3 ))(exists ((?v4 T$ ))(and (= ?v2 (inl$ ?v4 ))(= (fun_app$t ?v0 ?v4 )?v3 ))))):named a134 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 T$ ))(! (= (fun_app$z (map_sum$d ?v0 ?v1 )(inl$b ?v2 ))(inl$ (fun_app$t ?v0 ?v2 ))):pattern ((fun_app$z (map_sum$d ?v0 ?v1 )(inl$b ?v2 ))))):named a135 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 T$ ))(! (= (fun_app$aa (map_sum$e ?v0 ?v1 )(inl$b ?v2 ))(inl$b (fun_app$t ?v0 ?v2 ))):pattern ((fun_app$aa (map_sum$e ?v0 ?v1 )(inl$b ?v2 ))))):named a136 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 T$ ))(! (= (fun_app$s (fun_app$l (map_sum$ ?v0 )?v1 )(inl$ ?v2 ))(inl$ (fun_app$t ?v0 ?v2 ))):pattern ((fun_app$s (fun_app$l (map_sum$ ?v0 )?v1 )(inl$ ?v2 ))))):named a137 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 T$ ))(! (= (fun_app$v (fun_app$n (map_sum$f ?v0 )?v1 )(inl$ ?v2 ))(inl$b (fun_app$t ?v0 ?v2 ))):pattern ((fun_app$v (fun_app$n (map_sum$f ?v0 )?v1 )(inl$ ?v2 ))))):named a138 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 T$ ))(= (fun_app$z (map_sum$d ?v0 ?v1 )(ite ?v2 ?v3 (inl$b ?v4 )))(ite ?v2 (fun_app$z (map_sum$d ?v0 ?v1 )?v3 )(inl$ (fun_app$t ?v0 ?v4 ))))):named a139 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 T$ ))(= (fun_app$aa (map_sum$e ?v0 ?v1 )(ite ?v2 ?v3 (inl$b ?v4 )))(ite ?v2 (fun_app$aa (map_sum$e ?v0 ?v1 )?v3 )(inl$b (fun_app$t ?v0 ?v4 ))))):named a140 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 T$ ))(= (fun_app$s (fun_app$l (map_sum$ ?v0 )?v1 )(ite ?v2 ?v3 (inl$ ?v4 )))(ite ?v2 (fun_app$s (fun_app$l (map_sum$ ?v0 )?v1 )?v3 )(inl$ (fun_app$t ?v0 ?v4 ))))):named a141 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 T$ ))(= (fun_app$v (fun_app$n (map_sum$f ?v0 )?v1 )(ite ?v2 ?v3 (inl$ ?v4 )))(ite ?v2 (fun_app$v (fun_app$n (map_sum$f ?v0 )?v1 )?v3 )(inl$b (fun_app$t ?v0 ?v4 ))))):named a142 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 T$ )(?v4 T_N_sum$ ))(= (fun_app$z (map_sum$d ?v0 ?v1 )(ite ?v2 (inl$b ?v3 )?v4 ))(ite ?v2 (inl$ (fun_app$t ?v0 ?v3 ))(fun_app$z (map_sum$d ?v0 ?v1 )?v4 )))):named a143 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 T$ )(?v4 T_N_sum$ ))(= (fun_app$aa (map_sum$e ?v0 ?v1 )(ite ?v2 (inl$b ?v3 )?v4 ))(ite ?v2 (inl$b (fun_app$t ?v0 ?v3 ))(fun_app$aa (map_sum$e ?v0 ?v1 )?v4 )))):named a144 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 T$ )(?v4 T_dtree_sum$ ))(= (fun_app$s (fun_app$l (map_sum$ ?v0 )?v1 )(ite ?v2 (inl$ ?v3 )?v4 ))(ite ?v2 (inl$ (fun_app$t ?v0 ?v3 ))(fun_app$s (fun_app$l (map_sum$ ?v0 )?v1 )?v4 )))):named a145 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 T$ )(?v4 T_dtree_sum$ ))(= (fun_app$v (fun_app$n (map_sum$f ?v0 )?v1 )(ite ?v2 (inl$ ?v3 )?v4 ))(ite ?v2 (inl$b (fun_app$t ?v0 ?v3 ))(fun_app$v (fun_app$n (map_sum$f ?v0 )?v1 )?v4 )))):named a146 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (= (fun_app$m root$ ?v0 )(fun_app$m root$ ?v1 ))(= (cont$ ?v0 )(cont$ ?v1 )))(= ?v0 ?v1 ))):named a147 ))
(assert (! (= (map_sum$a id$ id$ )id$f ):named a148 ))
(assert (! (= (fun_app$l (map_sum$ id$ )id$d )id$b ):named a149 ))
(assert (! (forall ((?v0 T_T_sum$ ))(= (fun_app$ab (map_sum$a id$ id$ )?v0 )?v0 )):named a150 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(= (fun_app$s (fun_app$l (map_sum$ id$ )id$d )?v0 )?v0 )):named a151 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_T_dtree_sum_sum_set$ ))(= (vimage$k uue$ (image$c (map_sum$c id$ ?v0 )?v1 ))(fun_app$k (image$ ?v0 )(vimage$k uue$ ?v1 )))):named a152 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_T_dtree_sum_sum_set$ ))(= (vimage$l uuf$ (image$b (map_sum$b id$ ?v0 )?v1 ))(image$f ?v0 (vimage$k uue$ ?v1 )))):named a153 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$j uug$ (fun_app$k (image$ (fun_app$l (map_sum$ id$ )?v0 ))?v1 ))(fun_app$u (image$h ?v0 )(vimage$j uug$ ?v1 )))):named a154 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$m uuh$ (image$f (fun_app$n (map_sum$f id$ )?v0 )?v1 ))(image$l ?v0 (vimage$j uug$ ?v1 )))):named a155 ))
(assert (! (forall ((?v0 N_set$ ))(= (collect$d (uui$ ?v0 ))?v0 )):named a156 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(= (collect$ (uuj$ ?v0 ))?v0 )):named a157 ))
(assert (! (forall ((?v0 N$ )(?v1 N_bool_fun$ ))(= (member$a ?v0 (collect$d ?v1 ))(fun_app$j ?v1 ?v0 ))):named a158 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_bool_fun$ ))(= (member$ ?v0 (collect$ ?v1 ))(fun_app$i ?v1 ?v0 ))):named a159 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 T$ ))(=> (and (member$a (fun_app$m root$ ?v0 )?v1 )(member$ (inl$ ?v2 )(cont$ ?v0 )))(fun_app$y (fun_app$ac (inFr2$ ?v1 )?v0 )?v2 ))):named a160 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (= (fun_app$m root$ ?v0 )(fun_app$m root$ tr0$ ))(= (vimage$j uug$ (cont$ (fun_app$o (hsubst$ tr0$ )?v0 )))(fun_app$u (image$h (hsubst$ tr0$ ))(vimage$j uug$ (cont$ tr0$ )))))):named a161 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(! (= (hsubst_c$ ?v0 ?v1 )(ite (= (fun_app$m root$ ?v1 )(fun_app$m root$ ?v0 ))(cont$ ?v0 )(cont$ ?v1 ))):pattern ((hsubst_c$ ?v0 ?v1 )))):named a162 ))
(check-sat )
(get-unsat-core )
