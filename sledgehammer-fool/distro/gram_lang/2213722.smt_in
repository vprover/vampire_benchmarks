(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort N_T_fun$ 0 )
(declare-sort T_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort N_bool_fun$ 0 )
(declare-sort T_bool_fun$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort N_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_N_fun$ 0 )
(declare-sort T_N_sum_T_fun$ 0 )
(declare-sort T_T_N_sum_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort T_N_sum_bool_fun$ 0 )
(declare-sort N_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort T_dtree_sum_T_fun$ 0 )
(declare-sort T_N_sum_T_N_sum_fun$ 0 )
(declare-sort T_T_sum_T_T_sum_fun$ 0 )
(declare-sort Dtree_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort N_set_dtree_T_bool_fun_fun_fun$ 0 )
(declare-sort Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ 0 )
(declare-sort T_N_sum$ 0)
(declare-sort T_dtree_sum$ 0)
(declare-sort T_T_sum$ 0)
(declare-fun projl$ (T_N_sum$)T$)
(declare-fun inl$ (T$ )T_N_sum$)
(declare-fun projr$ (T_N_sum$)N$)
(declare-fun inr$ (N$ )T_N_sum$)
(declare-fun projl$a (T_dtree_sum$)T$)
(declare-fun inl$a (T$ )T_dtree_sum$)
(declare-fun projr$a (T_dtree_sum$)Dtree$)
(declare-fun inr$a (Dtree$ )T_dtree_sum$)
(declare-fun projl$b (T_T_sum$)T$)
(declare-fun inl$b (T$ )T_T_sum$)
(declare-fun projr$b (T_T_sum$)T$)
(declare-fun inr$b (T$ )T_T_sum$)
(declare-fun t$ ()T$ )
(declare-fun id$ ()T_T_fun$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ ()T_T_N_sum_fun$ )
(declare-fun id$a ()T_set_T_set_fun$ )
(declare-fun id$b ()T_T_sum_T_T_sum_fun$ )
(declare-fun uua$ ()T_T_dtree_sum_fun$ )
(declare-fun uub$ ()N_T_N_sum_fun$ )
(declare-fun uuc$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun inFr$ ()N_set_dtree_T_bool_fun_fun_fun$ )
(declare-fun node$ (N$ T_dtree_sum_set$ )Dtree$ )
(declare-fun root$ ()Dtree_N_fun$ )
(declare-fun image$ (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$ )T_N_sum_set$ )
(declare-fun inFr2$ ()N_set_dtree_T_bool_fun_fun_fun$ )
(declare-fun image$a (T_N_sum_T_N_sum_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun image$b (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$c (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$d (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun image$e (T_N_fun$ T_set$ )N_set$ )
(declare-fun image$f (N_T_fun$ N_set$ )T_set$ )
(declare-fun image$g (N_N_fun$ N_set$ )N_set$ )
(declare-fun image$h (T_T_dtree_sum_fun$ T_set$ )T_dtree_sum_set$ )
(declare-fun image$i (T_T_N_sum_fun$ T_set$ )T_N_sum_set$ )
(declare-fun image$j (T_dtree_sum_T_fun$ T_dtree_sum_set$ )T_set$ )
(declare-fun image$k (T_dtree_sum_N_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun image$l (N_T_dtree_sum_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun image$m (N_T_N_sum_fun$ N_set$ )T_N_sum_set$ )
(declare-fun image$n (T_N_sum_T_fun$ T_N_sum_set$ )T_set$ )
(declare-fun image$o (T_N_sum_N_fun$ T_N_sum_set$ )N_set$ )
(declare-fun image$p (N_dtree_fun$ N_set$ )Dtree_set$ )
(declare-fun image$q (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun image$r (Dtree_N_fun$ Dtree_set$ )N_set$ )
(declare-fun insert$ (N$ N_set$ )N_set$ )
(declare-fun member$ (T$ T_set$ )Bool )
(declare-fun vimage$ (T_T_N_sum_fun$ T_N_sum_set$ )T_set$ )
(declare-fun collect$ (T_N_sum_bool_fun$ )T_N_sum_set$ )
(declare-fun fun_app$ (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun map_sum$ (T_T_fun$ )Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ )
(declare-fun member$a (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$b (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun member$c (N$ N_set$ )Bool )
(declare-fun subtrOf$ (Dtree$ )N_dtree_fun$ )
(declare-fun vimage$a (T_T_dtree_sum_fun$ T_dtree_sum_set$ )T_set$ )
(declare-fun vimage$b (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun vimage$c (T_N_fun$ N_set$ )T_set$ )
(declare-fun vimage$d (N_T_fun$ T_set$ )N_set$ )
(declare-fun vimage$e (N_N_fun$ N_set$ )N_set$ )
(declare-fun vimage$f (T_dtree_sum_T_fun$ T_set$ )T_dtree_sum_set$ )
(declare-fun vimage$g (T_dtree_sum_N_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun vimage$h (N_T_dtree_sum_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun vimage$i (N_T_N_sum_fun$ T_N_sum_set$ )N_set$ )
(declare-fun vimage$j (T_N_sum_T_fun$ T_set$ )T_N_sum_set$ )
(declare-fun vimage$k (T_N_sum_N_fun$ N_set$ )T_N_sum_set$ )
(declare-fun vimage$l (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun collect$a (T_bool_fun$ )T_set$ )
(declare-fun fun_app$a (N_T_N_sum_fun$ N$ )T_N_sum$ )
(declare-fun fun_app$b (T_T_dtree_sum_fun$ T$ )T_dtree_sum$ )
(declare-fun fun_app$c (T_T_N_sum_fun$ T$ )T_N_sum$ )
(declare-fun fun_app$d (Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ Dtree_N_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun fun_app$e (T_set_T_set_fun$ T_set$ )T_set$ )
(declare-fun fun_app$f (T_T_fun$ T$ )T$ )
(declare-fun fun_app$g (T_N_fun$ T$ )N$ )
(declare-fun fun_app$h (N_T_fun$ N$ )T$ )
(declare-fun fun_app$i (N_N_fun$ N$ )N$ )
(declare-fun fun_app$j (T_dtree_sum_T_fun$ T_dtree_sum$ )T$ )
(declare-fun fun_app$k (T_dtree_sum_N_fun$ T_dtree_sum$ )N$ )
(declare-fun fun_app$l (N_T_dtree_sum_fun$ N$ )T_dtree_sum$ )
(declare-fun fun_app$m (T_N_sum_T_fun$ T_N_sum$ )T$ )
(declare-fun fun_app$n (T_N_sum_N_fun$ T_N_sum$ )N$ )
(declare-fun fun_app$o (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$p (T_bool_fun$ T$ )Bool )
(declare-fun fun_app$q (N_bool_fun$ N$ )Bool )
(declare-fun fun_app$r (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$s (T_dtree_sum_T_N_sum_fun$ T_dtree_sum$ )T_N_sum$ )
(declare-fun fun_app$t (T_N_sum_bool_fun$ T_N_sum$ )Bool )
(declare-fun fun_app$u (T_N_sum_T_N_sum_fun$ T_N_sum$ )T_N_sum$ )
(declare-fun fun_app$v (T_N_sum_T_dtree_sum_fun$ T_N_sum$ )T_dtree_sum$ )
(declare-fun fun_app$w (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$x (T_T_sum_T_T_sum_fun$ T_T_sum$ )T_T_sum$ )
(declare-fun fun_app$y (Dtree_T_bool_fun_fun$ Dtree$ )T_bool_fun$ )
(declare-fun fun_app$z (N_set_dtree_T_bool_fun_fun_fun$ N_set$ )Dtree_T_bool_fun_fun$ )
(declare-fun map_sum$a (T_T_fun$ N_N_fun$ )T_N_sum_T_N_sum_fun$ )
(declare-fun map_sum$b (T_T_fun$ N_dtree_fun$ )T_N_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$c (T_T_fun$ Dtree_dtree_fun$ )T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$d (T_T_fun$ T_T_fun$ )T_T_sum_T_T_sum_fun$ )
(declare-fun fun_app$aa (N_dtree_fun$ N$ )Dtree$ )
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$ uuc$ ?v0 )(inr$a ?v0 )):pattern ((fun_app$ uuc$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$a uub$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$a uub$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$b uua$ ?v0 )(inl$a ?v0 )):pattern ((fun_app$b uua$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$c uu$ ?v0 )(inl$ ?v0 )):pattern ((fun_app$c uu$ ?v0 )))):named a3 ))
(assert (! (not (member$ t$ (vimage$ uu$ (image$ (fun_app$d (map_sum$ id$ )root$ )(cont$ tr$ ))))):named a4 ))
(assert (! (member$a (inl$a t$ )(cont$ tr$ )):named a5 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$ uu$ (image$a (map_sum$a id$ ?v0 )?v1 ))(vimage$ uu$ ?v1 ))):named a6 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$a uua$ (image$b (map_sum$b id$ ?v0 )?v1 ))(vimage$ uu$ ?v1 ))):named a7 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$a uua$ (image$c (map_sum$c id$ ?v0 )?v1 ))(vimage$a uua$ ?v1 ))):named a8 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$ uu$ (image$ (fun_app$d (map_sum$ id$ )?v0 )?v1 ))(vimage$a uua$ ?v1 ))):named a9 ))
(assert (! (forall ((?v0 T$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$b (inl$ ?v0 )(image$a (map_sum$a id$ ?v1 )?v2 ))(member$b (inl$ ?v0 )?v2 ))):named a10 ))
(assert (! (forall ((?v0 T$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(= (member$a (inl$a ?v0 )(image$b (map_sum$b id$ ?v1 )?v2 ))(member$b (inl$ ?v0 )?v2 ))):named a11 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a (inl$a ?v0 )(image$c (map_sum$c id$ ?v1 )?v2 ))(member$a (inl$a ?v0 )?v2 ))):named a12 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b (inl$ ?v0 )(image$ (fun_app$d (map_sum$ id$ )?v1 )?v2 ))(member$a (inl$a ?v0 )?v2 ))):named a13 ))
(assert (! (= (vimage$b id$ )id$a ):named a14 ))
(assert (! (= (image$d id$ )id$a ):named a15 ))
(assert (! (forall ((?v0 T$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(=> (member$b (inl$ ?v0 )(image$a (map_sum$a id$ ?v1 )?v2 ))(member$b (inl$ ?v0 )?v2 ))):named a16 ))
(assert (! (forall ((?v0 T$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(=> (member$a (inl$a ?v0 )(image$b (map_sum$b id$ ?v1 )?v2 ))(member$b (inl$ ?v0 )?v2 ))):named a17 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$a (inl$a ?v0 )(image$c (map_sum$c id$ ?v1 )?v2 ))(member$a (inl$a ?v0 )?v2 ))):named a18 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$b (inl$ ?v0 )(image$ (fun_app$d (map_sum$ id$ )?v1 )?v2 ))(member$a (inl$a ?v0 )?v2 ))):named a19 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_set$ ))(= (member$ ?v0 (fun_app$e (vimage$b ?v1 )?v2 ))(member$ (fun_app$f ?v1 ?v0 )?v2 ))):named a20 ))
(assert (! (forall ((?v0 T$ )(?v1 T_N_fun$ )(?v2 N_set$ ))(= (member$ ?v0 (vimage$c ?v1 ?v2 ))(member$c (fun_app$g ?v1 ?v0 )?v2 ))):named a21 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_fun$ )(?v2 T_set$ ))(= (member$c ?v0 (vimage$d ?v1 ?v2 ))(member$ (fun_app$h ?v1 ?v0 )?v2 ))):named a22 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(= (member$c ?v0 (vimage$e ?v1 ?v2 ))(member$c (fun_app$i ?v1 ?v0 )?v2 ))):named a23 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (vimage$a ?v1 ?v2 ))(member$a (fun_app$b ?v1 ?v0 )?v2 ))):named a24 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_fun$ )(?v2 T_set$ ))(= (member$a ?v0 (vimage$f ?v1 ?v2 ))(member$ (fun_app$j ?v1 ?v0 )?v2 ))):named a25 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(= (member$a ?v0 (vimage$g ?v1 ?v2 ))(member$c (fun_app$k ?v1 ?v0 )?v2 ))):named a26 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$c ?v0 (vimage$h ?v1 ?v2 ))(member$a (fun_app$l ?v1 ?v0 )?v2 ))):named a27 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$c ?v0 (vimage$i ?v1 ?v2 ))(member$b (fun_app$a ?v1 ?v0 )?v2 ))):named a28 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_fun$ )(?v2 T_set$ ))(= (member$b ?v0 (vimage$j ?v1 ?v2 ))(member$ (fun_app$m ?v1 ?v0 )?v2 ))):named a29 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= (fun_app$f ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$ ?v1 (fun_app$e (vimage$b ?v0 )?v3 )))):named a30 ))
(assert (! (forall ((?v0 N_T_fun$ )(?v1 N$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= (fun_app$h ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$c ?v1 (vimage$d ?v0 ?v3 )))):named a31 ))
(assert (! (forall ((?v0 T_N_fun$ )(?v1 T$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$g ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$ ?v1 (vimage$c ?v0 ?v3 )))):named a32 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$i ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$c ?v1 (vimage$e ?v0 ?v3 )))):named a33 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_dtree_sum$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= (fun_app$j ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$a ?v1 (vimage$f ?v0 ?v3 )))):named a34 ))
(assert (! (forall ((?v0 T_N_sum_T_fun$ )(?v1 T_N_sum$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= (fun_app$m ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$b ?v1 (vimage$j ?v0 ?v3 )))):named a35 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$b ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$ ?v1 (vimage$a ?v0 ?v3 )))):named a36 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$l ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$c ?v1 (vimage$h ?v0 ?v3 )))):named a37 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$k ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$a ?v1 (vimage$g ?v0 ?v3 )))):named a38 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_N_sum$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$n ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$b ?v1 (vimage$k ?v0 ?v3 )))):named a39 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a40 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$a ?v0 )(inl$a ?v1 ))(= ?v0 ?v1 ))):named a41 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a42 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$a ?v0 )(inl$a ?v1 ))(= ?v0 ?v1 ))):named a43 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$f id$ ?v0 )?v0 ):pattern ((fun_app$f id$ ?v0 )))):named a44 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$f ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (fun_app$e (image$d ?v1 )?v3 )))):named a45 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$g ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$c ?v0 (image$e ?v1 ?v3 )))):named a46 ))
(assert (! (forall ((?v0 T$ )(?v1 N_T_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$h ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$ ?v0 (image$f ?v1 ?v3 )))):named a47 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$i ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$c ?v0 (image$g ?v1 ?v3 )))):named a48 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$b ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$h ?v1 ?v3 )))):named a49 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_T_N_sum_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$c ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$b ?v0 (image$i ?v1 ?v3 )))):named a50 ))
(assert (! (forall ((?v0 T$ )(?v1 T_dtree_sum_T_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$j ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$j ?v1 ?v3 )))):named a51 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$k ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$c ?v0 (image$k ?v1 ?v3 )))):named a52 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$l ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$a ?v0 (image$l ?v1 ?v3 )))):named a53 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$a ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$b ?v0 (image$m ?v1 ?v3 )))):named a54 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (= (fun_app$o root$ ?v0 )(fun_app$o root$ ?v1 ))(= (cont$ ?v0 )(cont$ ?v1 )))(= ?v0 ?v1 ))):named a55 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_T_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$f ?v2 ?v0 )(fun_app$e (image$d ?v2 )?v1 )))):named a56 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_N_fun$ ))(=> (member$ ?v0 ?v1 )(member$c (fun_app$g ?v2 ?v0 )(image$e ?v2 ?v1 )))):named a57 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_T_fun$ ))(=> (member$c ?v0 ?v1 )(member$ (fun_app$h ?v2 ?v0 )(image$f ?v2 ?v1 )))):named a58 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_N_fun$ ))(=> (member$c ?v0 ?v1 )(member$c (fun_app$i ?v2 ?v0 )(image$g ?v2 ?v1 )))):named a59 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_T_dtree_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$a (fun_app$b ?v2 ?v0 )(image$h ?v2 ?v1 )))):named a60 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_T_N_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$b (fun_app$c ?v2 ?v0 )(image$i ?v2 ?v1 )))):named a61 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_fun$ ))(=> (member$a ?v0 ?v1 )(member$ (fun_app$j ?v2 ?v0 )(image$j ?v2 ?v1 )))):named a62 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_N_fun$ ))(=> (member$a ?v0 ?v1 )(member$c (fun_app$k ?v2 ?v0 )(image$k ?v2 ?v1 )))):named a63 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_T_dtree_sum_fun$ ))(=> (member$c ?v0 ?v1 )(member$a (fun_app$l ?v2 ?v0 )(image$l ?v2 ?v1 )))):named a64 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_T_N_sum_fun$ ))(=> (member$c ?v0 ?v1 )(member$b (fun_app$a ?v2 ?v0 )(image$m ?v2 ?v1 )))):named a65 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T$ )(?v3 T_T_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$f ?v3 ?v0 )))(member$ ?v2 (fun_app$e (image$d ?v3 )?v1 )))):named a66 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 N$ )(?v3 T_N_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$g ?v3 ?v0 )))(member$c ?v2 (image$e ?v3 ?v1 )))):named a67 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 T$ )(?v3 N_T_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$h ?v3 ?v0 )))(member$ ?v2 (image$f ?v3 ?v1 )))):named a68 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N$ )(?v3 N_N_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$i ?v3 ?v0 )))(member$c ?v2 (image$g ?v3 ?v1 )))):named a69 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_dtree_sum$ )(?v3 T_T_dtree_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$b ?v3 ?v0 )))(member$a ?v2 (image$h ?v3 ?v1 )))):named a70 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_N_sum$ )(?v3 T_T_N_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$c ?v3 ?v0 )))(member$b ?v2 (image$i ?v3 ?v1 )))):named a71 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T$ )(?v3 T_dtree_sum_T_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$j ?v3 ?v0 )))(member$ ?v2 (image$j ?v3 ?v1 )))):named a72 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 N$ )(?v3 T_dtree_sum_N_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$k ?v3 ?v0 )))(member$c ?v2 (image$k ?v3 ?v1 )))):named a73 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 T_dtree_sum$ )(?v3 N_T_dtree_sum_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$l ?v3 ?v0 )))(member$a ?v2 (image$l ?v3 ?v1 )))):named a74 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 T_N_sum$ )(?v3 N_T_N_sum_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$a ?v3 ?v0 )))(member$b ?v2 (image$m ?v3 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_set$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(=> (member$ ?v3 (fun_app$e (image$d ?v0 )?v1 ))(fun_app$p ?v2 ?v3 )))(forall ((?v3 T$ ))(=> (member$ ?v3 ?v1 )(fun_app$p ?v2 (fun_app$f ?v0 ?v3 )))))):named a76 ))
(assert (! (forall ((?v0 N_T_fun$ )(?v1 N_set$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(=> (member$ ?v3 (image$f ?v0 ?v1 ))(fun_app$p ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$c ?v3 ?v1 )(fun_app$p ?v2 (fun_app$h ?v0 ?v3 )))))):named a77 ))
(assert (! (forall ((?v0 T_N_fun$ )(?v1 T_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$c ?v3 (image$e ?v0 ?v1 ))(fun_app$q ?v2 ?v3 )))(forall ((?v3 T$ ))(=> (member$ ?v3 ?v1 )(fun_app$q ?v2 (fun_app$g ?v0 ?v3 )))))):named a78 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$c ?v3 (image$g ?v0 ?v1 ))(fun_app$q ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$c ?v3 ?v1 )(fun_app$q ?v2 (fun_app$i ?v0 ?v3 )))))):named a79 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(=> (member$ ?v3 (image$j ?v0 ?v1 ))(fun_app$p ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$p ?v2 (fun_app$j ?v0 ?v3 )))))):named a80 ))
(assert (! (forall ((?v0 T_N_sum_T_fun$ )(?v1 T_N_sum_set$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(=> (member$ ?v3 (image$n ?v0 ?v1 ))(fun_app$p ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$b ?v3 ?v1 )(fun_app$p ?v2 (fun_app$m ?v0 ?v3 )))))):named a81 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 (image$h ?v0 ?v1 ))(fun_app$r ?v2 ?v3 )))(forall ((?v3 T$ ))(=> (member$ ?v3 ?v1 )(fun_app$r ?v2 (fun_app$b ?v0 ?v3 )))))):named a82 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 (image$l ?v0 ?v1 ))(fun_app$r ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$c ?v3 ?v1 )(fun_app$r ?v2 (fun_app$l ?v0 ?v3 )))))):named a83 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$c ?v3 (image$k ?v0 ?v1 ))(fun_app$q ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$q ?v2 (fun_app$k ?v0 ?v3 )))))):named a84 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_N_sum_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$c ?v3 (image$o ?v0 ?v1 ))(fun_app$q ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$b ?v3 ?v1 )(fun_app$q ?v2 (fun_app$n ?v0 ?v3 )))))):named a85 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_set$ )(?v2 T_bool_fun$ ))(=> (exists ((?v3 T$ ))(and (member$ ?v3 (fun_app$e (image$d ?v0 )?v1 ))(fun_app$p ?v2 ?v3 )))(exists ((?v3 T$ ))(and (member$ ?v3 ?v1 )(fun_app$p ?v2 (fun_app$f ?v0 ?v3 )))))):named a86 ))
(assert (! (forall ((?v0 N_T_fun$ )(?v1 N_set$ )(?v2 T_bool_fun$ ))(=> (exists ((?v3 T$ ))(and (member$ ?v3 (image$f ?v0 ?v1 ))(fun_app$p ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$c ?v3 ?v1 )(fun_app$p ?v2 (fun_app$h ?v0 ?v3 )))))):named a87 ))
(assert (! (forall ((?v0 T_N_fun$ )(?v1 T_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$c ?v3 (image$e ?v0 ?v1 ))(fun_app$q ?v2 ?v3 )))(exists ((?v3 T$ ))(and (member$ ?v3 ?v1 )(fun_app$q ?v2 (fun_app$g ?v0 ?v3 )))))):named a88 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$c ?v3 (image$g ?v0 ?v1 ))(fun_app$q ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$c ?v3 ?v1 )(fun_app$q ?v2 (fun_app$i ?v0 ?v3 )))))):named a89 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_bool_fun$ ))(=> (exists ((?v3 T$ ))(and (member$ ?v3 (image$j ?v0 ?v1 ))(fun_app$p ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$p ?v2 (fun_app$j ?v0 ?v3 )))))):named a90 ))
(assert (! (forall ((?v0 T_N_sum_T_fun$ )(?v1 T_N_sum_set$ )(?v2 T_bool_fun$ ))(=> (exists ((?v3 T$ ))(and (member$ ?v3 (image$n ?v0 ?v1 ))(fun_app$p ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$b ?v3 ?v1 )(fun_app$p ?v2 (fun_app$m ?v0 ?v3 )))))):named a91 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 (image$h ?v0 ?v1 ))(fun_app$r ?v2 ?v3 )))(exists ((?v3 T$ ))(and (member$ ?v3 ?v1 )(fun_app$r ?v2 (fun_app$b ?v0 ?v3 )))))):named a92 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 (image$l ?v0 ?v1 ))(fun_app$r ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$c ?v3 ?v1 )(fun_app$r ?v2 (fun_app$l ?v0 ?v3 )))))):named a93 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$c ?v3 (image$k ?v0 ?v1 ))(fun_app$q ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$q ?v2 (fun_app$k ?v0 ?v3 )))))):named a94 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_N_sum_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$c ?v3 (image$o ?v0 ?v1 ))(fun_app$q ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$b ?v3 ?v1 )(fun_app$q ?v2 (fun_app$n ?v0 ?v3 )))))):named a95 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$s ?v2 ?v4 )(fun_app$s ?v3 ?v4 )))))(= (image$ ?v2 ?v0 )(image$ ?v3 ?v1 )))):named a96 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_set$ ))(= (member$ ?v0 (fun_app$e (image$d ?v1 )?v2 ))(exists ((?v3 T$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$f ?v1 ?v3 )))))):named a97 ))
(assert (! (forall ((?v0 T$ )(?v1 N_T_fun$ )(?v2 N_set$ ))(= (member$ ?v0 (image$f ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$c ?v3 ?v2 )(= ?v0 (fun_app$h ?v1 ?v3 )))))):named a98 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_fun$ )(?v2 T_set$ ))(= (member$c ?v0 (image$e ?v1 ?v2 ))(exists ((?v3 T$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$g ?v1 ?v3 )))))):named a99 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(= (member$c ?v0 (image$g ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$c ?v3 ?v2 )(= ?v0 (fun_app$i ?v1 ?v3 )))))):named a100 ))
(assert (! (forall ((?v0 T$ )(?v1 T_dtree_sum_T_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (image$j ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$j ?v1 ?v3 )))))):named a101 ))
(assert (! (forall ((?v0 T$ )(?v1 T_N_sum_T_fun$ )(?v2 T_N_sum_set$ ))(= (member$ ?v0 (image$n ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$m ?v1 ?v3 )))))):named a102 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_set$ ))(= (member$a ?v0 (image$h ?v1 ?v2 ))(exists ((?v3 T$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$b ?v1 ?v3 )))))):named a103 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N_set$ ))(= (member$a ?v0 (image$l ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$c ?v3 ?v2 )(= ?v0 (fun_app$l ?v1 ?v3 )))))):named a104 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$c ?v0 (image$k ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$k ?v1 ?v3 )))))):named a105 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$c ?v0 (image$o ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$n ?v1 ?v3 )))))):named a106 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$f id$ ?v0 )?v0 ):pattern ((fun_app$f id$ ?v0 )))):named a107 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(=> (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a108 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(=> (= (inl$a ?v0 )(inl$a ?v1 ))(= ?v0 ?v1 ))):named a109 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T$ )(?v2 T_set$ ))(=> (member$ (fun_app$f ?v0 ?v1 )?v2 )(member$ ?v1 (fun_app$e (vimage$b ?v0 )?v2 )))):named a110 ))
(assert (! (forall ((?v0 N_T_fun$ )(?v1 N$ )(?v2 T_set$ ))(=> (member$ (fun_app$h ?v0 ?v1 )?v2 )(member$c ?v1 (vimage$d ?v0 ?v2 )))):named a111 ))
(assert (! (forall ((?v0 T_N_fun$ )(?v1 T$ )(?v2 N_set$ ))(=> (member$c (fun_app$g ?v0 ?v1 )?v2 )(member$ ?v1 (vimage$c ?v0 ?v2 )))):named a112 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N$ )(?v2 N_set$ ))(=> (member$c (fun_app$i ?v0 ?v1 )?v2 )(member$c ?v1 (vimage$e ?v0 ?v2 )))):named a113 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_dtree_sum$ )(?v2 T_set$ ))(=> (member$ (fun_app$j ?v0 ?v1 )?v2 )(member$a ?v1 (vimage$f ?v0 ?v2 )))):named a114 ))
(assert (! (forall ((?v0 T_N_sum_T_fun$ )(?v1 T_N_sum$ )(?v2 T_set$ ))(=> (member$ (fun_app$m ?v0 ?v1 )?v2 )(member$b ?v1 (vimage$j ?v0 ?v2 )))):named a115 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T$ )(?v2 T_dtree_sum_set$ ))(=> (member$a (fun_app$b ?v0 ?v1 )?v2 )(member$ ?v1 (vimage$a ?v0 ?v2 )))):named a116 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N$ )(?v2 T_dtree_sum_set$ ))(=> (member$a (fun_app$l ?v0 ?v1 )?v2 )(member$c ?v1 (vimage$h ?v0 ?v2 )))):named a117 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum$ )(?v2 N_set$ ))(=> (member$c (fun_app$k ?v0 ?v1 )?v2 )(member$a ?v1 (vimage$g ?v0 ?v2 )))):named a118 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_N_sum$ )(?v2 N_set$ ))(=> (member$c (fun_app$n ?v0 ?v1 )?v2 )(member$b ?v1 (vimage$k ?v0 ?v2 )))):named a119 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_set$ ))(=> (member$ ?v0 (fun_app$e (vimage$b ?v1 )?v2 ))(member$ (fun_app$f ?v1 ?v0 )?v2 ))):named a120 ))
(assert (! (forall ((?v0 T$ )(?v1 T_N_fun$ )(?v2 N_set$ ))(=> (member$ ?v0 (vimage$c ?v1 ?v2 ))(member$c (fun_app$g ?v1 ?v0 )?v2 ))):named a121 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_fun$ )(?v2 T_set$ ))(=> (member$c ?v0 (vimage$d ?v1 ?v2 ))(member$ (fun_app$h ?v1 ?v0 )?v2 ))):named a122 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(=> (member$c ?v0 (vimage$e ?v1 ?v2 ))(member$c (fun_app$i ?v1 ?v0 )?v2 ))):named a123 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$ ?v0 (vimage$a ?v1 ?v2 ))(member$a (fun_app$b ?v1 ?v0 )?v2 ))):named a124 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_fun$ )(?v2 T_set$ ))(=> (member$a ?v0 (vimage$f ?v1 ?v2 ))(member$ (fun_app$j ?v1 ?v0 )?v2 ))):named a125 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(=> (member$a ?v0 (vimage$g ?v1 ?v2 ))(member$c (fun_app$k ?v1 ?v0 )?v2 ))):named a126 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$c ?v0 (vimage$h ?v1 ?v2 ))(member$a (fun_app$l ?v1 ?v0 )?v2 ))):named a127 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(=> (member$c ?v0 (vimage$i ?v1 ?v2 ))(member$b (fun_app$a ?v1 ?v0 )?v2 ))):named a128 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_fun$ )(?v2 T_set$ ))(=> (member$b ?v0 (vimage$j ?v1 ?v2 ))(member$ (fun_app$m ?v1 ?v0 )?v2 ))):named a129 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_set$ ))(=> (and (member$ ?v0 (fun_app$e (vimage$b ?v1 )?v2 ))(forall ((?v3 T$ ))(=> (and (= (fun_app$f ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a130 ))
(assert (! (forall ((?v0 T$ )(?v1 T_N_fun$ )(?v2 N_set$ ))(=> (and (member$ ?v0 (vimage$c ?v1 ?v2 ))(forall ((?v3 N$ ))(=> (and (= (fun_app$g ?v1 ?v0 )?v3 )(member$c ?v3 ?v2 ))false )))false )):named a131 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_fun$ )(?v2 T_set$ ))(=> (and (member$c ?v0 (vimage$d ?v1 ?v2 ))(forall ((?v3 T$ ))(=> (and (= (fun_app$h ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a132 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(=> (and (member$c ?v0 (vimage$e ?v1 ?v2 ))(forall ((?v3 N$ ))(=> (and (= (fun_app$i ?v1 ?v0 )?v3 )(member$c ?v3 ?v2 ))false )))false )):named a133 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$ ?v0 (vimage$a ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$b ?v1 ?v0 )?v3 )(member$a ?v3 ?v2 ))false )))false )):named a134 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_fun$ )(?v2 T_set$ ))(=> (and (member$a ?v0 (vimage$f ?v1 ?v2 ))(forall ((?v3 T$ ))(=> (and (= (fun_app$j ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a135 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(=> (and (member$a ?v0 (vimage$g ?v1 ?v2 ))(forall ((?v3 N$ ))(=> (and (= (fun_app$k ?v1 ?v0 )?v3 )(member$c ?v3 ?v2 ))false )))false )):named a136 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$c ?v0 (vimage$h ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$l ?v1 ?v0 )?v3 )(member$a ?v3 ?v2 ))false )))false )):named a137 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(=> (and (member$c ?v0 (vimage$i ?v1 ?v2 ))(forall ((?v3 T_N_sum$ ))(=> (and (= (fun_app$a ?v1 ?v0 )?v3 )(member$b ?v3 ?v2 ))false )))false )):named a138 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_fun$ )(?v2 T_set$ ))(=> (and (member$b ?v0 (vimage$j ?v1 ?v2 ))(forall ((?v3 T$ ))(=> (and (= (fun_app$m ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a139 ))
(assert (! (forall ((?v0 T_N_sum_bool_fun$ )(?v1 T_T_N_sum_fun$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(= (fun_app$t ?v0 (fun_app$c ?v1 ?v3 ))(fun_app$p ?v2 ?v3 )))(= (vimage$ ?v1 (collect$ ?v0 ))(collect$a ?v2 )))):named a140 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 T_N_sum$ )(?v3 T$ ))(=> (= (fun_app$u (map_sum$a ?v0 ?v1 )?v2 )(inl$ ?v3 ))(exists ((?v4 T$ ))(and (= ?v2 (inl$ ?v4 ))(= (fun_app$f ?v0 ?v4 )?v3 ))))):named a141 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum$ )(?v3 T$ ))(=> (= (fun_app$v (map_sum$b ?v0 ?v1 )?v2 )(inl$a ?v3 ))(exists ((?v4 T$ ))(and (= ?v2 (inl$ ?v4 ))(= (fun_app$f ?v0 ?v4 )?v3 ))))):named a142 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum$ )(?v3 T$ ))(=> (= (fun_app$w (map_sum$c ?v0 ?v1 )?v2 )(inl$a ?v3 ))(exists ((?v4 T$ ))(and (= ?v2 (inl$a ?v4 ))(= (fun_app$f ?v0 ?v4 )?v3 ))))):named a143 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum$ )(?v3 T$ ))(=> (= (fun_app$s (fun_app$d (map_sum$ ?v0 )?v1 )?v2 )(inl$ ?v3 ))(exists ((?v4 T$ ))(and (= ?v2 (inl$a ?v4 ))(= (fun_app$f ?v0 ?v4 )?v3 ))))):named a144 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 T$ ))(! (= (fun_app$u (map_sum$a ?v0 ?v1 )(inl$ ?v2 ))(inl$ (fun_app$f ?v0 ?v2 ))):pattern ((fun_app$u (map_sum$a ?v0 ?v1 )(inl$ ?v2 ))))):named a145 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 T$ ))(! (= (fun_app$v (map_sum$b ?v0 ?v1 )(inl$ ?v2 ))(inl$a (fun_app$f ?v0 ?v2 ))):pattern ((fun_app$v (map_sum$b ?v0 ?v1 )(inl$ ?v2 ))))):named a146 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 T$ ))(! (= (fun_app$w (map_sum$c ?v0 ?v1 )(inl$a ?v2 ))(inl$a (fun_app$f ?v0 ?v2 ))):pattern ((fun_app$w (map_sum$c ?v0 ?v1 )(inl$a ?v2 ))))):named a147 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 T$ ))(! (= (fun_app$s (fun_app$d (map_sum$ ?v0 )?v1 )(inl$a ?v2 ))(inl$ (fun_app$f ?v0 ?v2 ))):pattern ((fun_app$s (fun_app$d (map_sum$ ?v0 )?v1 )(inl$a ?v2 ))))):named a148 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 T$ ))(= (fun_app$u (map_sum$a ?v0 ?v1 )(ite ?v2 ?v3 (inl$ ?v4 )))(ite ?v2 (fun_app$u (map_sum$a ?v0 ?v1 )?v3 )(inl$ (fun_app$f ?v0 ?v4 ))))):named a149 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 T$ ))(= (fun_app$v (map_sum$b ?v0 ?v1 )(ite ?v2 ?v3 (inl$ ?v4 )))(ite ?v2 (fun_app$v (map_sum$b ?v0 ?v1 )?v3 )(inl$a (fun_app$f ?v0 ?v4 ))))):named a150 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 T$ ))(= (fun_app$w (map_sum$c ?v0 ?v1 )(ite ?v2 ?v3 (inl$a ?v4 )))(ite ?v2 (fun_app$w (map_sum$c ?v0 ?v1 )?v3 )(inl$a (fun_app$f ?v0 ?v4 ))))):named a151 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 T$ ))(= (fun_app$s (fun_app$d (map_sum$ ?v0 )?v1 )(ite ?v2 ?v3 (inl$a ?v4 )))(ite ?v2 (fun_app$s (fun_app$d (map_sum$ ?v0 )?v1 )?v3 )(inl$ (fun_app$f ?v0 ?v4 ))))):named a152 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 T$ )(?v4 T_N_sum$ ))(= (fun_app$u (map_sum$a ?v0 ?v1 )(ite ?v2 (inl$ ?v3 )?v4 ))(ite ?v2 (inl$ (fun_app$f ?v0 ?v3 ))(fun_app$u (map_sum$a ?v0 ?v1 )?v4 )))):named a153 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 T$ )(?v4 T_N_sum$ ))(= (fun_app$v (map_sum$b ?v0 ?v1 )(ite ?v2 (inl$ ?v3 )?v4 ))(ite ?v2 (inl$a (fun_app$f ?v0 ?v3 ))(fun_app$v (map_sum$b ?v0 ?v1 )?v4 )))):named a154 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 T$ )(?v4 T_dtree_sum$ ))(= (fun_app$w (map_sum$c ?v0 ?v1 )(ite ?v2 (inl$a ?v3 )?v4 ))(ite ?v2 (inl$a (fun_app$f ?v0 ?v3 ))(fun_app$w (map_sum$c ?v0 ?v1 )?v4 )))):named a155 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 T$ )(?v4 T_dtree_sum$ ))(= (fun_app$s (fun_app$d (map_sum$ ?v0 )?v1 )(ite ?v2 (inl$a ?v3 )?v4 ))(ite ?v2 (inl$ (fun_app$f ?v0 ?v3 ))(fun_app$s (fun_app$d (map_sum$ ?v0 )?v1 )?v4 )))):named a156 ))
(assert (! (forall ((?v0 Dtree$ ))(= (node$ (fun_app$o root$ ?v0 )(cont$ ?v0 ))?v0 )):named a157 ))
(assert (! (= (map_sum$d id$ id$ )id$b ):named a158 ))
(assert (! (forall ((?v0 T_T_sum$ ))(= (fun_app$x (map_sum$d id$ id$ )?v0 )?v0 )):named a159 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$i uub$ (image$a (map_sum$a id$ ?v0 )?v1 ))(image$g ?v0 (vimage$i uub$ ?v1 )))):named a160 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$l uuc$ (image$b (map_sum$b id$ ?v0 )?v1 ))(image$p ?v0 (vimage$i uub$ ?v1 )))):named a161 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$l uuc$ (image$c (map_sum$c id$ ?v0 )?v1 ))(image$q ?v0 (vimage$l uuc$ ?v1 )))):named a162 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$i uub$ (image$ (fun_app$d (map_sum$ id$ )?v0 )?v1 ))(image$r ?v0 (vimage$l uuc$ ?v1 )))):named a163 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 T$ ))(=> (and (member$c (fun_app$o root$ ?v0 )?v1 )(member$a (inl$a ?v2 )(cont$ ?v0 )))(fun_app$p (fun_app$y (fun_app$z inFr2$ ?v1 )?v0 )?v2 ))):named a164 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$b (inr$ ?v0 )(image$ (fun_app$d (map_sum$ id$ )root$ )(cont$ ?v1 )))(= (fun_app$o root$ (fun_app$aa (subtrOf$ ?v1 )?v0 ))?v0 ))):named a165 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 T$ ))(=> (and (member$c (fun_app$o root$ ?v0 )?v1 )(member$a (inl$a ?v2 )(cont$ ?v0 )))(fun_app$p (fun_app$y (fun_app$z inFr$ ?v1 )?v0 )?v2 ))):named a166 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_set$ ))(= (fun_app$o root$ (node$ ?v0 ?v1 ))?v0 )):named a167 ))
(assert (! (= inFr$ inFr2$ ):named a168 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 Dtree$ )(?v3 T$ ))(=> (and (member$c (fun_app$o root$ ?v0 )?v1 )(and (member$a (inr$a ?v2 )(cont$ ?v0 ))(fun_app$p (fun_app$y (fun_app$z inFr$ ?v1 )?v2 )?v3 )))(fun_app$p (fun_app$y (fun_app$z inFr$ ?v1 )?v0 )?v3 ))):named a169 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ )(?v3 Dtree$ ))(=> (and (fun_app$p (fun_app$y (fun_app$z inFr2$ ?v0 )?v1 )?v2 )(and (member$c (fun_app$o root$ ?v3 )?v0 )(member$a (inr$a ?v1 )(cont$ ?v3 ))))(fun_app$p (fun_app$y (fun_app$z inFr2$ ?v0 )?v3 )?v2 ))):named a170 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(=> (fun_app$p (fun_app$y (fun_app$z inFr$ ?v0 )?v1 )?v2 )(member$c (fun_app$o root$ ?v1 )?v0 ))):named a171 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 T$ ))(=> (not (member$c (fun_app$o root$ ?v0 )?v1 ))(not (fun_app$p (fun_app$y (fun_app$z inFr$ ?v1 )?v0 )?v2 )))):named a172 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(= (fun_app$p (fun_app$y (fun_app$z inFr$ ?v0 )?v1 )?v2 )(or (exists ((?v3 Dtree$ )(?v4 N_set$ )(?v5 T$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v5 )(and (member$c (fun_app$o root$ ?v3 )?v4 )(member$a (inl$a ?v5 )(cont$ ?v3 )))))))(exists ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 T$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$c (fun_app$o root$ ?v3 )?v4 )(and (member$a (inr$a ?v5 )(cont$ ?v3 ))(fun_app$p (fun_app$y (fun_app$z inFr$ ?v4 )?v5 )?v6 )))))))))):named a173 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(=> (and (fun_app$p (fun_app$y (fun_app$z inFr$ ?v0 )?v1 )?v2 )(and (forall ((?v3 Dtree$ )(?v4 N_set$ )(?v5 T$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v5 )(and (member$c (fun_app$o root$ ?v3 )?v4 )(member$a (inl$a ?v5 )(cont$ ?v3 ))))))false ))(forall ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 T$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$c (fun_app$o root$ ?v3 )?v4 )(and (member$a (inr$a ?v5 )(cont$ ?v3 ))(fun_app$p (fun_app$y (fun_app$z inFr$ ?v4 )?v5 )?v6 ))))))false ))))false )):named a174 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(=> (fun_app$p (fun_app$y (fun_app$z inFr2$ ?v0 )?v1 )?v2 )(member$c (fun_app$o root$ ?v1 )?v0 ))):named a175 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$b (inr$ ?v0 )(image$ (fun_app$d (map_sum$ id$ )root$ )(cont$ ?v1 )))(and (member$a (inr$a (fun_app$aa (subtrOf$ ?v1 )?v0 ))(cont$ ?v1 ))(= (fun_app$o root$ (fun_app$aa (subtrOf$ ?v1 )?v0 ))?v0 )))):named a176 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$b (inr$ ?v0 )(image$ (fun_app$d (map_sum$ id$ )root$ )(cont$ ?v1 )))(member$a (inr$a (fun_app$aa (subtrOf$ ?v1 )?v0 ))(cont$ ?v1 )))):named a177 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(= (fun_app$p (fun_app$y (fun_app$z inFr2$ ?v0 )?v1 )?v2 )(or (exists ((?v3 Dtree$ )(?v4 N_set$ )(?v5 T$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v5 )(and (member$c (fun_app$o root$ ?v3 )?v4 )(member$a (inl$a ?v5 )(cont$ ?v3 )))))))(exists ((?v3 Dtree$ )(?v4 Dtree$ )(?v5 N_set$ )(?v6 T$ ))(and (= ?v0 (insert$ (fun_app$o root$ ?v4 )?v5 ))(and (= ?v1 ?v4 )(and (= ?v2 ?v6 )(and (member$a (inr$a ?v3 )(cont$ ?v4 ))(fun_app$p (fun_app$y (fun_app$z inFr2$ ?v5 )?v3 )?v6 ))))))))):named a178 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(=> (and (fun_app$p (fun_app$y (fun_app$z inFr2$ ?v0 )?v1 )?v2 )(and (forall ((?v3 Dtree$ )(?v4 N_set$ )(?v5 T$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v5 )(and (member$c (fun_app$o root$ ?v3 )?v4 )(member$a (inl$a ?v5 )(cont$ ?v3 ))))))false ))(forall ((?v3 Dtree$ )(?v4 Dtree$ )(?v5 N_set$ )(?v6 T$ ))(=> (and (= ?v0 (insert$ (fun_app$o root$ ?v4 )?v5 ))(and (= ?v1 ?v4 )(and (= ?v2 ?v6 )(and (member$a (inr$a ?v3 )(cont$ ?v4 ))(fun_app$p (fun_app$y (fun_app$z inFr2$ ?v5 )?v3 )?v6 )))))false ))))false )):named a179 ))
(check-sat )
(get-unsat-core )
