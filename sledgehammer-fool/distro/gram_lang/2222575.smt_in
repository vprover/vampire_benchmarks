(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort N_bool_fun$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort N_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_N_fun$ 0 )
(declare-sort Dtree_bool_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort T_N_sum_bool_fun$ 0 )
(declare-sort Dtree_T_N_sum_fun$ 0 )
(declare-sort N_T_dtree_sum_fun$ 0 )
(declare-sort T_N_sum_dtree_fun$ 0 )
(declare-sort T_T_N_sum_sum_set$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort T_N_sum_T_N_sum_fun$ 0 )
(declare-sort T_T_sum_T_T_sum_fun$ 0 )
(declare-sort Dtree_N_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_set$ 0 )
(declare-sort T_dtree_sum_dtree_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_set$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_T_T_N_sum_sum_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_bool_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ 0 )
(declare-sort Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ 0 )
(declare-sort N_T_N_sum_set_prod$ 0)
(declare-sort T_N_sum$ 0)
(declare-sort T_dtree_sum$ 0)
(declare-sort T_T_sum$ 0)
(declare-sort T_T_N_sum_sum$ 0)
(declare-sort T_T_dtree_sum_sum$ 0)
(declare-fun fst$ (N_T_N_sum_set_prod$)N$)
(declare-fun snd$ (N_T_N_sum_set_prod$)T_N_sum_set$)
(declare-fun pair$ (N$ T_N_sum_set$ )N_T_N_sum_set_prod$)
(declare-fun projl$ (T_N_sum$)T$)
(declare-fun inl$ (T$ )T_N_sum$)
(declare-fun projr$ (T_N_sum$)N$)
(declare-fun inr$ (N$ )T_N_sum$)
(declare-fun projl$a (T_dtree_sum$)T$)
(declare-fun inl$a (T$ )T_dtree_sum$)
(declare-fun projr$a (T_dtree_sum$)Dtree$)
(declare-fun inr$a (Dtree$ )T_dtree_sum$)
(declare-fun projl$b (T_T_sum$)T$)
(declare-fun inl$b (T$ )T_T_sum$)
(declare-fun projr$b (T_T_sum$)T$)
(declare-fun inr$b (T$ )T_T_sum$)
(declare-fun projl$c (T_T_N_sum_sum$)T$)
(declare-fun inl$c (T$ )T_T_N_sum_sum$)
(declare-fun projr$c (T_T_N_sum_sum$)T_N_sum$)
(declare-fun inr$c (T_N_sum$ )T_T_N_sum_sum$)
(declare-fun projl$d (T_T_dtree_sum_sum$)T$)
(declare-fun inl$d (T$ )T_T_dtree_sum_sum$)
(declare-fun projr$d (T_T_dtree_sum_sum$)T_dtree_sum$)
(declare-fun inr$d (T_dtree_sum$ )T_T_dtree_sum_sum$)
(declare-fun p$ ()N_T_N_sum_set_prod_set$ )
(declare-fun id$ ()T_T_fun$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ (N_T_N_sum_set_prod_set$ )N_T_N_sum_set_prod_bool_fun$ )
(declare-fun wf$ (Dtree$ )Bool )
(declare-fun id$a ()T_set_T_set_fun$ )
(declare-fun id$b ()T_T_sum_T_T_sum_fun$ )
(declare-fun uua$ (T_N_sum_set$ )T_N_sum_bool_fun$ )
(declare-fun uub$ (T_dtree_sum_set$ )T_dtree_sum_bool_fun$ )
(declare-fun uuc$ (N_set$ )N_bool_fun$ )
(declare-fun uud$ (Dtree_set$ )Dtree_bool_fun$ )
(declare-fun uue$ ()T_N_sum_T_T_N_sum_sum_fun$ )
(declare-fun uuf$ ()T_dtree_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun uug$ ()N_T_N_sum_fun$ )
(declare-fun uuh$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun node$ (N$ T_dtree_sum_set$ )Dtree$ )
(declare-fun root$ ()Dtree_N_fun$ )
(declare-fun image$ (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$ )T_N_sum_set$ )
(declare-fun inFr2$ (N_set$ Dtree$ T$ )Bool )
(declare-fun inItr$ (N_set$ )Dtree_N_bool_fun_fun$ )
(declare-fun image$a (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun image$b (N_N_fun$ N_set$ )N_set$ )
(declare-fun image$c (N_dtree_fun$ N_set$ )Dtree_set$ )
(declare-fun image$d (Dtree_N_fun$ Dtree_set$ )N_set$ )
(declare-fun image$e (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun image$f (T_N_sum_N_fun$ T_N_sum_set$ )N_set$ )
(declare-fun image$g (T_N_sum_dtree_fun$ T_N_sum_set$ )Dtree_set$ )
(declare-fun image$h (T_dtree_sum_N_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun image$i (T_dtree_sum_dtree_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun image$j (N_T_N_sum_fun$ N_set$ )T_N_sum_set$ )
(declare-fun image$k (N_T_dtree_sum_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun image$l (Dtree_T_N_sum_fun$ Dtree_set$ )T_N_sum_set$ )
(declare-fun image$m (Dtree_T_dtree_sum_fun$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun image$n (T_N_sum_T_N_sum_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun image$o (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$p (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$q (T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_T_N_sum_sum_set$ )
(declare-fun inj_on$ (Dtree_N_fun$ Dtree_set$ )Bool )
(declare-fun member$ (N_T_N_sum_set_prod$ N_T_N_sum_set_prod_set$ )Bool )
(declare-fun vimage$ (T_N_sum_T_T_N_sum_sum_fun$ T_T_N_sum_sum_set$ )T_N_sum_set$ )
(declare-fun collect$ (N_T_N_sum_set_prod_bool_fun$ )N_T_N_sum_set_prod_set$ )
(declare-fun fun_app$ (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_dtree_sum$ )T_T_dtree_sum_sum$ )
(declare-fun map_sum$ (T_T_fun$ )Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ )
(declare-fun member$a (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$b (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun member$c (Dtree$ Dtree_set$ )Bool )
(declare-fun member$d (N$ N_set$ )Bool )
(declare-fun subtrOf$ (Dtree$ )N_dtree_fun$ )
(declare-fun vimage$a (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$b (N_T_N_sum_fun$ T_N_sum_set$ )N_set$ )
(declare-fun vimage$c (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun vimage$d (N_N_fun$ N_set$ )N_set$ )
(declare-fun vimage$e (Dtree_N_fun$ N_set$ )Dtree_set$ )
(declare-fun vimage$f (N_dtree_fun$ Dtree_set$ )N_set$ )
(declare-fun vimage$g (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun vimage$h (Dtree_T_N_sum_fun$ T_N_sum_set$ )Dtree_set$ )
(declare-fun vimage$i (N_T_dtree_sum_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun vimage$j (T_N_sum_N_fun$ N_set$ )T_N_sum_set$ )
(declare-fun vimage$k (T_dtree_sum_N_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun vimage$l (T_N_sum_dtree_fun$ Dtree_set$ )T_N_sum_set$ )
(declare-fun vimage$m (T_dtree_sum_dtree_fun$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun vimage$n (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun collect$a (T_N_sum_bool_fun$ )T_N_sum_set$ )
(declare-fun collect$b (T_dtree_sum_bool_fun$ )T_dtree_sum_set$ )
(declare-fun collect$c (N_bool_fun$ )N_set$ )
(declare-fun collect$d (Dtree_bool_fun$ )Dtree_set$ )
(declare-fun fun_app$a (T_N_sum_T_T_N_sum_sum_fun$ T_N_sum$ )T_T_N_sum_sum$ )
(declare-fun fun_app$b (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun fun_app$c (N_T_N_sum_fun$ N$ )T_N_sum$ )
(declare-fun fun_app$d (N_T_N_sum_set_prod_bool_fun$ N_T_N_sum_set_prod$ )Bool )
(declare-fun fun_app$e (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$f (T_N_sum_bool_fun$ T_N_sum$ )Bool )
(declare-fun fun_app$g (Dtree_bool_fun$ Dtree$ )Bool )
(declare-fun fun_app$h (N_bool_fun$ N$ )Bool )
(declare-fun fun_app$i (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$j (Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ Dtree_N_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun fun_app$k (T_T_fun$ T$ )T$ )
(declare-fun fun_app$l (N_N_fun$ N$ )N$ )
(declare-fun fun_app$m (N_dtree_fun$ N$ )Dtree$ )
(declare-fun fun_app$n (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$o (T_N_sum_N_fun$ T_N_sum$ )N$ )
(declare-fun fun_app$p (T_N_sum_dtree_fun$ T_N_sum$ )Dtree$ )
(declare-fun fun_app$q (T_dtree_sum_N_fun$ T_dtree_sum$ )N$ )
(declare-fun fun_app$r (T_dtree_sum_dtree_fun$ T_dtree_sum$ )Dtree$ )
(declare-fun fun_app$s (N_T_dtree_sum_fun$ N$ )T_dtree_sum$ )
(declare-fun fun_app$t (T_T_sum_T_T_sum_fun$ T_T_sum$ )T_T_sum$ )
(declare-fun fun_app$u (Dtree_T_N_sum_fun$ Dtree$ )T_N_sum$ )
(declare-fun fun_app$v (T_dtree_sum_T_N_sum_fun$ T_dtree_sum$ )T_N_sum$ )
(declare-fun fun_app$w (T_N_sum_T_N_sum_fun$ T_N_sum$ )T_N_sum$ )
(declare-fun fun_app$x (T_N_sum_T_dtree_sum_fun$ T_N_sum$ )T_dtree_sum$ )
(declare-fun fun_app$y (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$z (Dtree_N_bool_fun_fun$ Dtree$ )N_bool_fun$ )
(declare-fun map_sum$a (T_T_fun$ T_T_fun$ )T_T_sum_T_T_sum_fun$ )
(declare-fun map_sum$b (T_T_fun$ N_N_fun$ )T_N_sum_T_N_sum_fun$ )
(declare-fun map_sum$c (T_T_fun$ N_dtree_fun$ )T_N_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$d (T_T_fun$ Dtree_dtree_fun$ )T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$e (T_T_fun$ T_dtree_sum_T_N_sum_fun$ )T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ )
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$ uuf$ ?v0 )(inr$d ?v0 )):pattern ((fun_app$ uuf$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 T_N_sum$ ))(! (= (fun_app$a uue$ ?v0 )(inr$c ?v0 )):pattern ((fun_app$a uue$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$b uuh$ ?v0 )(inr$a ?v0 )):pattern ((fun_app$b uuh$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$c uug$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$c uug$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ )(?v1 N_T_N_sum_set_prod$ ))(! (= (fun_app$d (uu$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$d (uu$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum$ ))(! (= (fun_app$e (uub$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$e (uub$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum$ ))(! (= (fun_app$f (uua$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$f (uua$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree$ ))(! (= (fun_app$g (uud$ ?v0 )?v1 )(member$c ?v1 ?v0 )):pattern ((fun_app$g (uud$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N$ ))(! (= (fun_app$h (uuc$ ?v0 )?v1 )(member$d ?v1 ?v0 )):pattern ((fun_app$h (uuc$ ?v0 )?v1 )))):named a8 ))
(assert (! (not (member$ (pair$ (fun_app$i root$ tr$ )(image$ (fun_app$j (map_sum$ id$ )root$ )(cont$ tr$ )))p$ )):named a9 ))
(assert (! (wf$ tr$ ):named a10 ))
(assert (! (forall ((?v0 N$ ))(exists ((?v1 T_N_sum_set$ ))(member$ (pair$ ?v0 ?v1 )p$ ))):named a11 ))
(assert (! (= (image$a id$ )id$a ):named a12 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$k id$ ?v0 )?v0 ):pattern ((fun_app$k id$ ?v0 )))):named a13 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$l ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$d ?v0 (image$b ?v1 ?v3 )))):named a14 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$m ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$c ?v0 (image$c ?v1 ?v3 )))):named a15 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$i ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$d ?v0 (image$d ?v1 ?v3 )))):named a16 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$n ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$c ?v0 (image$e ?v1 ?v3 )))):named a17 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$d ?v0 (image$f ?v1 ?v3 )))):named a18 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_N_sum_dtree_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$p ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$c ?v0 (image$g ?v1 ?v3 )))):named a19 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$q ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$d ?v0 (image$h ?v1 ?v3 )))):named a20 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$r ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$c ?v0 (image$i ?v1 ?v3 )))):named a21 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$c ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$b ?v0 (image$j ?v1 ?v3 )))):named a22 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$s ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$a ?v0 (image$k ?v1 ?v3 )))):named a23 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_set$ )(?v2 N$ )(?v3 T_N_sum_set$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a24 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_set$ )(?v2 N$ )(?v3 T_N_sum_set$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a25 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (= (fun_app$i root$ ?v0 )(fun_app$i root$ ?v1 ))(= (cont$ ?v0 )(cont$ ?v1 )))(= ?v0 ?v1 ))):named a26 ))
(assert (! (forall ((?v0 T_T_sum$ ))(= (fun_app$t (map_sum$a id$ id$ )?v0 )?v0 )):named a27 ))
(assert (! (= (map_sum$a id$ id$ )id$b ):named a28 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$b (inr$ ?v0 )(image$ (fun_app$j (map_sum$ id$ )root$ )(cont$ ?v1 )))(= (fun_app$i root$ (fun_app$m (subtrOf$ ?v1 )?v0 ))?v0 ))):named a29 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$k id$ ?v0 )?v0 ):pattern ((fun_app$k id$ ?v0 )))):named a30 ))
(assert (! (forall ((?v0 Dtree$ ))(= (node$ (fun_app$i root$ ?v0 )(cont$ ?v0 ))?v0 )):named a31 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(= (member$d ?v0 (image$b ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$d ?v3 ?v2 )(= ?v0 (fun_app$l ?v1 ?v3 )))))):named a32 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 Dtree_set$ ))(= (member$d ?v0 (image$d ?v1 ?v2 ))(exists ((?v3 Dtree$ ))(and (member$c ?v3 ?v2 )(= ?v0 (fun_app$i ?v1 ?v3 )))))):named a33 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 N_set$ ))(= (member$c ?v0 (image$c ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$d ?v3 ?v2 )(= ?v0 (fun_app$m ?v1 ?v3 )))))):named a34 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$c ?v0 (image$e ?v1 ?v2 ))(exists ((?v3 Dtree$ ))(and (member$c ?v3 ?v2 )(= ?v0 (fun_app$n ?v1 ?v3 )))))):named a35 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 N_set$ ))(= (member$b ?v0 (image$j ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$d ?v3 ?v2 )(= ?v0 (fun_app$c ?v1 ?v3 )))))):named a36 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 Dtree_T_N_sum_fun$ )(?v2 Dtree_set$ ))(= (member$b ?v0 (image$l ?v1 ?v2 ))(exists ((?v3 Dtree$ ))(and (member$c ?v3 ?v2 )(= ?v0 (fun_app$u ?v1 ?v3 )))))):named a37 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N_set$ ))(= (member$a ?v0 (image$k ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$d ?v3 ?v2 )(= ?v0 (fun_app$s ?v1 ?v3 )))))):named a38 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 Dtree_set$ ))(= (member$a ?v0 (image$m ?v1 ?v2 ))(exists ((?v3 Dtree$ ))(and (member$c ?v3 ?v2 )(= ?v0 (fun_app$b ?v1 ?v3 )))))):named a39 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$d ?v0 (image$f ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$o ?v1 ?v3 )))))):named a40 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$d ?v0 (image$h ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$q ?v1 ?v3 )))))):named a41 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_set$ ))(= (fun_app$i root$ (node$ ?v0 ?v1 ))?v0 )):named a42 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ ))(exists ((?v1 N$ )(?v2 T_N_sum_set$ ))(= ?v0 (pair$ ?v1 ?v2 )))):named a43 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_set$ )(?v2 N$ )(?v3 T_N_sum_set$ ))(=> (and (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a44 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ ))(=> (forall ((?v1 N$ )(?v2 T_N_sum_set$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a45 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_bool_fun$ )(?v1 N_T_N_sum_set_prod$ ))(=> (forall ((?v2 N$ )(?v3 T_N_sum_set$ ))(fun_app$d ?v0 (pair$ ?v2 ?v3 )))(fun_app$d ?v0 ?v1 ))):named a46 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ ))(=> (forall ((?v1 N$ )(?v2 T_N_sum_set$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a47 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_N_fun$ ))(=> (member$d ?v0 ?v1 )(member$d (fun_app$l ?v2 ?v0 )(image$b ?v2 ?v1 )))):named a48 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_dtree_fun$ ))(=> (member$d ?v0 ?v1 )(member$c (fun_app$m ?v2 ?v0 )(image$c ?v2 ?v1 )))):named a49 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_N_fun$ ))(=> (member$c ?v0 ?v1 )(member$d (fun_app$i ?v2 ?v0 )(image$d ?v2 ?v1 )))):named a50 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_dtree_fun$ ))(=> (member$c ?v0 ?v1 )(member$c (fun_app$n ?v2 ?v0 )(image$e ?v2 ?v1 )))):named a51 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_N_fun$ ))(=> (member$b ?v0 ?v1 )(member$d (fun_app$o ?v2 ?v0 )(image$f ?v2 ?v1 )))):named a52 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_dtree_fun$ ))(=> (member$b ?v0 ?v1 )(member$c (fun_app$p ?v2 ?v0 )(image$g ?v2 ?v1 )))):named a53 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_N_fun$ ))(=> (member$a ?v0 ?v1 )(member$d (fun_app$q ?v2 ?v0 )(image$h ?v2 ?v1 )))):named a54 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_dtree_fun$ ))(=> (member$a ?v0 ?v1 )(member$c (fun_app$r ?v2 ?v0 )(image$i ?v2 ?v1 )))):named a55 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_T_N_sum_fun$ ))(=> (member$d ?v0 ?v1 )(member$b (fun_app$c ?v2 ?v0 )(image$j ?v2 ?v1 )))):named a56 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_T_dtree_sum_fun$ ))(=> (member$d ?v0 ?v1 )(member$a (fun_app$s ?v2 ?v0 )(image$k ?v2 ?v1 )))):named a57 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N$ )(?v3 N_N_fun$ ))(=> (and (member$d ?v0 ?v1 )(= ?v2 (fun_app$l ?v3 ?v0 )))(member$d ?v2 (image$b ?v3 ?v1 )))):named a58 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 Dtree$ )(?v3 N_dtree_fun$ ))(=> (and (member$d ?v0 ?v1 )(= ?v2 (fun_app$m ?v3 ?v0 )))(member$c ?v2 (image$c ?v3 ?v1 )))):named a59 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 N$ )(?v3 Dtree_N_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$i ?v3 ?v0 )))(member$d ?v2 (image$d ?v3 ?v1 )))):named a60 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree$ )(?v3 Dtree_dtree_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$n ?v3 ?v0 )))(member$c ?v2 (image$e ?v3 ?v1 )))):named a61 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 N$ )(?v3 T_N_sum_N_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$o ?v3 ?v0 )))(member$d ?v2 (image$f ?v3 ?v1 )))):named a62 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 Dtree$ )(?v3 T_N_sum_dtree_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$p ?v3 ?v0 )))(member$c ?v2 (image$g ?v3 ?v1 )))):named a63 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 N$ )(?v3 T_dtree_sum_N_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$q ?v3 ?v0 )))(member$d ?v2 (image$h ?v3 ?v1 )))):named a64 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 Dtree$ )(?v3 T_dtree_sum_dtree_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$r ?v3 ?v0 )))(member$c ?v2 (image$i ?v3 ?v1 )))):named a65 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 T_N_sum$ )(?v3 N_T_N_sum_fun$ ))(=> (and (member$d ?v0 ?v1 )(= ?v2 (fun_app$c ?v3 ?v0 )))(member$b ?v2 (image$j ?v3 ?v1 )))):named a66 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 T_dtree_sum$ )(?v3 N_T_dtree_sum_fun$ ))(=> (and (member$d ?v0 ?v1 )(= ?v2 (fun_app$s ?v3 ?v0 )))(member$a ?v2 (image$k ?v3 ?v1 )))):named a67 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$d ?v3 (image$b ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$d ?v3 ?v1 )(fun_app$h ?v2 (fun_app$l ?v0 ?v3 )))))):named a68 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 Dtree_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$d ?v3 (image$d ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(forall ((?v3 Dtree$ ))(=> (member$c ?v3 ?v1 )(fun_app$h ?v2 (fun_app$i ?v0 ?v3 )))))):named a69 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 N_set$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(=> (member$c ?v3 (image$c ?v0 ?v1 ))(fun_app$g ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$d ?v3 ?v1 )(fun_app$g ?v2 (fun_app$m ?v0 ?v3 )))))):named a70 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_set$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(=> (member$c ?v3 (image$e ?v0 ?v1 ))(fun_app$g ?v2 ?v3 )))(forall ((?v3 Dtree$ ))(=> (member$c ?v3 ?v1 )(fun_app$g ?v2 (fun_app$n ?v0 ?v3 )))))):named a71 ))
(assert (! (forall ((?v0 N_T_N_sum_fun$ )(?v1 N_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$b ?v3 (image$j ?v0 ?v1 ))(fun_app$f ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$d ?v3 ?v1 )(fun_app$f ?v2 (fun_app$c ?v0 ?v3 )))))):named a72 ))
(assert (! (forall ((?v0 Dtree_T_N_sum_fun$ )(?v1 Dtree_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$b ?v3 (image$l ?v0 ?v1 ))(fun_app$f ?v2 ?v3 )))(forall ((?v3 Dtree$ ))(=> (member$c ?v3 ?v1 )(fun_app$f ?v2 (fun_app$u ?v0 ?v3 )))))):named a73 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 (image$k ?v0 ?v1 ))(fun_app$e ?v2 ?v3 )))(forall ((?v3 N$ ))(=> (member$d ?v3 ?v1 )(fun_app$e ?v2 (fun_app$s ?v0 ?v3 )))))):named a74 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 (image$m ?v0 ?v1 ))(fun_app$e ?v2 ?v3 )))(forall ((?v3 Dtree$ ))(=> (member$c ?v3 ?v1 )(fun_app$e ?v2 (fun_app$b ?v0 ?v3 )))))):named a75 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_N_sum_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$d ?v3 (image$f ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$b ?v3 ?v1 )(fun_app$h ?v2 (fun_app$o ?v0 ?v3 )))))):named a76 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum_set$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(=> (member$d ?v3 (image$h ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$h ?v2 (fun_app$q ?v0 ?v3 )))))):named a77 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$d ?v3 (image$b ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$d ?v3 ?v1 )(fun_app$h ?v2 (fun_app$l ?v0 ?v3 )))))):named a78 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 Dtree_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$d ?v3 (image$d ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(exists ((?v3 Dtree$ ))(and (member$c ?v3 ?v1 )(fun_app$h ?v2 (fun_app$i ?v0 ?v3 )))))):named a79 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 N_set$ )(?v2 Dtree_bool_fun$ ))(=> (exists ((?v3 Dtree$ ))(and (member$c ?v3 (image$c ?v0 ?v1 ))(fun_app$g ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$d ?v3 ?v1 )(fun_app$g ?v2 (fun_app$m ?v0 ?v3 )))))):named a80 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_set$ )(?v2 Dtree_bool_fun$ ))(=> (exists ((?v3 Dtree$ ))(and (member$c ?v3 (image$e ?v0 ?v1 ))(fun_app$g ?v2 ?v3 )))(exists ((?v3 Dtree$ ))(and (member$c ?v3 ?v1 )(fun_app$g ?v2 (fun_app$n ?v0 ?v3 )))))):named a81 ))
(assert (! (forall ((?v0 N_T_N_sum_fun$ )(?v1 N_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$b ?v3 (image$j ?v0 ?v1 ))(fun_app$f ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$d ?v3 ?v1 )(fun_app$f ?v2 (fun_app$c ?v0 ?v3 )))))):named a82 ))
(assert (! (forall ((?v0 Dtree_T_N_sum_fun$ )(?v1 Dtree_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$b ?v3 (image$l ?v0 ?v1 ))(fun_app$f ?v2 ?v3 )))(exists ((?v3 Dtree$ ))(and (member$c ?v3 ?v1 )(fun_app$f ?v2 (fun_app$u ?v0 ?v3 )))))):named a83 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 (image$k ?v0 ?v1 ))(fun_app$e ?v2 ?v3 )))(exists ((?v3 N$ ))(and (member$d ?v3 ?v1 )(fun_app$e ?v2 (fun_app$s ?v0 ?v3 )))))):named a84 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 (image$m ?v0 ?v1 ))(fun_app$e ?v2 ?v3 )))(exists ((?v3 Dtree$ ))(and (member$c ?v3 ?v1 )(fun_app$e ?v2 (fun_app$b ?v0 ?v3 )))))):named a85 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_N_sum_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$d ?v3 (image$f ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$b ?v3 ?v1 )(fun_app$h ?v2 (fun_app$o ?v0 ?v3 )))))):named a86 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum_set$ )(?v2 N_bool_fun$ ))(=> (exists ((?v3 N$ ))(and (member$d ?v3 (image$h ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$h ?v2 (fun_app$q ?v0 ?v3 )))))):named a87 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$v ?v2 ?v4 )(fun_app$v ?v3 ?v4 )))))(= (image$ ?v2 ?v0 )(image$ ?v3 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$b (inr$ ?v0 )(image$n (map_sum$b id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$b (inr$ ?v3 )?v2 )(= (fun_app$l ?v1 ?v3 )?v0 ))))):named a89 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(= (member$a (inr$a ?v0 )(image$o (map_sum$c id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$b (inr$ ?v3 )?v2 )(= (fun_app$m ?v1 ?v3 )?v0 ))))):named a90 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a (inr$a ?v0 )(image$p (map_sum$d id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$n ?v1 ?v3 )?v0 ))))):named a91 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b (inr$ ?v0 )(image$ (fun_app$j (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$i ?v1 ?v3 )?v0 ))))):named a92 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(=> (member$b (inr$ ?v0 )(image$n (map_sum$b id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$b (inr$ ?v3 )?v2 )(= (fun_app$l ?v1 ?v3 )?v0 ))))):named a93 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(=> (member$a (inr$a ?v0 )(image$o (map_sum$c id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$b (inr$ ?v3 )?v2 )(= (fun_app$m ?v1 ?v3 )?v0 ))))):named a94 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$a (inr$a ?v0 )(image$p (map_sum$d id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$n ?v1 ?v3 )?v0 ))))):named a95 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$b (inr$ ?v0 )(image$ (fun_app$j (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$i ?v1 ?v3 )?v0 ))))):named a96 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a97 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a98 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a99 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a100 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$b (inr$ ?v0 )(image$ (fun_app$j (map_sum$ id$ )root$ )(cont$ ?v1 )))(member$a (inr$a (fun_app$m (subtrOf$ ?v1 )?v0 ))(cont$ ?v1 )))):named a101 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$b (inr$ ?v0 )(image$ (fun_app$j (map_sum$ id$ )root$ )(cont$ ?v1 )))(and (member$a (inr$a (fun_app$m (subtrOf$ ?v1 )?v0 ))(cont$ ?v1 ))(= (fun_app$i root$ (fun_app$m (subtrOf$ ?v1 )?v0 ))?v0 )))):named a102 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 T_N_sum$ )(?v3 N$ ))(=> (= (fun_app$w (map_sum$b ?v0 ?v1 )?v2 )(inr$ ?v3 ))(exists ((?v4 N$ ))(and (= ?v2 (inr$ ?v4 ))(= (fun_app$l ?v1 ?v4 )?v3 ))))):named a103 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum$ )(?v3 Dtree$ ))(=> (= (fun_app$x (map_sum$c ?v0 ?v1 )?v2 )(inr$a ?v3 ))(exists ((?v4 N$ ))(and (= ?v2 (inr$ ?v4 ))(= (fun_app$m ?v1 ?v4 )?v3 ))))):named a104 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum$ )(?v3 Dtree$ ))(=> (= (fun_app$y (map_sum$d ?v0 ?v1 )?v2 )(inr$a ?v3 ))(exists ((?v4 Dtree$ ))(and (= ?v2 (inr$a ?v4 ))(= (fun_app$n ?v1 ?v4 )?v3 ))))):named a105 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum$ )(?v3 N$ ))(=> (= (fun_app$v (fun_app$j (map_sum$ ?v0 )?v1 )?v2 )(inr$ ?v3 ))(exists ((?v4 Dtree$ ))(and (= ?v2 (inr$a ?v4 ))(= (fun_app$i ?v1 ?v4 )?v3 ))))):named a106 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 N$ ))(! (= (fun_app$w (map_sum$b ?v0 ?v1 )(inr$ ?v2 ))(inr$ (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$w (map_sum$b ?v0 ?v1 )(inr$ ?v2 ))))):named a107 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 N$ ))(! (= (fun_app$x (map_sum$c ?v0 ?v1 )(inr$ ?v2 ))(inr$a (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$x (map_sum$c ?v0 ?v1 )(inr$ ?v2 ))))):named a108 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree$ ))(! (= (fun_app$y (map_sum$d ?v0 ?v1 )(inr$a ?v2 ))(inr$a (fun_app$n ?v1 ?v2 ))):pattern ((fun_app$y (map_sum$d ?v0 ?v1 )(inr$a ?v2 ))))):named a109 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Dtree$ ))(! (= (fun_app$v (fun_app$j (map_sum$ ?v0 )?v1 )(inr$a ?v2 ))(inr$ (fun_app$i ?v1 ?v2 ))):pattern ((fun_app$v (fun_app$j (map_sum$ ?v0 )?v1 )(inr$a ?v2 ))))):named a110 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 N$ ))(= (fun_app$w (map_sum$b ?v0 ?v1 )(ite ?v2 ?v3 (inr$ ?v4 )))(ite ?v2 (fun_app$w (map_sum$b ?v0 ?v1 )?v3 )(inr$ (fun_app$l ?v1 ?v4 ))))):named a111 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 T_N_sum$ )(?v4 N$ ))(= (fun_app$x (map_sum$c ?v0 ?v1 )(ite ?v2 ?v3 (inr$ ?v4 )))(ite ?v2 (fun_app$x (map_sum$c ?v0 ?v1 )?v3 )(inr$a (fun_app$m ?v1 ?v4 ))))):named a112 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 Dtree$ ))(= (fun_app$y (map_sum$d ?v0 ?v1 )(ite ?v2 ?v3 (inr$a ?v4 )))(ite ?v2 (fun_app$y (map_sum$d ?v0 ?v1 )?v3 )(inr$a (fun_app$n ?v1 ?v4 ))))):named a113 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 T_dtree_sum$ )(?v4 Dtree$ ))(= (fun_app$v (fun_app$j (map_sum$ ?v0 )?v1 )(ite ?v2 ?v3 (inr$a ?v4 )))(ite ?v2 (fun_app$v (fun_app$j (map_sum$ ?v0 )?v1 )?v3 )(inr$ (fun_app$i ?v1 ?v4 ))))):named a114 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ ))(= (collect$ (uu$ ?v0 ))?v0 )):named a115 ))
(assert (! (forall ((?v0 T_N_sum_set$ ))(= (collect$a (uua$ ?v0 ))?v0 )):named a116 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(= (collect$b (uub$ ?v0 ))?v0 )):named a117 ))
(assert (! (forall ((?v0 N_set$ ))(= (collect$c (uuc$ ?v0 ))?v0 )):named a118 ))
(assert (! (forall ((?v0 Dtree_set$ ))(= (collect$d (uud$ ?v0 ))?v0 )):named a119 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_bool_fun$ ))(= (member$ ?v0 (collect$ ?v1 ))(fun_app$d ?v1 ?v0 ))):named a120 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_bool_fun$ ))(= (member$b ?v0 (collect$a ?v1 ))(fun_app$f ?v1 ?v0 ))):named a121 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_bool_fun$ ))(= (member$a ?v0 (collect$b ?v1 ))(fun_app$e ?v1 ?v0 ))):named a122 ))
(assert (! (forall ((?v0 N$ )(?v1 N_bool_fun$ ))(= (member$d ?v0 (collect$c ?v1 ))(fun_app$h ?v1 ?v0 ))):named a123 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_bool_fun$ ))(= (member$c ?v0 (collect$d ?v1 ))(fun_app$g ?v1 ?v0 ))):named a124 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_N_fun$ )(?v2 Bool )(?v3 N$ )(?v4 T_N_sum$ ))(= (fun_app$w (map_sum$b ?v0 ?v1 )(ite ?v2 (inr$ ?v3 )?v4 ))(ite ?v2 (inr$ (fun_app$l ?v1 ?v3 ))(fun_app$w (map_sum$b ?v0 ?v1 )?v4 )))):named a125 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 N_dtree_fun$ )(?v2 Bool )(?v3 N$ )(?v4 T_N_sum$ ))(= (fun_app$x (map_sum$c ?v0 ?v1 )(ite ?v2 (inr$ ?v3 )?v4 ))(ite ?v2 (inr$a (fun_app$m ?v1 ?v3 ))(fun_app$x (map_sum$c ?v0 ?v1 )?v4 )))):named a126 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Bool )(?v3 Dtree$ )(?v4 T_dtree_sum$ ))(= (fun_app$y (map_sum$d ?v0 ?v1 )(ite ?v2 (inr$a ?v3 )?v4 ))(ite ?v2 (inr$a (fun_app$n ?v1 ?v3 ))(fun_app$y (map_sum$d ?v0 ?v1 )?v4 )))):named a127 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 Dtree_N_fun$ )(?v2 Bool )(?v3 Dtree$ )(?v4 T_dtree_sum$ ))(= (fun_app$v (fun_app$j (map_sum$ ?v0 )?v1 )(ite ?v2 (inr$a ?v3 )?v4 ))(ite ?v2 (inr$ (fun_app$i ?v1 ?v3 ))(fun_app$v (fun_app$j (map_sum$ ?v0 )?v1 )?v4 )))):named a128 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(=> (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a129 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a130 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (member$a (inr$a ?v0 )(cont$ ?v1 ))(member$b (inr$ (fun_app$i root$ ?v0 ))(image$ (fun_app$j (map_sum$ id$ )root$ )(cont$ ?v1 ))))):named a131 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_T_dtree_sum_sum_set$ ))(= (vimage$ uue$ (image$q (map_sum$e id$ ?v0 )?v1 ))(image$ ?v0 (vimage$a uuf$ ?v1 )))):named a132 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$b uug$ (image$n (map_sum$b id$ ?v0 )?v1 ))(image$b ?v0 (vimage$b uug$ ?v1 )))):named a133 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$c uuh$ (image$o (map_sum$c id$ ?v0 )?v1 ))(image$c ?v0 (vimage$b uug$ ?v1 )))):named a134 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$c uuh$ (image$p (map_sum$d id$ ?v0 )?v1 ))(image$e ?v0 (vimage$c uuh$ ?v1 )))):named a135 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$b uug$ (image$ (fun_app$j (map_sum$ id$ )?v0 )?v1 ))(image$d ?v0 (vimage$c uuh$ ?v1 )))):named a136 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ )(?v3 Dtree$ ))(=> (and (inFr2$ ?v0 ?v1 ?v2 )(and (member$d (fun_app$i root$ ?v3 )?v0 )(member$a (inr$a ?v1 )(cont$ ?v3 ))))(inFr2$ ?v0 ?v3 ?v2 ))):named a137 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 N$ ))(= (fun_app$h (fun_app$z (inItr$ ?v0 )?v1 )?v2 )(or (exists ((?v3 Dtree$ )(?v4 N_set$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 (fun_app$i root$ ?v3 ))(member$d (fun_app$i root$ ?v3 )?v4 )))))(exists ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 N$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$d (fun_app$i root$ ?v3 )?v4 )(and (member$a (inr$a ?v5 )(cont$ ?v3 ))(fun_app$h (fun_app$z (inItr$ ?v4 )?v5 )?v6 )))))))))):named a138 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 N$ ))(=> (and (fun_app$h (fun_app$z (inItr$ ?v0 )?v1 )?v2 )(and (forall ((?v3 Dtree$ )(?v4 N_set$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 (fun_app$i root$ ?v3 ))(member$d (fun_app$i root$ ?v3 )?v4 ))))false ))(forall ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 N$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$d (fun_app$i root$ ?v3 )?v4 )(and (member$a (inr$a ?v5 )(cont$ ?v3 ))(fun_app$h (fun_app$z (inItr$ ?v4 )?v5 )?v6 ))))))false ))))false )):named a139 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 Dtree$ )(?v3 N$ ))(=> (and (member$d (fun_app$i root$ ?v0 )?v1 )(and (member$a (inr$a ?v2 )(cont$ ?v0 ))(fun_app$h (fun_app$z (inItr$ ?v1 )?v2 )?v3 )))(fun_app$h (fun_app$z (inItr$ ?v1 )?v0 )?v3 ))):named a140 ))
(assert (! (forall ((?v0 Dtree$ ))(= (wf$ ?v0 )(exists ((?v1 Dtree$ ))(and (= ?v0 ?v1 )(and (member$ (pair$ (fun_app$i root$ ?v1 )(image$ (fun_app$j (map_sum$ id$ )root$ )(cont$ ?v1 )))p$ )(and (inj_on$ root$ (vimage$c uuh$ (cont$ ?v1 )))(forall ((?v2 Dtree$ ))(=> (member$c ?v2 (vimage$c uuh$ (cont$ ?v1 )))(wf$ ?v2 ))))))))):named a141 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (and (member$ (pair$ (fun_app$i root$ ?v0 )(image$ (fun_app$j (map_sum$ id$ )root$ )(cont$ ?v0 )))p$ )(and (inj_on$ root$ (vimage$c uuh$ (cont$ ?v0 )))(forall ((?v1 Dtree$ ))(=> (member$c ?v1 (vimage$c uuh$ (cont$ ?v0 )))(wf$ ?v1 )))))(wf$ ?v0 ))):named a142 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$l ?v0 ?v1 )?v2 )(member$d ?v2 ?v3 ))(member$d ?v1 (vimage$d ?v0 ?v3 )))):named a143 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 Dtree$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$i ?v0 ?v1 )?v2 )(member$d ?v2 ?v3 ))(member$c ?v1 (vimage$e ?v0 ?v3 )))):named a144 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 N$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$m ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$d ?v1 (vimage$f ?v0 ?v3 )))):named a145 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$n ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$c ?v1 (vimage$g ?v0 ?v3 )))):named a146 ))
(assert (! (forall ((?v0 N_T_N_sum_fun$ )(?v1 N$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= (fun_app$c ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$d ?v1 (vimage$b ?v0 ?v3 )))):named a147 ))
(assert (! (forall ((?v0 Dtree_T_N_sum_fun$ )(?v1 Dtree$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= (fun_app$u ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$c ?v1 (vimage$h ?v0 ?v3 )))):named a148 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$s ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$d ?v1 (vimage$i ?v0 ?v3 )))):named a149 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_N_sum$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$o ?v0 ?v1 )?v2 )(member$d ?v2 ?v3 ))(member$b ?v1 (vimage$j ?v0 ?v3 )))):named a150 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$q ?v0 ?v1 )?v2 )(member$d ?v2 ?v3 ))(member$a ?v1 (vimage$k ?v0 ?v3 )))):named a151 ))
(assert (! (forall ((?v0 T_N_sum_dtree_fun$ )(?v1 T_N_sum$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$p ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$b ?v1 (vimage$l ?v0 ?v3 )))):named a152 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(= (member$d ?v0 (vimage$d ?v1 ?v2 ))(member$d (fun_app$l ?v1 ?v0 )?v2 ))):named a153 ))
(assert (! (forall ((?v0 N$ )(?v1 N_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$d ?v0 (vimage$f ?v1 ?v2 ))(member$c (fun_app$m ?v1 ?v0 )?v2 ))):named a154 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_N_fun$ )(?v2 N_set$ ))(= (member$c ?v0 (vimage$e ?v1 ?v2 ))(member$d (fun_app$i ?v1 ?v0 )?v2 ))):named a155 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$c ?v0 (vimage$g ?v1 ?v2 ))(member$c (fun_app$n ?v1 ?v0 )?v2 ))):named a156 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_N_fun$ )(?v2 N_set$ ))(= (member$b ?v0 (vimage$j ?v1 ?v2 ))(member$d (fun_app$o ?v1 ?v0 )?v2 ))):named a157 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$b ?v0 (vimage$l ?v1 ?v2 ))(member$c (fun_app$p ?v1 ?v0 )?v2 ))):named a158 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(= (member$a ?v0 (vimage$k ?v1 ?v2 ))(member$d (fun_app$q ?v1 ?v0 )?v2 ))):named a159 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$a ?v0 (vimage$m ?v1 ?v2 ))(member$c (fun_app$r ?v1 ?v0 )?v2 ))):named a160 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$d ?v0 (vimage$b ?v1 ?v2 ))(member$b (fun_app$c ?v1 ?v0 )?v2 ))):named a161 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$d ?v0 (vimage$i ?v1 ?v2 ))(member$a (fun_app$s ?v1 ?v0 )?v2 ))):named a162 ))
(assert (! (= (vimage$n id$ )id$a ):named a163 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N$ )(?v2 N_set$ ))(=> (member$d (fun_app$l ?v0 ?v1 )?v2 )(member$d ?v1 (vimage$d ?v0 ?v2 )))):named a164 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 Dtree$ )(?v2 N_set$ ))(=> (member$d (fun_app$i ?v0 ?v1 )?v2 )(member$c ?v1 (vimage$e ?v0 ?v2 )))):named a165 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 N$ )(?v2 Dtree_set$ ))(=> (member$c (fun_app$m ?v0 ?v1 )?v2 )(member$d ?v1 (vimage$f ?v0 ?v2 )))):named a166 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree$ )(?v2 Dtree_set$ ))(=> (member$c (fun_app$n ?v0 ?v1 )?v2 )(member$c ?v1 (vimage$g ?v0 ?v2 )))):named a167 ))
(assert (! (forall ((?v0 N_T_N_sum_fun$ )(?v1 N$ )(?v2 T_N_sum_set$ ))(=> (member$b (fun_app$c ?v0 ?v1 )?v2 )(member$d ?v1 (vimage$b ?v0 ?v2 )))):named a168 ))
(assert (! (forall ((?v0 Dtree_T_N_sum_fun$ )(?v1 Dtree$ )(?v2 T_N_sum_set$ ))(=> (member$b (fun_app$u ?v0 ?v1 )?v2 )(member$c ?v1 (vimage$h ?v0 ?v2 )))):named a169 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N$ )(?v2 T_dtree_sum_set$ ))(=> (member$a (fun_app$s ?v0 ?v1 )?v2 )(member$d ?v1 (vimage$i ?v0 ?v2 )))):named a170 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_N_sum$ )(?v2 N_set$ ))(=> (member$d (fun_app$o ?v0 ?v1 )?v2 )(member$b ?v1 (vimage$j ?v0 ?v2 )))):named a171 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum$ )(?v2 N_set$ ))(=> (member$d (fun_app$q ?v0 ?v1 )?v2 )(member$a ?v1 (vimage$k ?v0 ?v2 )))):named a172 ))
(assert (! (forall ((?v0 T_N_sum_dtree_fun$ )(?v1 T_N_sum$ )(?v2 Dtree_set$ ))(=> (member$c (fun_app$p ?v0 ?v1 )?v2 )(member$b ?v1 (vimage$l ?v0 ?v2 )))):named a173 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(=> (member$d ?v0 (vimage$d ?v1 ?v2 ))(member$d (fun_app$l ?v1 ?v0 )?v2 ))):named a174 ))
(assert (! (forall ((?v0 N$ )(?v1 N_dtree_fun$ )(?v2 Dtree_set$ ))(=> (member$d ?v0 (vimage$f ?v1 ?v2 ))(member$c (fun_app$m ?v1 ?v0 )?v2 ))):named a175 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_N_fun$ )(?v2 N_set$ ))(=> (member$c ?v0 (vimage$e ?v1 ?v2 ))(member$d (fun_app$i ?v1 ?v0 )?v2 ))):named a176 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(=> (member$c ?v0 (vimage$g ?v1 ?v2 ))(member$c (fun_app$n ?v1 ?v0 )?v2 ))):named a177 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_N_fun$ )(?v2 N_set$ ))(=> (member$b ?v0 (vimage$j ?v1 ?v2 ))(member$d (fun_app$o ?v1 ?v0 )?v2 ))):named a178 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_dtree_fun$ )(?v2 Dtree_set$ ))(=> (member$b ?v0 (vimage$l ?v1 ?v2 ))(member$c (fun_app$p ?v1 ?v0 )?v2 ))):named a179 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(=> (member$a ?v0 (vimage$k ?v1 ?v2 ))(member$d (fun_app$q ?v1 ?v0 )?v2 ))):named a180 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 Dtree_set$ ))(=> (member$a ?v0 (vimage$m ?v1 ?v2 ))(member$c (fun_app$r ?v1 ?v0 )?v2 ))):named a181 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(=> (member$d ?v0 (vimage$b ?v1 ?v2 ))(member$b (fun_app$c ?v1 ?v0 )?v2 ))):named a182 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$d ?v0 (vimage$i ?v1 ?v2 ))(member$a (fun_app$s ?v1 ?v0 )?v2 ))):named a183 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$c ?v0 (vimage$c ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$b ?v1 ?v0 )?v3 )(member$a ?v3 ?v2 ))false )))false )):named a184 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ ))(=> (member$d (fun_app$i root$ ?v0 )?v1 )(fun_app$h (fun_app$z (inItr$ ?v1 )?v0 )(fun_app$i root$ ?v0 )))):named a185 ))
(check-sat )
(get-unsat-core )
