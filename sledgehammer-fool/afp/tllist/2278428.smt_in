(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort B_a_b_tllist_fun$ 0 )
(declare-sort C_a_b_tllist_fun$ 0 )
(declare-sort C_a_c_tllist_fun$ 0 )
(declare-sort Bool_set_bool_fun$ 0 )
(declare-sort A_b_tllist_bool_fun$ 0 )
(declare-sort A_c_tllist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort B_a_llist_b_prod_fun$ 0 )
(declare-sort B_a_llist_c_prod_fun$ 0 )
(declare-sort C_a_llist_b_prod_fun$ 0 )
(declare-sort C_a_llist_c_prod_fun$ 0 )
(declare-sort A_llist_b_bool_fun_fun$ 0 )
(declare-sort A_llist_c_bool_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_bool_fun$ 0 )
(declare-sort A_llist_c_prod_bool_fun$ 0 )
(declare-sort A_llist_b_a_b_tllist_fun_fun$ 0 )
(declare-sort A_llist_c_a_b_tllist_fun_fun$ 0 )
(declare-sort A_llist_c_a_c_tllist_fun_fun$ 0 )
(declare-sort B_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort B_a_llist_c_prod_bool_fun_fun$ 0 )
(declare-sort C_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort C_a_llist_c_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_a_llist_b_prod_fun_fun$ 0 )
(declare-sort A_llist_b_a_llist_c_prod_fun_fun$ 0 )
(declare-sort A_llist_b_prod_bool_fun_bool_fun$ 0 )
(declare-sort A_llist_c_a_llist_b_prod_fun_fun$ 0 )
(declare-sort A_llist_c_a_llist_c_prod_fun_fun$ 0 )
(declare-sort A_llist_c_prod_bool_fun_bool_fun$ 0 )
(declare-sort Bool_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort Bool_a_llist_c_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_c_prod_fun$ 0 )
(declare-sort A_llist_c_prod_a_llist_c_prod_fun$ 0 )
(declare-sort A_llist_b_prod_set_a_llist_b_prod_fun$ 0 )
(declare-sort A_llist_c_prod_set_a_llist_c_prod_fun$ 0 )
(declare-sort B_a_llist_c_prod_fun_a_llist_c_prod_fun$ 0 )
(declare-sort A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_b_a_llist_c_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_c_a_llist_b_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_c_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_c_prod_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ 0 )
(declare-sort Bool_a_llist_b_prod_a_llist_c_prod_fun_fun$ 0 )
(declare-sort B_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun$ 0 )
(declare-sort C_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun$ 0 )
(declare-sort B_a_llist_c_prod_fun_a_llist_c_prod_fun_bool_fun$ 0 )
(declare-sort Bool_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun$ 0 )
(declare-sort A_llist_b_prod_bool_fun_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_c_prod_bool_fun_a_llist_c_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ 0 )
(declare-sort A_llist_c_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ 0 )
(declare-sort B_a_llist_c_prod_fun_a_llist_b_a_llist_c_prod_fun_fun_fun$ 0 )
(declare-sort B_a_llist_c_prod_fun_a_llist_b_prod_a_llist_c_prod_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun_a_llist_c_prod_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_bool_fun_bool_a_llist_b_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_c_prod_bool_fun_bool_a_llist_c_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_b_bool_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_c_bool_fun_fun_a_llist_c_a_llist_c_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_b_a_llist_b_prod_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_c_a_llist_c_prod_fun_fun_a_llist_c_a_llist_c_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_c_prod_fun_bool_a_llist_b_prod_a_llist_c_prod_fun_fun_fun$ 0 )
(declare-sort Bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun$ 0 )
(declare-sort Bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_c_prod_bool_fun_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_b_a_llist_b_prod_bool_fun_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_c_a_llist_c_prod_bool_fun_fun_fun_a_llist_c_a_llist_c_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_b_prod_bool_fun_fun_bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_c_prod_a_llist_c_prod_bool_fun_fun_bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_c_prod_bool_fun_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-sort A_llist_c_prod$ 0)
(declare-sort A_llist_b_prod$ 0)
(declare-fun fst$ (A_llist_c_prod$)A_llist$)
(declare-fun snd$ (A_llist_c_prod$)C$)
(declare-fun pair$ (A_llist$ C$ )A_llist_c_prod$)
(declare-fun fst$a (A_llist_b_prod$)A_llist$)
(declare-fun snd$a (A_llist_b_prod$)B$)
(declare-fun pair$a (A_llist$ B$ )A_llist_b_prod$)
(declare-sort A_b_tllist$ 0)
(declare-sort A_c_tllist$ 0)
(declare-fun terminal$ (A_b_tllist$)B$)
(declare-fun tNil$ (B$ )A_b_tllist$)
(declare-fun thd$ (A_b_tllist$)A$)
(declare-fun ttl$ (A_b_tllist$)A_b_tllist$)
(declare-fun tCons$ (A$ A_b_tllist$ )A_b_tllist$)
(declare-fun terminal$a (A_c_tllist$)C$)
(declare-fun tNil$a (C$ )A_c_tllist$)
(declare-fun thd$a (A_c_tllist$)A$)
(declare-fun ttl$a (A_c_tllist$)A_c_tllist$)
(declare-fun tCons$a (A$ A_c_tllist$ )A_c_tllist$)
(declare-fun uu$ (A_llist$ C$ )A_llist_c_bool_fun_fun$ )
(declare-fun uua$ ()A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )
(declare-fun uub$ ()A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )
(declare-fun uuc$ (A_llist$ B$ )A_llist_b_bool_fun_fun$ )
(declare-fun uud$ ()A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun uue$ (Bool A_llist_c_bool_fun_fun$ )A_llist_c_bool_fun_fun$ )
(declare-fun uuf$ (Bool A_llist_b_bool_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uug$ (A_llist_c_a_llist_b_prod_bool_fun_fun_fun$ A_llist_b_prod$ )A_llist_c_bool_fun_fun$ )
(declare-fun uuh$ (A_llist_c_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ B_a_llist_c_prod_fun$ )A_llist_c_a_llist_c_prod_fun_fun$ )
(declare-fun uui$ (A_llist_b_a_llist_c_prod_bool_fun_fun_fun$ A_llist_c_prod$ )A_llist_b_bool_fun_fun$ )
(declare-fun uuj$ (A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ A_llist_c_prod$ )A_llist_c_bool_fun_fun$ )
(declare-fun uuk$ (A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )B_a_llist_c_prod_fun_a_llist_b_a_llist_c_prod_fun_fun_fun$ )
(declare-fun uul$ (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ A_llist_b_prod$ )A_llist_b_bool_fun_fun$ )
(declare-fun uum$ (A_llist_c_bool_fun_fun$ A_llist_c_a_llist_c_prod_fun_fun$ )A_llist_c_bool_fun_fun$ )
(declare-fun uun$ (A_llist_c_bool_fun_fun$ A_llist_b_a_llist_c_prod_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uuo$ (A_llist_b_bool_fun_fun$ A_llist_c_a_llist_b_prod_fun_fun$ )A_llist_c_bool_fun_fun$ )
(declare-fun uup$ (A_llist_b_bool_fun_fun$ A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uuq$ (A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )A_llist_c_a_llist_c_prod_fun_fun_a_llist_c_a_llist_c_prod_bool_fun_fun_fun_fun$ )
(declare-fun uur$ (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_a_llist_b_prod_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ )
(declare-fun uus$ (A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )
(declare-fun uut$ (A_llist_c_a_b_tllist_fun_fun$ A_llist_b_a_llist_c_prod_fun_fun$ )A_llist_b_a_b_tllist_fun_fun$ )
(declare-fun uuu$ (A_llist_b_a_b_tllist_fun_fun$ A_llist_c_a_llist_b_prod_fun_fun$ )A_llist_c_a_b_tllist_fun_fun$ )
(declare-fun uuv$ (A_llist_b_a_b_tllist_fun_fun$ A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_a_b_tllist_fun_fun$ )
(declare-fun uuw$ (Bool_bool_fun$ A_llist_c_bool_fun_fun$ )A_llist_c_bool_fun_fun$ )
(declare-fun uux$ (Bool_bool_fun$ A_llist_b_bool_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uuy$ (A_llist_c_prod_bool_fun_bool_fun$ A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )A_llist_c_bool_fun_fun$ )
(declare-fun uuz$ (Bool_a_llist_c_prod_bool_fun_fun$ )A_llist_c_bool_fun_fun_a_llist_c_a_llist_c_prod_bool_fun_fun_fun_fun$ )
(declare-fun uva$ (A_llist_b_prod_bool_fun_bool_fun$ A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uvb$ (Bool_a_llist_b_prod_bool_fun_fun$ )A_llist_b_bool_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ )
(declare-fun uvc$ (A_llist_c_prod_bool_fun_a_llist_c_prod_bool_fun_fun$ )A_llist_c_a_llist_c_prod_bool_fun_fun_fun_a_llist_c_a_llist_c_prod_bool_fun_fun_fun_fun$ )
(declare-fun uvd$ (B_a_llist_c_prod_fun_a_llist_c_prod_fun_bool_fun$ A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uve$ (A_llist_b_prod_bool_fun_a_llist_b_prod_bool_fun_fun$ )A_llist_b_a_llist_b_prod_bool_fun_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ )
(declare-fun uvf$ (Bool_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun$ A_llist_b_bool_fun_fun$ )A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )
(declare-fun uvg$ ()A_llist_c_a_c_tllist_fun_fun$ )
(declare-fun uvh$ ()A_llist_b_a_b_tllist_fun_fun$ )
(declare-fun uvi$ (A_llist_c_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ B_a_llist_c_prod_fun$ )A_llist_c_prod_a_llist_c_prod_fun$ )
(declare-fun uvj$ (A_llist_b_a_llist_c_prod_bool_fun_fun_fun$ )A_llist_c_prod_a_llist_b_prod_bool_fun_fun$ )
(declare-fun uvk$ (A_llist_c_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_prod_a_llist_c_prod_bool_fun_fun$ )
(declare-fun uvl$ (A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )
(declare-fun uvm$ (A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )B_a_llist_c_prod_fun_a_llist_b_prod_a_llist_c_prod_fun_fun$ )
(declare-fun uvn$ (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )
(declare-fun uvo$ (A_llist_b_prod_bool_fun$ )A_llist_b_prod_bool_fun_bool_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun uvp$ (A_llist_b_prod_a_llist_c_prod_fun$ )A_llist_b_prod_a_llist_c_prod_fun_bool_a_llist_b_prod_a_llist_c_prod_fun_fun_fun$ )
(declare-fun uvq$ (A_llist_c_prod_bool_fun$ )A_llist_c_prod_bool_fun_bool_a_llist_c_prod_bool_fun_fun_fun$ )
(declare-fun cont$ (A_llist_c_prod_set_a_llist_c_prod_fun$ A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ A_llist_c_prod_set_a_llist_c_prod_fun$ A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ A_llist_c_prod_a_llist_c_prod_fun$ )Bool )
(declare-fun fun1$ ()B_a_llist_c_prod_fun$ )
(declare-fun fun2$ ()B_a_llist_c_prod_fun$ )
(declare-fun apfst$ (A_llist_a_llist_fun$ A_llist_c_prod$ )A_llist_c_prod$ )
(declare-fun cont$a (A_llist_b_prod_set_a_llist_b_prod_fun$ )A_llist_b_prod_a_llist_b_prod_bool_fun_fun_bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun_fun$ )
(declare-fun cont$b (A_llist_c_prod_set_a_llist_c_prod_fun$ )A_llist_c_prod_a_llist_c_prod_bool_fun_fun_bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_c_prod_bool_fun_bool_fun_fun_fun_fun$ )
(declare-fun cont$c (A_llist_b_prod_set_a_llist_b_prod_fun$ A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ A_llist_c_prod_set_a_llist_c_prod_fun$ A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ A_llist_b_prod_a_llist_c_prod_fun$ )Bool )
(declare-fun prod1$ ()A_llist_b_prod$ )
(declare-fun prod2$ ()A_llist_b_prod$ )
(declare-fun reflp$ (A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )Bool )
(declare-fun reflp$a (A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )Bool )
(declare-fun fun_app$ (C_a_c_tllist_fun$ C$ )A_c_tllist$ )
(declare-fun lappend$ (A_llist$ )A_llist_a_llist_fun$ )
(declare-fun lfinite$ (A_llist$ )Bool )
(declare-fun fun_app$a (A_llist_c_a_c_tllist_fun_fun$ A_llist$ )C_a_c_tllist_fun$ )
(declare-fun fun_app$b (B_a_b_tllist_fun$ B$ )A_b_tllist$ )
(declare-fun fun_app$c (A_llist_b_a_b_tllist_fun_fun$ A_llist$ )B_a_b_tllist_fun$ )
(declare-fun fun_app$d (B_a_llist_b_prod_bool_fun_fun$ B$ )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$e (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ A_llist$ )B_a_llist_b_prod_bool_fun_fun$ )
(declare-fun fun_app$f (C_a_llist_c_prod_bool_fun_fun$ C$ )A_llist_c_prod_bool_fun$ )
(declare-fun fun_app$g (A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ A_llist$ )C_a_llist_c_prod_bool_fun_fun$ )
(declare-fun fun_app$h (A_llist_c_prod_bool_fun$ A_llist_c_prod$ )Bool )
(declare-fun fun_app$i (A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ A_llist_c_prod$ )A_llist_c_prod_bool_fun$ )
(declare-fun fun_app$j (A_llist_b_prod_a_llist_c_prod_bool_fun_fun$ A_llist_b_prod$ )A_llist_c_prod_bool_fun$ )
(declare-fun fun_app$k (A_llist_b_prod_bool_fun$ A_llist_b_prod$ )Bool )
(declare-fun fun_app$l (A_llist_c_prod_a_llist_b_prod_bool_fun_fun$ A_llist_c_prod$ )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$m (A_llist_c_prod_a_llist_c_prod_fun$ A_llist_c_prod$ )A_llist_c_prod$ )
(declare-fun fun_app$n (A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ A_llist_b_prod$ )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$o (A_llist_b_prod_a_llist_c_prod_fun$ A_llist_b_prod$ )A_llist_c_prod$ )
(declare-fun fun_app$p (B_a_llist_c_prod_fun_a_llist_b_prod_a_llist_c_prod_fun_fun$ B_a_llist_c_prod_fun$ )A_llist_b_prod_a_llist_c_prod_fun$ )
(declare-fun fun_app$q (B_a_llist_c_prod_fun_a_llist_c_prod_fun$ B_a_llist_c_prod_fun$ )A_llist_c_prod$ )
(declare-fun fun_app$r (B_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun$ B$ )B_a_llist_c_prod_fun_a_llist_c_prod_fun$ )
(declare-fun fun_app$s (A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ A_llist$ )B_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun$ )
(declare-fun fun_app$t (B_a_llist_c_prod_fun$ B$ )A_llist_c_prod$ )
(declare-fun fun_app$u (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$v (A_llist_c_bool_fun_fun$ A_llist$ )C_bool_fun$ )
(declare-fun fun_app$w (C_a_llist_b_prod_bool_fun_fun$ C$ )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$x (A_llist_c_a_llist_b_prod_bool_fun_fun_fun$ A_llist$ )C_a_llist_b_prod_bool_fun_fun$ )
(declare-fun fun_app$y (C_a_llist_c_prod_fun$ C$ )A_llist_c_prod$ )
(declare-fun fun_app$z (A_llist_c_a_llist_c_prod_fun_fun$ A_llist$ )C_a_llist_c_prod_fun$ )
(declare-fun case_prod$ (A_llist_b_bool_fun_fun$ )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$aa (C_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun$ C$ )B_a_llist_c_prod_fun_a_llist_c_prod_fun$ )
(declare-fun fun_app$ab (A_llist_c_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ A_llist$ )C_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun$ )
(declare-fun fun_app$ac (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$ad (A_llist_b_bool_fun_fun$ A_llist$ )B_bool_fun$ )
(declare-fun fun_app$ae (B_a_llist_c_prod_bool_fun_fun$ B$ )A_llist_c_prod_bool_fun$ )
(declare-fun fun_app$af (A_llist_b_a_llist_c_prod_bool_fun_fun_fun$ A_llist$ )B_a_llist_c_prod_bool_fun_fun$ )
(declare-fun fun_app$ag (A_llist_b_a_llist_c_prod_fun_fun$ A_llist$ )B_a_llist_c_prod_fun$ )
(declare-fun fun_app$ah (B_a_llist_c_prod_fun_a_llist_b_a_llist_c_prod_fun_fun_fun$ B_a_llist_c_prod_fun$ )A_llist_b_a_llist_c_prod_fun_fun$ )
(declare-fun fun_app$ai (Bool_a_llist_c_prod_bool_fun_fun$ Bool )A_llist_c_prod_bool_fun$ )
(declare-fun fun_app$aj (A_llist_c_prod_bool_fun_bool_a_llist_c_prod_bool_fun_fun_fun$ A_llist_c_prod_bool_fun$ )Bool_a_llist_c_prod_bool_fun_fun$ )
(declare-fun fun_app$ak (Bool_a_llist_b_prod_a_llist_c_prod_fun_fun$ Bool )A_llist_b_prod_a_llist_c_prod_fun$ )
(declare-fun fun_app$al (A_llist_b_prod_a_llist_c_prod_fun_bool_a_llist_b_prod_a_llist_c_prod_fun_fun_fun$ A_llist_b_prod_a_llist_c_prod_fun$ )Bool_a_llist_b_prod_a_llist_c_prod_fun_fun$ )
(declare-fun fun_app$am (Bool_a_llist_b_prod_bool_fun_fun$ Bool )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$an (A_llist_b_prod_bool_fun_bool_a_llist_b_prod_bool_fun_fun_fun$ A_llist_b_prod_bool_fun$ )Bool_a_llist_b_prod_bool_fun_fun$ )
(declare-fun fun_app$ao (A_llist_c_a_llist_c_prod_fun_fun_a_llist_c_a_llist_c_prod_bool_fun_fun_fun_fun$ A_llist_c_a_llist_c_prod_fun_fun$ )A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )
(declare-fun fun_app$ap (C_a_b_tllist_fun$ C$ )A_b_tllist$ )
(declare-fun fun_app$aq (A_llist_c_a_b_tllist_fun_fun$ A_llist$ )C_a_b_tllist_fun$ )
(declare-fun fun_app$ar (C_a_llist_b_prod_fun$ C$ )A_llist_b_prod$ )
(declare-fun fun_app$as (A_llist_c_a_llist_b_prod_fun_fun$ A_llist$ )C_a_llist_b_prod_fun$ )
(declare-fun fun_app$at (B_a_llist_b_prod_fun$ B$ )A_llist_b_prod$ )
(declare-fun fun_app$au (A_llist_b_a_llist_b_prod_fun_fun$ A_llist$ )B_a_llist_b_prod_fun$ )
(declare-fun fun_app$av (A_llist_b_a_llist_b_prod_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun fun_app$aw (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$ax (A_llist_c_bool_fun_fun_a_llist_c_a_llist_c_prod_bool_fun_fun_fun_fun$ A_llist_c_bool_fun_fun$ )A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )
(declare-fun fun_app$ay (A_llist_b_bool_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ A_llist_b_bool_fun_fun$ )A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun fun_app$az (Bool_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun$ Bool )B_a_llist_c_prod_fun_a_llist_c_prod_fun$ )
(declare-fun fun_app$ba (A_llist_c_prod_bool_fun_bool_fun$ A_llist_c_prod_bool_fun$ )Bool )
(declare-fun fun_app$bb (A_llist_c_a_llist_c_prod_bool_fun_fun_fun_a_llist_c_a_llist_c_prod_bool_fun_fun_fun_fun$ A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )
(declare-fun fun_app$bc (A_llist_c_prod_bool_fun_a_llist_c_prod_bool_fun_fun$ A_llist_c_prod_bool_fun$ )A_llist_c_prod_bool_fun$ )
(declare-fun fun_app$bd (A_llist_b_prod_bool_fun_bool_fun$ A_llist_b_prod_bool_fun$ )Bool )
(declare-fun fun_app$be (A_llist_b_a_llist_b_prod_bool_fun_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun fun_app$bf (A_llist_b_prod_bool_fun_a_llist_b_prod_bool_fun_fun$ A_llist_b_prod_bool_fun$ )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$bg (B_a_llist_c_prod_fun_a_llist_c_prod_fun_bool_fun$ B_a_llist_c_prod_fun_a_llist_c_prod_fun$ )Bool )
(declare-fun fun_app$bh (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$bi (Bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_b_prod_bool_fun_bool_fun$ )
(declare-fun fun_app$bj (Bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun$ Bool_set_bool_fun$ )Bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun$ )
(declare-fun fun_app$bk (A_llist_b_prod_a_llist_b_prod_bool_fun_fun_bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun_fun$ A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )Bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun$ )
(declare-fun fun_app$bl (Bool_bool_bool_fun_fun_a_llist_c_prod_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_c_prod_bool_fun_bool_fun$ )
(declare-fun fun_app$bm (Bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_c_prod_bool_fun_bool_fun_fun_fun$ Bool_set_bool_fun$ )Bool_bool_bool_fun_fun_a_llist_c_prod_bool_fun_bool_fun_fun$ )
(declare-fun fun_app$bn (A_llist_c_prod_a_llist_c_prod_bool_fun_fun_bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_c_prod_bool_fun_bool_fun_fun_fun_fun$ A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )Bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_c_prod_bool_fun_bool_fun_fun_fun$ )
(declare-fun fun_app$bo (A_b_tllist_bool_fun$ A_b_tllist$ )Bool )
(declare-fun fun_app$bp (A_c_tllist_bool_fun$ A_c_tllist$ )Bool )
(declare-fun case_prod$a (A_llist_c_bool_fun_fun$ )A_llist_c_prod_bool_fun$ )
(declare-fun case_prod$b (A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )
(declare-fun case_prod$c (A_llist_c_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_c_prod_a_llist_b_prod_bool_fun_fun$ )
(declare-fun case_prod$d (A_llist_c_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ A_llist_c_prod$ B_a_llist_c_prod_fun$ )A_llist_c_prod$ )
(declare-fun case_prod$e (A_llist_b_a_llist_c_prod_bool_fun_fun_fun$ )A_llist_b_prod_a_llist_c_prod_bool_fun_fun$ )
(declare-fun case_prod$f (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )
(declare-fun case_prod$g (A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ A_llist_b_prod$ )B_a_llist_c_prod_fun_a_llist_c_prod_fun$ )
(declare-fun case_prod$h (A_llist_c_a_b_tllist_fun_fun$ A_llist_c_prod$ )A_b_tllist$ )
(declare-fun case_prod$i (A_llist_b_a_b_tllist_fun_fun$ A_llist_b_prod$ )A_b_tllist$ )
(declare-fun case_prod$j (A_llist_c_a_llist_c_prod_fun_fun$ )A_llist_c_prod_a_llist_c_prod_fun$ )
(declare-fun case_prod$k (A_llist_b_a_llist_c_prod_fun_fun$ )A_llist_b_prod_a_llist_c_prod_fun$ )
(declare-fun case_prod$l (A_llist_c_a_llist_b_prod_fun_fun$ A_llist_c_prod$ )A_llist_b_prod$ )
(declare-fun case_prod$m (A_llist_b_a_llist_b_prod_fun_fun$ A_llist_b_prod$ )A_llist_b_prod$ )
(declare-fun case_prod$n (A_llist_c_a_c_tllist_fun_fun$ A_llist_c_prod$ )A_c_tllist$ )
(declare-fun tllist_of_llist$ (C$ A_llist$ )A_c_tllist$ )
(declare-fun tllist_of_llist$a (B$ A_llist$ )A_b_tllist$ )
(assert (! (forall ((?v0 A_llist$ )(?v1 C$ ))(! (= (fun_app$ (fun_app$a uvg$ ?v0 )?v1 )(tllist_of_llist$ ?v1 ?v0 )):pattern ((fun_app$ (fun_app$a uvg$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ ))(! (= (fun_app$b (fun_app$c uvh$ ?v0 )?v1 )(tllist_of_llist$a ?v1 ?v0 )):pattern ((fun_app$b (fun_app$c uvh$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ ))(! (= (fun_app$d (fun_app$e uud$ ?v0 )?v1 )(case_prod$ (uuc$ ?v0 ?v1 ))):pattern ((fun_app$d (fun_app$e uud$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C$ ))(! (= (fun_app$f (fun_app$g uua$ ?v0 )?v1 )(case_prod$a (uu$ ?v0 ?v1 ))):pattern ((fun_app$f (fun_app$g uua$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v1 A_llist_c_prod$ )(?v2 A_llist_c_prod$ ))(! (= (fun_app$h (fun_app$i (uvl$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$i (case_prod$b ?v0 )?v2 )?v1 )):pattern ((fun_app$h (fun_app$i (uvl$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_c_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_c_prod$ ))(! (= (fun_app$h (fun_app$j (uvk$ ?v0 )?v1 )?v2 )(fun_app$k (fun_app$l (case_prod$c ?v0 )?v2 )?v1 )):pattern ((fun_app$h (fun_app$j (uvk$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_c_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v1 B_a_llist_c_prod_fun$ )(?v2 A_llist_c_prod$ ))(! (= (fun_app$m (uvi$ ?v0 ?v1 )?v2 )(case_prod$d ?v0 ?v2 ?v1 )):pattern ((fun_app$m (uvi$ ?v0 ?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_c_prod_bool_fun_fun_fun$ )(?v1 A_llist_c_prod$ )(?v2 A_llist_b_prod$ ))(! (= (fun_app$k (fun_app$l (uvj$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$j (case_prod$e ?v0 )?v2 )?v1 )):pattern ((fun_app$k (fun_app$l (uvj$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_prod$ ))(! (= (fun_app$k (fun_app$n (uvn$ ?v0 )?v1 )?v2 )(fun_app$k (fun_app$n (case_prod$f ?v0 )?v2 )?v1 )):pattern ((fun_app$k (fun_app$n (uvn$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v1 B_a_llist_c_prod_fun$ )(?v2 A_llist_b_prod$ ))(! (= (fun_app$o (fun_app$p (uvm$ ?v0 )?v1 )?v2 )(fun_app$q (case_prod$g ?v0 ?v2 )?v1 )):pattern ((fun_app$o (fun_app$p (uvm$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ )(?v2 B_a_llist_c_prod_fun$ ))(! (= (fun_app$q (fun_app$r (fun_app$s uub$ ?v0 )?v1 )?v2 )(apfst$ (lappend$ ?v0 )(fun_app$t ?v2 ?v1 ))):pattern ((fun_app$q (fun_app$r (fun_app$s uub$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v1 A_llist_c_prod$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$u (fun_app$v (uuj$ ?v0 ?v1 )?v2 )?v3 )(fun_app$h (fun_app$f (fun_app$g ?v0 ?v2 )?v3 )?v1 )):pattern ((fun_app$u (fun_app$v (uuj$ ?v0 ?v1 )?v2 )?v3 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_c_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$u (fun_app$v (uug$ ?v0 ?v1 )?v2 )?v3 )(fun_app$k (fun_app$w (fun_app$x ?v0 ?v2 )?v3 )?v1 )):pattern ((fun_app$u (fun_app$v (uug$ ?v0 ?v1 )?v2 )?v3 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_c_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v1 B_a_llist_c_prod_fun$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$y (fun_app$z (uuh$ ?v0 ?v1 )?v2 )?v3 )(fun_app$q (fun_app$aa (fun_app$ab ?v0 ?v2 )?v3 )?v1 )):pattern ((fun_app$y (fun_app$z (uuh$ ?v0 ?v1 )?v2 )?v3 )))):named a13 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_c_prod_bool_fun_fun_fun$ )(?v1 A_llist_c_prod$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ac (fun_app$ad (uui$ ?v0 ?v1 )?v2 )?v3 )(fun_app$h (fun_app$ae (fun_app$af ?v0 ?v2 )?v3 )?v1 )):pattern ((fun_app$ac (fun_app$ad (uui$ ?v0 ?v1 )?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ac (fun_app$ad (uul$ ?v0 ?v1 )?v2 )?v3 )(fun_app$k (fun_app$d (fun_app$e ?v0 ?v2 )?v3 )?v1 )):pattern ((fun_app$ac (fun_app$ad (uul$ ?v0 ?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v1 B_a_llist_c_prod_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$t (fun_app$ag (fun_app$ah (uuk$ ?v0 )?v1 )?v2 )?v3 )(fun_app$q (fun_app$r (fun_app$s ?v0 ?v2 )?v3 )?v1 )):pattern ((fun_app$t (fun_app$ag (fun_app$ah (uuk$ ?v0 )?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_c_prod_bool_fun$ )(?v1 A_llist_c_prod_bool_fun$ )(?v2 Bool )(?v3 A_llist_c_prod$ ))(! (= (fun_app$h (fun_app$ai (fun_app$aj (uvq$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$h ?v0 ?v3 )(fun_app$h ?v1 ?v3 ))):pattern ((fun_app$h (fun_app$ai (fun_app$aj (uvq$ ?v0 )?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_c_prod_fun$ )(?v1 A_llist_b_prod_a_llist_c_prod_fun$ )(?v2 Bool )(?v3 A_llist_b_prod$ ))(! (= (fun_app$o (fun_app$ak (fun_app$al (uvp$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$o ?v0 ?v3 )(fun_app$o ?v1 ?v3 ))):pattern ((fun_app$o (fun_app$ak (fun_app$al (uvp$ ?v0 )?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun$ )(?v1 A_llist_b_prod_bool_fun$ )(?v2 Bool )(?v3 A_llist_b_prod$ ))(! (= (fun_app$k (fun_app$am (fun_app$an (uvo$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$k ?v0 ?v3 )(fun_app$k ?v1 ?v3 ))):pattern ((fun_app$k (fun_app$am (fun_app$an (uvo$ ?v0 )?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$u (fun_app$v (uu$ ?v0 ?v1 )?v2 )?v3 )(and (= ?v0 ?v2 )(=> (lfinite$ ?v2 )(= ?v1 ?v3 )))):pattern ((fun_app$u (fun_app$v (uu$ ?v0 ?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ac (fun_app$ad (uuc$ ?v0 ?v1 )?v2 )?v3 )(and (= ?v0 ?v2 )(=> (lfinite$ ?v2 )(= ?v1 ?v3 )))):pattern ((fun_app$ac (fun_app$ad (uuc$ ?v0 ?v1 )?v2 )?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_c_a_b_tllist_fun_fun$ )(?v1 A_llist_b_a_llist_c_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$b (fun_app$c (uut$ ?v0 ?v1 )?v2 )?v3 )(case_prod$h ?v0 (fun_app$t (fun_app$ag ?v1 ?v2 )?v3 ))):pattern ((fun_app$b (fun_app$c (uut$ ?v0 ?v1 )?v2 )?v3 )))):named a22 ))
(assert (! (forall ((?v0 A_llist_c_bool_fun_fun$ )(?v1 A_llist_c_a_llist_c_prod_fun_fun$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$u (fun_app$v (uum$ ?v0 ?v1 )?v2 )?v3 )(fun_app$h (case_prod$a ?v0 )(fun_app$y (fun_app$z ?v1 ?v2 )?v3 ))):pattern ((fun_app$u (fun_app$v (uum$ ?v0 ?v1 )?v2 )?v3 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_c_bool_fun_fun$ )(?v1 A_llist_b_a_llist_c_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ac (fun_app$ad (uun$ ?v0 ?v1 )?v2 )?v3 )(fun_app$h (case_prod$a ?v0 )(fun_app$t (fun_app$ag ?v1 ?v2 )?v3 ))):pattern ((fun_app$ac (fun_app$ad (uun$ ?v0 ?v1 )?v2 )?v3 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v1 A_llist_c_a_llist_c_prod_fun_fun$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$f (fun_app$g (fun_app$ao (uuq$ ?v0 )?v1 )?v2 )?v3 )(fun_app$i (case_prod$b ?v0 )(fun_app$y (fun_app$z ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (fun_app$ao (uuq$ ?v0 )?v1 )?v2 )?v3 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_b_a_b_tllist_fun_fun$ )(?v1 A_llist_c_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$ap (fun_app$aq (uuu$ ?v0 ?v1 )?v2 )?v3 )(case_prod$i ?v0 (fun_app$ar (fun_app$as ?v1 ?v2 )?v3 ))):pattern ((fun_app$ap (fun_app$aq (uuu$ ?v0 ?v1 )?v2 )?v3 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_b_a_b_tllist_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$b (fun_app$c (uuv$ ?v0 ?v1 )?v2 )?v3 )(case_prod$i ?v0 (fun_app$at (fun_app$au ?v1 ?v2 )?v3 ))):pattern ((fun_app$b (fun_app$c (uuv$ ?v0 ?v1 )?v2 )?v3 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_c_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$u (fun_app$v (uuo$ ?v0 ?v1 )?v2 )?v3 )(fun_app$k (case_prod$ ?v0 )(fun_app$ar (fun_app$as ?v1 ?v2 )?v3 ))):pattern ((fun_app$u (fun_app$v (uuo$ ?v0 ?v1 )?v2 )?v3 )))):named a28 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ac (fun_app$ad (uup$ ?v0 ?v1 )?v2 )?v3 )(fun_app$k (case_prod$ ?v0 )(fun_app$at (fun_app$au ?v1 ?v2 )?v3 ))):pattern ((fun_app$ac (fun_app$ad (uup$ ?v0 ?v1 )?v2 )?v3 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (fun_app$av (uur$ ?v0 )?v1 )?v2 )?v3 )(fun_app$n (case_prod$f ?v0 )(fun_app$at (fun_app$au ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$av (uur$ ?v0 )?v1 )?v2 )?v3 )))):named a30 ))
(assert (! (forall ((?v0 A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$r (fun_app$s (uus$ ?v0 ?v1 )?v2 )?v3 )(case_prod$g ?v0 (fun_app$at (fun_app$au ?v1 ?v2 )?v3 ))):pattern ((fun_app$r (fun_app$s (uus$ ?v0 ?v1 )?v2 )?v3 )))):named a31 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_c_bool_fun_fun$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$u (fun_app$v (uue$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$u (fun_app$v ?v1 ?v2 )?v3 ))):pattern ((fun_app$u (fun_app$v (uue$ ?v0 ?v1 )?v2 )?v3 )))):named a32 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ac (fun_app$ad (uuf$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$ac (fun_app$ad ?v1 ?v2 )?v3 ))):pattern ((fun_app$ac (fun_app$ad (uuf$ ?v0 ?v1 )?v2 )?v3 )))):named a33 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_llist_c_bool_fun_fun$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$u (fun_app$v (uuw$ ?v0 ?v1 )?v2 )?v3 )(fun_app$aw ?v0 (fun_app$u (fun_app$v ?v1 ?v2 )?v3 ))):pattern ((fun_app$u (fun_app$v (uuw$ ?v0 ?v1 )?v2 )?v3 )))):named a34 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ac (fun_app$ad (uux$ ?v0 ?v1 )?v2 )?v3 )(fun_app$aw ?v0 (fun_app$ac (fun_app$ad ?v1 ?v2 )?v3 ))):pattern ((fun_app$ac (fun_app$ad (uux$ ?v0 ?v1 )?v2 )?v3 )))):named a35 ))
(assert (! (forall ((?v0 Bool_a_llist_c_prod_bool_fun_fun$ )(?v1 A_llist_c_bool_fun_fun$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$f (fun_app$g (fun_app$ax (uuz$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ai ?v0 (fun_app$u (fun_app$v ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (fun_app$ax (uuz$ ?v0 )?v1 )?v2 )?v3 )))):named a36 ))
(assert (! (forall ((?v0 Bool_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (fun_app$ay (uvb$ ?v0 )?v1 )?v2 )?v3 )(fun_app$am ?v0 (fun_app$ac (fun_app$ad ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$ay (uvb$ ?v0 )?v1 )?v2 )?v3 )))):named a37 ))
(assert (! (forall ((?v0 Bool_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$r (fun_app$s (uvf$ ?v0 ?v1 )?v2 )?v3 )(fun_app$az ?v0 (fun_app$ac (fun_app$ad ?v1 ?v2 )?v3 ))):pattern ((fun_app$r (fun_app$s (uvf$ ?v0 ?v1 )?v2 )?v3 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_c_prod_bool_fun_bool_fun$ )(?v1 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$u (fun_app$v (uuy$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ba ?v0 (fun_app$f (fun_app$g ?v1 ?v2 )?v3 ))):pattern ((fun_app$u (fun_app$v (uuy$ ?v0 ?v1 )?v2 )?v3 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_c_prod_bool_fun_a_llist_c_prod_bool_fun_fun$ )(?v1 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$f (fun_app$g (fun_app$bb (uvc$ ?v0 )?v1 )?v2 )?v3 )(fun_app$bc ?v0 (fun_app$f (fun_app$g ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (fun_app$bb (uvc$ ?v0 )?v1 )?v2 )?v3 )))):named a40 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun_bool_fun$ )(?v1 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ac (fun_app$ad (uva$ ?v0 ?v1 )?v2 )?v3 )(fun_app$bd ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$ac (fun_app$ad (uva$ ?v0 ?v1 )?v2 )?v3 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (fun_app$be (uve$ ?v0 )?v1 )?v2 )?v3 )(fun_app$bf ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$be (uve$ ?v0 )?v1 )?v2 )?v3 )))):named a42 ))
(assert (! (forall ((?v0 B_a_llist_c_prod_fun_a_llist_c_prod_fun_bool_fun$ )(?v1 A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ac (fun_app$ad (uvd$ ?v0 ?v1 )?v2 )?v3 )(fun_app$bg ?v0 (fun_app$r (fun_app$s ?v1 ?v2 )?v3 ))):pattern ((fun_app$ac (fun_app$ad (uvd$ ?v0 ?v1 )?v2 )?v3 )))):named a43 ))
(assert (! (not (fun_app$h (fun_app$i (case_prod$b uua$ )(fun_app$q (case_prod$g uub$ prod1$ )fun1$ ))(fun_app$q (case_prod$g uub$ prod2$ )fun2$ ))):named a44 ))
(assert (! (fun_app$k (fun_app$n (case_prod$f uud$ )prod1$ )prod2$ ):named a45 ))
(assert (! (forall ((?v0 B$ ))(fun_app$h (fun_app$i (case_prod$b uua$ )(fun_app$t fun1$ ?v0 ))(fun_app$t fun2$ ?v0 ))):named a46 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (lfinite$ (fun_app$bh (lappend$ ?v0 )?v1 ))(and (lfinite$ ?v0 )(lfinite$ ?v1 )))):named a47 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_c_bool_fun_fun$ )(?v2 A_llist_c_prod$ ))(= (fun_app$h (case_prod$a (uue$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$h (case_prod$a ?v1 )?v2 )))):named a48 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$k (case_prod$ (uuf$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$k (case_prod$ ?v1 )?v2 )))):named a49 ))
(assert (! (forall ((?v0 A_llist_c_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_c_prod$ )(?v2 A_llist_b_prod$ ))(= (fun_app$k (fun_app$l (case_prod$c ?v0 )?v1 )?v2 )(fun_app$h (case_prod$a (uug$ ?v0 ?v2 ))?v1 ))):named a50 ))
(assert (! (forall ((?v0 A_llist_c_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v1 A_llist_c_prod$ )(?v2 B_a_llist_c_prod_fun$ ))(= (case_prod$d ?v0 ?v1 ?v2 )(fun_app$m (case_prod$j (uuh$ ?v0 ?v2 ))?v1 ))):named a51 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_c_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_c_prod$ ))(= (fun_app$h (fun_app$j (case_prod$e ?v0 )?v1 )?v2 )(fun_app$k (case_prod$ (uui$ ?v0 ?v2 ))?v1 ))):named a52 ))
(assert (! (forall ((?v0 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v1 A_llist_c_prod$ )(?v2 A_llist_c_prod$ ))(= (fun_app$h (fun_app$i (case_prod$b ?v0 )?v1 )?v2 )(fun_app$h (case_prod$a (uuj$ ?v0 ?v2 ))?v1 ))):named a53 ))
(assert (! (forall ((?v0 A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 B_a_llist_c_prod_fun$ ))(= (fun_app$q (case_prod$g ?v0 ?v1 )?v2 )(fun_app$o (case_prod$k (fun_app$ah (uuk$ ?v0 )?v2 ))?v1 ))):named a54 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_prod$ ))(= (fun_app$k (fun_app$n (case_prod$f ?v0 )?v1 )?v2 )(fun_app$k (case_prod$ (uul$ ?v0 ?v2 ))?v1 ))):named a55 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (=> (not (lfinite$ ?v0 ))(= (fun_app$bh (lappend$ ?v0 )?v1 )?v0 )):pattern ((fun_app$bh (lappend$ ?v0 )?v1 )))):named a56 ))
(assert (! (reflp$ (case_prod$b uua$ )):named a57 ))
(assert (! (reflp$a (case_prod$f uud$ )):named a58 ))
(assert (! (forall ((?v0 A_llist_c_bool_fun_fun$ )(?v1 A_llist_c_a_llist_c_prod_fun_fun$ )(?v2 A_llist_c_prod$ ))(= (fun_app$h (case_prod$a ?v0 )(fun_app$m (case_prod$j ?v1 )?v2 ))(fun_app$h (case_prod$a (uum$ ?v0 ?v1 ))?v2 ))):named a59 ))
(assert (! (forall ((?v0 A_llist_c_bool_fun_fun$ )(?v1 A_llist_b_a_llist_c_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$h (case_prod$a ?v0 )(fun_app$o (case_prod$k ?v1 )?v2 ))(fun_app$k (case_prod$ (uun$ ?v0 ?v1 ))?v2 ))):named a60 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_c_a_llist_b_prod_fun_fun$ )(?v2 A_llist_c_prod$ ))(= (fun_app$k (case_prod$ ?v0 )(case_prod$l ?v1 ?v2 ))(fun_app$h (case_prod$a (uuo$ ?v0 ?v1 ))?v2 ))):named a61 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$k (case_prod$ ?v0 )(case_prod$m ?v1 ?v2 ))(fun_app$k (case_prod$ (uup$ ?v0 ?v1 ))?v2 ))):named a62 ))
(assert (! (forall ((?v0 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v1 A_llist_c_a_llist_c_prod_fun_fun$ )(?v2 A_llist_c_prod$ ))(= (fun_app$i (case_prod$b ?v0 )(fun_app$m (case_prod$j ?v1 )?v2 ))(fun_app$i (case_prod$b (fun_app$ao (uuq$ ?v0 )?v1 ))?v2 ))):named a63 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$n (case_prod$f ?v0 )(case_prod$m ?v1 ?v2 ))(fun_app$n (case_prod$f (fun_app$av (uur$ ?v0 )?v1 ))?v2 ))):named a64 ))
(assert (! (forall ((?v0 A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (case_prod$g ?v0 (case_prod$m ?v1 ?v2 ))(case_prod$g (uus$ ?v0 ?v1 )?v2 ))):named a65 ))
(assert (! (forall ((?v0 A_llist_c_a_b_tllist_fun_fun$ )(?v1 A_llist_b_a_llist_c_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (case_prod$h ?v0 (fun_app$o (case_prod$k ?v1 )?v2 ))(case_prod$i (uut$ ?v0 ?v1 )?v2 ))):named a66 ))
(assert (! (forall ((?v0 A_llist_b_a_b_tllist_fun_fun$ )(?v1 A_llist_c_a_llist_b_prod_fun_fun$ )(?v2 A_llist_c_prod$ ))(= (case_prod$i ?v0 (case_prod$l ?v1 ?v2 ))(case_prod$h (uuu$ ?v0 ?v1 )?v2 ))):named a67 ))
(assert (! (forall ((?v0 A_llist_b_a_b_tllist_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (case_prod$i ?v0 (case_prod$m ?v1 ?v2 ))(case_prod$i (uuv$ ?v0 ?v1 )?v2 ))):named a68 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_llist_c_bool_fun_fun$ )(?v2 A_llist_c_prod$ ))(= (fun_app$aw ?v0 (fun_app$h (case_prod$a ?v1 )?v2 ))(fun_app$h (case_prod$a (uuw$ ?v0 ?v1 ))?v2 ))):named a69 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$aw ?v0 (fun_app$k (case_prod$ ?v1 )?v2 ))(fun_app$k (case_prod$ (uux$ ?v0 ?v1 ))?v2 ))):named a70 ))
(assert (! (forall ((?v0 A_llist_c_prod_bool_fun_bool_fun$ )(?v1 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v2 A_llist_c_prod$ ))(= (fun_app$ba ?v0 (fun_app$i (case_prod$b ?v1 )?v2 ))(fun_app$h (case_prod$a (uuy$ ?v0 ?v1 ))?v2 ))):named a71 ))
(assert (! (forall ((?v0 Bool_a_llist_c_prod_bool_fun_fun$ )(?v1 A_llist_c_bool_fun_fun$ )(?v2 A_llist_c_prod$ ))(= (fun_app$ai ?v0 (fun_app$h (case_prod$a ?v1 )?v2 ))(fun_app$i (case_prod$b (fun_app$ax (uuz$ ?v0 )?v1 ))?v2 ))):named a72 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun_bool_fun$ )(?v1 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$bd ?v0 (fun_app$n (case_prod$f ?v1 )?v2 ))(fun_app$k (case_prod$ (uva$ ?v0 ?v1 ))?v2 ))):named a73 ))
(assert (! (forall ((?v0 Bool_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$am ?v0 (fun_app$k (case_prod$ ?v1 )?v2 ))(fun_app$n (case_prod$f (fun_app$ay (uvb$ ?v0 )?v1 ))?v2 ))):named a74 ))
(assert (! (forall ((?v0 A_llist_c_prod_bool_fun_a_llist_c_prod_bool_fun_fun$ )(?v1 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v2 A_llist_c_prod$ ))(= (fun_app$bc ?v0 (fun_app$i (case_prod$b ?v1 )?v2 ))(fun_app$i (case_prod$b (fun_app$bb (uvc$ ?v0 )?v1 ))?v2 ))):named a75 ))
(assert (! (forall ((?v0 B_a_llist_c_prod_fun_a_llist_c_prod_fun_bool_fun$ )(?v1 A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$bg ?v0 (case_prod$g ?v1 ?v2 ))(fun_app$k (case_prod$ (uvd$ ?v0 ?v1 ))?v2 ))):named a76 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$bf ?v0 (fun_app$n (case_prod$f ?v1 )?v2 ))(fun_app$n (case_prod$f (fun_app$be (uve$ ?v0 )?v1 ))?v2 ))):named a77 ))
(assert (! (forall ((?v0 Bool_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$az ?v0 (fun_app$k (case_prod$ ?v1 )?v2 ))(case_prod$g (uvf$ ?v0 ?v1 )?v2 ))):named a78 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(= (fun_app$bh (lappend$ (fun_app$bh (lappend$ ?v0 )?v1 ))?v2 )(fun_app$bh (lappend$ ?v0 )(fun_app$bh (lappend$ ?v1 )?v2 )))):named a79 ))
(assert (! (forall ((?v0 A_llist_c_prod$ )(?v1 A_llist_c_prod$ )(?v2 A_llist_c_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$h (case_prod$a ?v2 )?v0 )(fun_app$h (case_prod$a ?v2 )?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$k (case_prod$ ?v2 )?v0 )(fun_app$k (case_prod$ ?v2 )?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_llist_c_prod$ )(?v1 A_llist_c_prod$ )(?v2 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$i (case_prod$b ?v2 )?v0 )(fun_app$i (case_prod$b ?v2 )?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$n (case_prod$f ?v2 )?v0 )(fun_app$n (case_prod$f ?v2 )?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ ))(=> (= ?v0 ?v1 )(= (case_prod$g ?v2 ?v0 )(case_prod$g ?v2 ?v1 )))):named a84 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_a_b_tllist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (case_prod$i ?v2 ?v0 )(case_prod$i ?v2 ?v1 )))):named a85 ))
(assert (! (forall ((?v0 A_llist_c_prod$ )(?v1 A_llist_c_prod$ )(?v2 A_llist_c_a_llist_c_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$m (case_prod$j ?v2 )?v0 )(fun_app$m (case_prod$j ?v2 )?v1 )))):named a86 ))
(assert (! (forall ((?v0 A_llist_c_prod$ )(?v1 A_llist_c_prod$ )(?v2 A_llist_c_a_llist_b_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (case_prod$l ?v2 ?v0 )(case_prod$l ?v2 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_a_llist_c_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$o (case_prod$k ?v2 )?v0 )(fun_app$o (case_prod$k ?v2 )?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_a_llist_b_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (case_prod$m ?v2 ?v0 )(case_prod$m ?v2 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_llist_c_prod$ )(?v1 A_llist_c_prod$ ))(= (= (case_prod$n uvg$ ?v0 )(case_prod$n uvg$ ?v1 ))(fun_app$h (fun_app$i (case_prod$b uua$ )?v0 )?v1 ))):named a90 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_prod$ ))(= (= (case_prod$i uvh$ ?v0 )(case_prod$i uvh$ ?v1 ))(fun_app$k (fun_app$n (case_prod$f uud$ )?v0 )?v1 ))):named a91 ))
(assert (! (forall ((?v0 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v1 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v2 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v3 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v4 A_llist_c_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v5 B_a_llist_c_prod_fun$ ))(= (cont$ ?v0 ?v1 ?v2 ?v3 (uvi$ ?v4 ?v5 ))(cont$ ?v0 ?v1 ?v2 ?v3 (case_prod$j (uuh$ ?v4 ?v5 ))))):named a92 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_b_a_llist_c_prod_bool_fun_fun_fun$ )(?v5 A_llist_c_prod$ ))(= (fun_app$bd (fun_app$bi (fun_app$bj (fun_app$bk (cont$a ?v0 )?v1 )?v2 )?v3 )(fun_app$l (uvj$ ?v4 )?v5 ))(fun_app$bd (fun_app$bi (fun_app$bj (fun_app$bk (cont$a ?v0 )?v1 )?v2 )?v3 )(case_prod$ (uui$ ?v4 ?v5 ))))):named a93 ))
(assert (! (forall ((?v0 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v1 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_c_a_llist_b_prod_bool_fun_fun_fun$ )(?v5 A_llist_b_prod$ ))(= (fun_app$ba (fun_app$bl (fun_app$bm (fun_app$bn (cont$b ?v0 )?v1 )?v2 )?v3 )(fun_app$j (uvk$ ?v4 )?v5 ))(fun_app$ba (fun_app$bl (fun_app$bm (fun_app$bn (cont$b ?v0 )?v1 )?v2 )?v3 )(case_prod$a (uug$ ?v4 ?v5 ))))):named a94 ))
(assert (! (forall ((?v0 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v1 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v5 A_llist_c_prod$ ))(= (fun_app$ba (fun_app$bl (fun_app$bm (fun_app$bn (cont$b ?v0 )?v1 )?v2 )?v3 )(fun_app$i (uvl$ ?v4 )?v5 ))(fun_app$ba (fun_app$bl (fun_app$bm (fun_app$bn (cont$b ?v0 )?v1 )?v2 )?v3 )(case_prod$a (uuj$ ?v4 ?v5 ))))):named a95 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v3 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v4 A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v5 B_a_llist_c_prod_fun$ ))(= (cont$c ?v0 ?v1 ?v2 ?v3 (fun_app$p (uvm$ ?v4 )?v5 ))(cont$c ?v0 ?v1 ?v2 ?v3 (case_prod$k (fun_app$ah (uuk$ ?v4 )?v5 ))))):named a96 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v5 A_llist_b_prod$ ))(= (fun_app$bd (fun_app$bi (fun_app$bj (fun_app$bk (cont$a ?v0 )?v1 )?v2 )?v3 )(fun_app$n (uvn$ ?v4 )?v5 ))(fun_app$bd (fun_app$bi (fun_app$bj (fun_app$bk (cont$a ?v0 )?v1 )?v2 )?v3 )(case_prod$ (uul$ ?v4 ?v5 ))))):named a97 ))
(assert (! (forall ((?v0 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v1 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v2 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v3 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v4 A_llist_c_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v5 B_a_llist_c_prod_fun$ ))(=> (cont$ ?v0 ?v1 ?v2 ?v3 (case_prod$j (uuh$ ?v4 ?v5 )))(cont$ ?v0 ?v1 ?v2 ?v3 (uvi$ ?v4 ?v5 )))):named a98 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_b_a_llist_c_prod_bool_fun_fun_fun$ )(?v5 A_llist_c_prod$ ))(=> (fun_app$bd (fun_app$bi (fun_app$bj (fun_app$bk (cont$a ?v0 )?v1 )?v2 )?v3 )(case_prod$ (uui$ ?v4 ?v5 )))(fun_app$bd (fun_app$bi (fun_app$bj (fun_app$bk (cont$a ?v0 )?v1 )?v2 )?v3 )(fun_app$l (uvj$ ?v4 )?v5 )))):named a99 ))
(assert (! (forall ((?v0 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v1 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_c_a_llist_b_prod_bool_fun_fun_fun$ )(?v5 A_llist_b_prod$ ))(=> (fun_app$ba (fun_app$bl (fun_app$bm (fun_app$bn (cont$b ?v0 )?v1 )?v2 )?v3 )(case_prod$a (uug$ ?v4 ?v5 )))(fun_app$ba (fun_app$bl (fun_app$bm (fun_app$bn (cont$b ?v0 )?v1 )?v2 )?v3 )(fun_app$j (uvk$ ?v4 )?v5 )))):named a100 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v3 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v4 A_llist_b_b_a_llist_c_prod_fun_a_llist_c_prod_fun_fun_fun$ )(?v5 B_a_llist_c_prod_fun$ ))(=> (cont$c ?v0 ?v1 ?v2 ?v3 (case_prod$k (fun_app$ah (uuk$ ?v4 )?v5 )))(cont$c ?v0 ?v1 ?v2 ?v3 (fun_app$p (uvm$ ?v4 )?v5 )))):named a101 ))
(assert (! (forall ((?v0 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v1 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v5 A_llist_c_prod$ ))(=> (fun_app$ba (fun_app$bl (fun_app$bm (fun_app$bn (cont$b ?v0 )?v1 )?v2 )?v3 )(case_prod$a (uuj$ ?v4 ?v5 )))(fun_app$ba (fun_app$bl (fun_app$bm (fun_app$bn (cont$b ?v0 )?v1 )?v2 )?v3 )(fun_app$i (uvl$ ?v4 )?v5 )))):named a102 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v5 A_llist_b_prod$ ))(=> (fun_app$bd (fun_app$bi (fun_app$bj (fun_app$bk (cont$a ?v0 )?v1 )?v2 )?v3 )(case_prod$ (uul$ ?v4 ?v5 )))(fun_app$bd (fun_app$bi (fun_app$bj (fun_app$bk (cont$a ?v0 )?v1 )?v2 )?v3 )(fun_app$n (uvn$ ?v4 )?v5 )))):named a103 ))
(assert (! (forall ((?v0 B$ )(?v1 A_llist$ )(?v2 B$ )(?v3 A_llist$ ))(= (= (tllist_of_llist$a ?v0 ?v1 )(tllist_of_llist$a ?v2 ?v3 ))(and (= ?v1 ?v3 )(=> (lfinite$ ?v3 )(= ?v0 ?v2 ))))):named a104 ))
(assert (! (forall ((?v0 C$ )(?v1 A_llist$ )(?v2 C$ )(?v3 A_llist$ ))(= (= (tllist_of_llist$ ?v0 ?v1 )(tllist_of_llist$ ?v2 ?v3 ))(and (= ?v1 ?v3 )(=> (lfinite$ ?v3 )(= ?v0 ?v2 ))))):named a105 ))
(assert (! (forall ((?v0 A_b_tllist_bool_fun$ )(?v1 A_b_tllist$ ))(=> (forall ((?v2 A_llist_b_prod$ ))(fun_app$bo ?v0 (case_prod$i uvh$ ?v2 )))(fun_app$bo ?v0 ?v1 ))):named a106 ))
(assert (! (forall ((?v0 A_c_tllist_bool_fun$ )(?v1 A_c_tllist$ ))(=> (forall ((?v2 A_llist_c_prod$ ))(fun_app$bp ?v0 (case_prod$n uvg$ ?v2 )))(fun_app$bp ?v0 ?v1 ))):named a107 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_b_prod_bool_fun$ )(?v5 A_llist_b_prod_bool_fun$ )(?v6 Bool ))(=> (and (fun_app$bd (fun_app$bi (fun_app$bj (fun_app$bk (cont$a ?v0 )?v1 )?v2 )?v3 )?v4 )(fun_app$bd (fun_app$bi (fun_app$bj (fun_app$bk (cont$a ?v0 )?v1 )?v2 )?v3 )?v5 ))(fun_app$bd (fun_app$bi (fun_app$bj (fun_app$bk (cont$a ?v0 )?v1 )?v2 )?v3 )(fun_app$am (fun_app$an (uvo$ ?v4 )?v5 )?v6 )))):named a108 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v3 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v4 A_llist_b_prod_a_llist_c_prod_fun$ )(?v5 A_llist_b_prod_a_llist_c_prod_fun$ )(?v6 Bool ))(=> (and (cont$c ?v0 ?v1 ?v2 ?v3 ?v4 )(cont$c ?v0 ?v1 ?v2 ?v3 ?v5 ))(cont$c ?v0 ?v1 ?v2 ?v3 (fun_app$ak (fun_app$al (uvp$ ?v4 )?v5 )?v6 )))):named a109 ))
(assert (! (forall ((?v0 A_llist_c_prod_set_a_llist_c_prod_fun$ )(?v1 A_llist_c_prod_a_llist_c_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_c_prod_bool_fun$ )(?v5 A_llist_c_prod_bool_fun$ )(?v6 Bool ))(=> (and (fun_app$ba (fun_app$bl (fun_app$bm (fun_app$bn (cont$b ?v0 )?v1 )?v2 )?v3 )?v4 )(fun_app$ba (fun_app$bl (fun_app$bm (fun_app$bn (cont$b ?v0 )?v1 )?v2 )?v3 )?v5 ))(fun_app$ba (fun_app$bl (fun_app$bm (fun_app$bn (cont$b ?v0 )?v1 )?v2 )?v3 )(fun_app$ai (fun_app$aj (uvq$ ?v4 )?v5 )?v6 )))):named a110 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 B$ )(?v3 B$ ))(=> (and (= ?v0 ?v1 )(=> (lfinite$ ?v1 )(= ?v2 ?v3 )))(= (tllist_of_llist$a ?v2 ?v0 )(tllist_of_llist$a ?v3 ?v1 )))):named a111 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 C$ )(?v3 C$ ))(=> (and (= ?v0 ?v1 )(=> (lfinite$ ?v1 )(= ?v2 ?v3 )))(= (tllist_of_llist$ ?v2 ?v0 )(tllist_of_llist$ ?v3 ?v1 )))):named a112 ))
(check-sat )
(get-unsat-core )
