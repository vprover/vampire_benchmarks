(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort B_a_llist_b_prod_fun$ 0 )
(declare-sort A_llist_b_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_bool_fun$ 0 )
(declare-sort B_a_llist_llist_b_prod_fun$ 0 )
(declare-sort A_llist_llist_b_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_b_prod_bool_fun$ 0 )
(declare-sort B_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_a_llist_b_prod_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_b_prod_fun$ 0 )
(declare-sort B_a_llist_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_a_llist_llist_b_prod_fun_fun$ 0 )
(declare-sort A_llist_llist_b_a_llist_b_prod_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_llist_b_prod_fun$ 0 )
(declare-sort A_llist_llist_b_prod_a_llist_b_prod_fun$ 0 )
(declare-sort A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ 0 )
(declare-sort A_llist_llist_b_prod_a_llist_llist_b_prod_fun$ 0 )
(declare-sort A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_b_prod_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_a_llist_b_prod_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_llist_b_a_llist_b_prod_fun_fun_a_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_llist_b_a_llist_b_prod_fun_fun_a_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_llist_b_a_llist_llist_b_prod_fun_fun_a_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-sort A_llist_b_prod$ 0)
(declare-fun fst$ (A_llist_b_prod$)A_llist$)
(declare-fun snd$ (A_llist_b_prod$)B$)
(declare-fun pair$ (A_llist$ B$ )A_llist_b_prod$)
(declare-sort A_llist_llist$ 0)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-sort A_llist_llist_b_prod$ 0)
(declare-fun fst$a (A_llist_llist_b_prod$)A_llist_llist$)
(declare-fun snd$a (A_llist_llist_b_prod$)B$)
(declare-fun pair$a (A_llist_llist$ B$ )A_llist_llist_b_prod$)
(declare-fun b$ ()B$ )
(declare-fun uu$ (A_llist$ B$ )A_llist_b_bool_fun_fun$ )
(declare-fun uua$ ()A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun uub$ ()A_llist_llist_b_a_llist_b_prod_fun_fun$ )
(declare-fun uuc$ (A_llist_llist$ B$ )A_llist_llist_b_bool_fun_fun$ )
(declare-fun uud$ ()A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun uue$ (Bool A_llist_b_bool_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uuf$ (Bool A_llist_llist_b_bool_fun_fun$ )A_llist_llist_b_bool_fun_fun$ )
(declare-fun uug$ (A_llist_b_bool_fun_fun$ A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uuh$ (A_llist_b_bool_fun_fun$ A_llist_llist_b_a_llist_b_prod_fun_fun$ )A_llist_llist_b_bool_fun_fun$ )
(declare-fun uui$ (A_llist_llist_b_bool_fun_fun$ A_llist_b_a_llist_llist_b_prod_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uuj$ (A_llist_llist_b_bool_fun_fun$ A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )A_llist_llist_b_bool_fun_fun$ )
(declare-fun uuk$ (A_llist_b_a_llist_b_prod_fun_fun$ A_llist_llist_b_a_llist_b_prod_fun_fun$ )A_llist_llist_b_a_llist_b_prod_fun_fun$ )
(declare-fun uul$ (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_a_llist_b_prod_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ )
(declare-fun uum$ (A_llist_llist_b_a_llist_b_prod_fun_fun$ A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )A_llist_llist_b_a_llist_b_prod_fun_fun$ )
(declare-fun uun$ (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_llist_b_a_llist_b_prod_fun_fun_a_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ )
(declare-fun uuo$ (A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )A_llist_llist_b_a_llist_b_prod_fun_fun_a_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun_fun$ )
(declare-fun uup$ (A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )A_llist_llist_b_a_llist_llist_b_prod_fun_fun_a_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun_fun$ )
(declare-fun uuq$ ()A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )
(declare-fun uur$ ()A_llist_b_a_llist_b_prod_fun_fun$ )
(declare-fun uus$ (A_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun$ A_llist_b_prod$ )A_llist_llist_b_bool_fun_fun$ )
(declare-fun uut$ (A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ A_llist_llist_b_prod$ )A_llist_b_bool_fun_fun$ )
(declare-fun uuu$ (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ A_llist_b_prod$ )A_llist_b_bool_fun_fun$ )
(declare-fun uuv$ (A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ A_llist_llist_b_prod$ )A_llist_llist_b_bool_fun_fun$ )
(declare-fun uuw$ (A_llist_llist_b_prod_a_llist_llist_b_prod_fun$ )A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )
(declare-fun uux$ (A_llist_b_prod_a_llist_llist_b_prod_fun$ )A_llist_b_a_llist_llist_b_prod_fun_fun$ )
(declare-fun uuy$ (A_llist_b_prod_a_llist_b_prod_fun$ )A_llist_b_a_llist_b_prod_fun_fun$ )
(declare-fun uuz$ (A_llist_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )A_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun uva$ (A_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ )A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun uvb$ (A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun uvc$ (A_llist_b_prod_bool_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uvd$ (A_llist_llist_b_prod_a_llist_b_prod_fun$ )A_llist_llist_b_a_llist_b_prod_fun_fun$ )
(declare-fun uve$ (A_llist_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ )A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun uvf$ (A_llist_llist_b_prod_bool_fun$ )A_llist_llist_b_bool_fun_fun$ )
(declare-fun prod1$ ()A_llist_llist_b_prod$ )
(declare-fun prod2$ ()A_llist_llist_b_prod$ )
(declare-fun fun_app$ (B_a_llist_b_prod_fun$ B$ )A_llist_b_prod$ )
(declare-fun lconcat$ (A_llist_llist$ )A_llist$ )
(declare-fun lfinite$ (A_llist_llist$ )Bool )
(declare-fun fun_app$a (A_llist_llist_b_a_llist_b_prod_fun_fun$ A_llist_llist$ )B_a_llist_b_prod_fun$ )
(declare-fun fun_app$b (B_a_llist_llist_b_prod_fun$ B$ )A_llist_llist_b_prod$ )
(declare-fun fun_app$c (A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ A_llist_llist$ )B_a_llist_llist_b_prod_fun$ )
(declare-fun fun_app$d (A_llist_b_a_llist_b_prod_fun_fun$ A_llist$ )B_a_llist_b_prod_fun$ )
(declare-fun fun_app$e (B_a_llist_llist_b_prod_bool_fun_fun$ B$ )A_llist_llist_b_prod_bool_fun$ )
(declare-fun fun_app$f (A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ A_llist_llist$ )B_a_llist_llist_b_prod_bool_fun_fun$ )
(declare-fun fun_app$g (B_a_llist_b_prod_bool_fun_fun$ B$ )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$h (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ A_llist$ )B_a_llist_b_prod_bool_fun_fun$ )
(declare-fun fun_app$i (A_llist_llist_b_prod_a_llist_llist_b_prod_fun$ A_llist_llist_b_prod$ )A_llist_llist_b_prod$ )
(declare-fun fun_app$j (A_llist_llist_b_prod_a_llist_b_prod_fun$ A_llist_llist_b_prod$ )A_llist_b_prod$ )
(declare-fun fun_app$k (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$l (A_llist_llist_b_bool_fun_fun$ A_llist_llist$ )B_bool_fun$ )
(declare-fun fun_app$m (A_llist_llist_b_prod_bool_fun$ A_llist_llist_b_prod$ )Bool )
(declare-fun fun_app$n (A_llist_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ A_llist_llist_b_prod$ )A_llist_llist_b_prod_bool_fun$ )
(declare-fun fun_app$o (A_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun$ A_llist_llist$ )B_a_llist_b_prod_bool_fun_fun$ )
(declare-fun fun_app$p (A_llist_llist_b_prod_a_llist_b_prod_bool_fun_fun$ A_llist_llist_b_prod$ )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$q (A_llist_b_a_llist_llist_b_prod_fun_fun$ A_llist$ )B_a_llist_llist_b_prod_fun$ )
(declare-fun fun_app$r (A_llist_b_prod_a_llist_llist_b_prod_fun$ A_llist_b_prod$ )A_llist_llist_b_prod$ )
(declare-fun fun_app$s (A_llist_b_prod_a_llist_b_prod_fun$ A_llist_b_prod$ )A_llist_b_prod$ )
(declare-fun fun_app$t (A_llist_b_bool_fun_fun$ A_llist$ )B_bool_fun$ )
(declare-fun fun_app$u (A_llist_b_prod_bool_fun$ A_llist_b_prod$ )Bool )
(declare-fun fun_app$v (A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ A_llist$ )B_a_llist_llist_b_prod_bool_fun_fun$ )
(declare-fun fun_app$w (A_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ A_llist_b_prod$ )A_llist_llist_b_prod_bool_fun$ )
(declare-fun fun_app$x (A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ A_llist_b_prod$ )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$y (A_llist_llist_b_a_llist_llist_b_prod_fun_fun_a_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun_fun$ A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun fun_app$z (A_llist_llist_b_a_llist_b_prod_fun_fun_a_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun_fun$ A_llist_llist_b_a_llist_b_prod_fun_fun$ )A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun lfinite$a (A_llist$ )Bool )
(declare-fun case_prod$ (A_llist_llist_b_bool_fun_fun$ )A_llist_llist_b_prod_bool_fun$ )
(declare-fun fun_app$aa (A_llist_llist_b_a_llist_b_prod_fun_fun_a_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ A_llist_llist_b_a_llist_b_prod_fun_fun$ )A_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun fun_app$ab (A_llist_b_a_llist_b_prod_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun case_prod$a (A_llist_b_bool_fun_fun$ )A_llist_b_prod_bool_fun$ )
(declare-fun case_prod$b (A_llist_llist_b_a_llist_b_prod_fun_fun$ )A_llist_llist_b_prod_a_llist_b_prod_fun$ )
(declare-fun case_prod$c (A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )A_llist_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ )
(declare-fun case_prod$d (A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_prod_a_llist_b_prod_fun$ )
(declare-fun case_prod$e (A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ )
(declare-fun case_prod$f (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )
(declare-fun case_prod$g (A_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )
(declare-fun case_prod$h (A_llist_b_a_llist_llist_b_prod_fun_fun$ )A_llist_b_prod_a_llist_llist_b_prod_fun$ )
(declare-fun case_prod$i (A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )A_llist_llist_b_prod_a_llist_llist_b_prod_fun$ )
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 B$ ))(! (= (fun_app$ (fun_app$a uub$ ?v0 )?v1 )(pair$ (lconcat$ ?v0 )(ite (lfinite$ ?v0 )?v1 b$ ))):pattern ((fun_app$ (fun_app$a uub$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 B$ ))(! (= (fun_app$b (fun_app$c uuq$ ?v0 )?v1 )(pair$a ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uuq$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ ))(! (= (fun_app$ (fun_app$d uur$ ?v0 )?v1 )(pair$ ?v0 ?v1 )):pattern ((fun_app$ (fun_app$d uur$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 B$ ))(! (= (fun_app$e (fun_app$f uud$ ?v0 )?v1 )(case_prod$ (uuc$ ?v0 ?v1 ))):pattern ((fun_app$e (fun_app$f uud$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ ))(! (= (fun_app$g (fun_app$h uua$ ?v0 )?v1 )(case_prod$a (uu$ ?v0 ?v1 ))):pattern ((fun_app$g (fun_app$h uua$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod_a_llist_llist_b_prod_fun$ )(?v1 A_llist_llist$ )(?v2 B$ ))(! (= (fun_app$b (fun_app$c (uuw$ ?v0 )?v1 )?v2 )(fun_app$i ?v0 (pair$a ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$c (uuw$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod_a_llist_b_prod_fun$ )(?v1 A_llist_llist$ )(?v2 B$ ))(! (= (fun_app$ (fun_app$a (uvd$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 (pair$a ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$a (uvd$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod_bool_fun$ )(?v1 A_llist_llist$ )(?v2 B$ ))(! (= (fun_app$k (fun_app$l (uvf$ ?v0 )?v1 )?v2 )(fun_app$m ?v0 (pair$a ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$l (uvf$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B$ ))(! (= (fun_app$e (fun_app$f (uve$ ?v0 )?v1 )?v2 )(fun_app$n ?v0 (pair$a ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$f (uve$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B$ ))(! (= (fun_app$g (fun_app$o (uuz$ ?v0 )?v1 )?v2 )(fun_app$p ?v0 (pair$a ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$o (uuz$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_llist_b_prod_fun$ )(?v1 A_llist$ )(?v2 B$ ))(! (= (fun_app$b (fun_app$q (uux$ ?v0 )?v1 )?v2 )(fun_app$r ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$q (uux$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_fun$ )(?v1 A_llist$ )(?v2 B$ ))(! (= (fun_app$ (fun_app$d (uuy$ ?v0 )?v1 )?v2 )(fun_app$s ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$d (uuy$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun$ )(?v1 A_llist$ )(?v2 B$ ))(! (= (fun_app$k (fun_app$t (uvc$ ?v0 )?v1 )?v2 )(fun_app$u ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$t (uvc$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B$ ))(! (= (fun_app$e (fun_app$v (uva$ ?v0 )?v1 )?v2 )(fun_app$w ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$v (uva$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B$ ))(! (= (fun_app$g (fun_app$h (uvb$ ?v0 )?v1 )?v2 )(fun_app$x ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$h (uvb$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_prod$ )(?v2 A_llist_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$l (uuv$ ?v0 ?v1 )?v2 )?v3 )(fun_app$m (fun_app$e (fun_app$f ?v0 ?v2 )?v3 )?v1 )):pattern ((fun_app$k (fun_app$l (uuv$ ?v0 ?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$l (uus$ ?v0 ?v1 )?v2 )?v3 )(fun_app$u (fun_app$g (fun_app$o ?v0 ?v2 )?v3 )?v1 )):pattern ((fun_app$k (fun_app$l (uus$ ?v0 ?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_prod$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$t (uut$ ?v0 ?v1 )?v2 )?v3 )(fun_app$m (fun_app$e (fun_app$v ?v0 ?v2 )?v3 )?v1 )):pattern ((fun_app$k (fun_app$t (uut$ ?v0 ?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$t (uuu$ ?v0 ?v1 )?v2 )?v3 )(fun_app$u (fun_app$g (fun_app$h ?v0 ?v2 )?v3 )?v1 )):pattern ((fun_app$k (fun_app$t (uuu$ ?v0 ?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 B$ )(?v2 A_llist_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$l (uuc$ ?v0 ?v1 )?v2 )?v3 )(and (= ?v0 ?v2 )(=> (lfinite$ ?v2 )(= ?v1 ?v3 )))):pattern ((fun_app$k (fun_app$l (uuc$ ?v0 ?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$t (uu$ ?v0 ?v1 )?v2 )?v3 )(and (= ?v0 ?v2 )(=> (lfinite$a ?v2 )(= ?v1 ?v3 )))):pattern ((fun_app$k (fun_app$t (uu$ ?v0 ?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_b_prod_fun_fun$ )(?v1 A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )(?v2 A_llist_llist$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$a (uum$ ?v0 ?v1 )?v2 )?v3 )(fun_app$j (case_prod$b ?v0 )(fun_app$b (fun_app$c ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (uum$ ?v0 ?v1 )?v2 )?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist_b_bool_fun_fun$ )(?v1 A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )(?v2 A_llist_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$l (uuj$ ?v0 ?v1 )?v2 )?v3 )(fun_app$m (case_prod$ ?v0 )(fun_app$b (fun_app$c ?v1 ?v2 )?v3 ))):pattern ((fun_app$k (fun_app$l (uuj$ ?v0 ?v1 )?v2 )?v3 )))):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_b_bool_fun_fun$ )(?v1 A_llist_b_a_llist_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$t (uui$ ?v0 ?v1 )?v2 )?v3 )(fun_app$m (case_prod$ ?v0 )(fun_app$b (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$k (fun_app$t (uui$ ?v0 ?v1 )?v2 )?v3 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )(?v2 A_llist_llist$ )(?v3 B$ ))(! (= (fun_app$e (fun_app$f (fun_app$y (uup$ ?v0 )?v1 )?v2 )?v3 )(fun_app$n (case_prod$c ?v0 )(fun_app$b (fun_app$c ?v1 ?v2 )?v3 ))):pattern ((fun_app$e (fun_app$f (fun_app$y (uup$ ?v0 )?v1 )?v2 )?v3 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_fun_fun$ )(?v1 A_llist_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_llist$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$a (uuk$ ?v0 ?v1 )?v2 )?v3 )(fun_app$s (case_prod$d ?v0 )(fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (uuk$ ?v0 ?v1 )?v2 )?v3 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$l (uuh$ ?v0 ?v1 )?v2 )?v3 )(fun_app$u (case_prod$a ?v0 )(fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$k (fun_app$l (uuh$ ?v0 ?v1 )?v2 )?v3 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$t (uug$ ?v0 ?v1 )?v2 )?v3 )(fun_app$u (case_prod$a ?v0 )(fun_app$ (fun_app$d ?v1 ?v2 )?v3 ))):pattern ((fun_app$k (fun_app$t (uug$ ?v0 ?v1 )?v2 )?v3 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_llist$ )(?v3 B$ ))(! (= (fun_app$e (fun_app$f (fun_app$z (uuo$ ?v0 )?v1 )?v2 )?v3 )(fun_app$w (case_prod$e ?v0 )(fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$e (fun_app$f (fun_app$z (uuo$ ?v0 )?v1 )?v2 )?v3 )))):named a28 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_llist$ )(?v3 B$ ))(! (= (fun_app$g (fun_app$o (fun_app$aa (uun$ ?v0 )?v1 )?v2 )?v3 )(fun_app$x (case_prod$f ?v0 )(fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$g (fun_app$o (fun_app$aa (uun$ ?v0 )?v1 )?v2 )?v3 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$g (fun_app$h (fun_app$ab (uul$ ?v0 )?v1 )?v2 )?v3 )(fun_app$x (case_prod$f ?v0 )(fun_app$ (fun_app$d ?v1 ?v2 )?v3 ))):pattern ((fun_app$g (fun_app$h (fun_app$ab (uul$ ?v0 )?v1 )?v2 )?v3 )))):named a30 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_llist_b_bool_fun_fun$ )(?v2 A_llist_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$l (uuf$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$k (fun_app$l ?v1 ?v2 )?v3 ))):pattern ((fun_app$k (fun_app$l (uuf$ ?v0 ?v1 )?v2 )?v3 )))):named a31 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$k (fun_app$t (uue$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$k (fun_app$t ?v1 ?v2 )?v3 ))):pattern ((fun_app$k (fun_app$t (uue$ ?v0 ?v1 )?v2 )?v3 )))):named a32 ))
(assert (! (not (fun_app$u (fun_app$x (case_prod$f uua$ )(fun_app$j (case_prod$b uub$ )prod1$ ))(fun_app$j (case_prod$b uub$ )prod2$ ))):named a33 ))
(assert (! (fun_app$m (fun_app$n (case_prod$c uud$ )prod1$ )prod2$ ):named a34 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod$ )(?v1 A_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist_b_prod$ ))(=> (forall ((?v3 A_llist_llist$ )(?v4 B$ ))(=> (= (pair$a ?v3 ?v4 )?v0 )(fun_app$u (fun_app$g (fun_app$o ?v1 ?v3 )?v4 )?v2 )))(fun_app$u (fun_app$p (case_prod$g ?v1 )?v0 )?v2 ))):named a35 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist_llist_b_prod$ ))(=> (forall ((?v3 A_llist$ )(?v4 B$ ))(=> (= (pair$ ?v3 ?v4 )?v0 )(fun_app$m (fun_app$e (fun_app$v ?v1 ?v3 )?v4 )?v2 )))(fun_app$m (fun_app$w (case_prod$e ?v1 )?v0 )?v2 ))):named a36 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist_b_prod$ ))(=> (forall ((?v3 A_llist$ )(?v4 B$ ))(=> (= (pair$ ?v3 ?v4 )?v0 )(fun_app$u (fun_app$g (fun_app$h ?v1 ?v3 )?v4 )?v2 )))(fun_app$u (fun_app$x (case_prod$f ?v1 )?v0 )?v2 ))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod$ )(?v1 A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist_llist_b_prod$ ))(=> (forall ((?v3 A_llist_llist$ )(?v4 B$ ))(=> (= (pair$a ?v3 ?v4 )?v0 )(fun_app$m (fun_app$e (fun_app$f ?v1 ?v3 )?v4 )?v2 )))(fun_app$m (fun_app$n (case_prod$c ?v1 )?v0 )?v2 ))):named a38 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_bool_fun_fun$ ))(=> (forall ((?v2 A_llist$ )(?v3 B$ ))(=> (= ?v0 (pair$ ?v2 ?v3 ))(fun_app$k (fun_app$t ?v1 ?v2 )?v3 )))(fun_app$u (case_prod$a ?v1 )?v0 ))):named a39 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod$ )(?v1 A_llist_llist_b_bool_fun_fun$ ))(=> (forall ((?v2 A_llist_llist$ )(?v3 B$ ))(=> (= ?v0 (pair$a ?v2 ?v3 ))(fun_app$k (fun_app$l ?v1 ?v2 )?v3 )))(fun_app$m (case_prod$ ?v1 )?v0 ))):named a40 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B$ ))(=> (fun_app$k (fun_app$t ?v0 ?v1 )?v2 )(fun_app$u (case_prod$a ?v0 )(pair$ ?v1 ?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist_b_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B$ ))(=> (fun_app$k (fun_app$l ?v0 ?v1 )?v2 )(fun_app$m (case_prod$ ?v0 )(pair$a ?v1 ?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B$ ))(=> (fun_app$k (fun_app$t ?v0 ?v1 )?v2 )(fun_app$u (case_prod$a ?v0 )(pair$ ?v1 ?v2 )))):named a43 ))
(assert (! (forall ((?v0 A_llist_llist_b_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B$ ))(=> (fun_app$k (fun_app$l ?v0 ?v1 )?v2 )(fun_app$m (case_prod$ ?v0 )(pair$a ?v1 ?v2 )))):named a44 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$u (case_prod$a (uue$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$u (case_prod$a ?v1 )?v2 )))):named a45 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_llist_b_bool_fun_fun$ )(?v2 A_llist_llist_b_prod$ ))(= (fun_app$m (case_prod$ (uuf$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$m (case_prod$ ?v1 )?v2 )))):named a46 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$u (case_prod$a ?v0 )(fun_app$s (case_prod$d ?v1 )?v2 ))(fun_app$u (case_prod$a (uug$ ?v0 ?v1 ))?v2 ))):named a47 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_llist_b_prod$ ))(= (fun_app$u (case_prod$a ?v0 )(fun_app$j (case_prod$b ?v1 )?v2 ))(fun_app$m (case_prod$ (uuh$ ?v0 ?v1 ))?v2 ))):named a48 ))
(assert (! (forall ((?v0 A_llist_llist_b_bool_fun_fun$ )(?v1 A_llist_b_a_llist_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$m (case_prod$ ?v0 )(fun_app$r (case_prod$h ?v1 )?v2 ))(fun_app$u (case_prod$a (uui$ ?v0 ?v1 ))?v2 ))):named a49 ))
(assert (! (forall ((?v0 A_llist_llist_b_bool_fun_fun$ )(?v1 A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )(?v2 A_llist_llist_b_prod$ ))(= (fun_app$m (case_prod$ ?v0 )(fun_app$i (case_prod$i ?v1 )?v2 ))(fun_app$m (case_prod$ (uuj$ ?v0 ?v1 ))?v2 ))):named a50 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_fun_fun$ )(?v1 A_llist_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_llist_b_prod$ ))(= (fun_app$s (case_prod$d ?v0 )(fun_app$j (case_prod$b ?v1 )?v2 ))(fun_app$j (case_prod$b (uuk$ ?v0 ?v1 ))?v2 ))):named a51 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$x (case_prod$f ?v0 )(fun_app$s (case_prod$d ?v1 )?v2 ))(fun_app$x (case_prod$f (fun_app$ab (uul$ ?v0 )?v1 ))?v2 ))):named a52 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_b_prod_fun_fun$ )(?v1 A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )(?v2 A_llist_llist_b_prod$ ))(= (fun_app$j (case_prod$b ?v0 )(fun_app$i (case_prod$i ?v1 )?v2 ))(fun_app$j (case_prod$b (uum$ ?v0 ?v1 ))?v2 ))):named a53 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_llist_b_prod$ ))(= (fun_app$x (case_prod$f ?v0 )(fun_app$j (case_prod$b ?v1 )?v2 ))(fun_app$p (case_prod$g (fun_app$aa (uun$ ?v0 )?v1 ))?v2 ))):named a54 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_llist_b_prod$ ))(= (fun_app$w (case_prod$e ?v0 )(fun_app$j (case_prod$b ?v1 )?v2 ))(fun_app$n (case_prod$c (fun_app$z (uuo$ ?v0 )?v1 ))?v2 ))):named a55 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )(?v2 A_llist_llist_b_prod$ ))(= (fun_app$n (case_prod$c ?v0 )(fun_app$i (case_prod$i ?v1 )?v2 ))(fun_app$n (case_prod$c (fun_app$y (uup$ ?v0 )?v1 ))?v2 ))):named a56 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod$ ))(! (= (fun_app$i (case_prod$i uuq$ )?v0 )?v0 ):pattern ((fun_app$i (case_prod$i uuq$ )?v0 )))):named a57 ))
(assert (! (forall ((?v0 A_llist_b_prod$ ))(! (= (fun_app$s (case_prod$d uur$ )?v0 )?v0 ):pattern ((fun_app$s (case_prod$d uur$ )?v0 )))):named a58 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 B$ )(?v2 A_llist_llist$ )(?v3 B$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a59 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ )(?v2 A_llist$ )(?v3 B$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a60 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 B$ )(?v2 A_llist_llist$ )(?v3 B$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a61 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ )(?v2 A_llist$ )(?v3 B$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a62 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_prod$ )(?v2 A_llist_b_prod$ ))(= (fun_app$u (fun_app$p (case_prod$g ?v0 )?v1 )?v2 )(fun_app$m (case_prod$ (uus$ ?v0 ?v2 ))?v1 ))):named a63 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_llist_b_prod$ ))(= (fun_app$m (fun_app$w (case_prod$e ?v0 )?v1 )?v2 )(fun_app$u (case_prod$a (uut$ ?v0 ?v2 ))?v1 ))):named a64 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_prod$ ))(= (fun_app$u (fun_app$x (case_prod$f ?v0 )?v1 )?v2 )(fun_app$u (case_prod$a (uuu$ ?v0 ?v2 ))?v1 ))):named a65 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_prod$ )(?v2 A_llist_llist_b_prod$ ))(= (fun_app$m (fun_app$n (case_prod$c ?v0 )?v1 )?v2 )(fun_app$m (case_prod$ (uuv$ ?v0 ?v2 ))?v1 ))):named a66 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod_a_llist_llist_b_prod_fun$ ))(= (case_prod$i (uuw$ ?v0 ))?v0 )):named a67 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_llist_b_prod_fun$ ))(= (case_prod$h (uux$ ?v0 ))?v0 )):named a68 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_fun$ ))(= (case_prod$d (uuy$ ?v0 ))?v0 )):named a69 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod_a_llist_b_prod_bool_fun_fun$ ))(= (case_prod$g (uuz$ ?v0 ))?v0 )):named a70 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ ))(= (case_prod$e (uva$ ?v0 ))?v0 )):named a71 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ ))(= (case_prod$f (uvb$ ?v0 ))?v0 )):named a72 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun$ ))(= (case_prod$a (uvc$ ?v0 ))?v0 )):named a73 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod_a_llist_b_prod_fun$ ))(= (case_prod$b (uvd$ ?v0 ))?v0 )):named a74 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ ))(= (case_prod$c (uve$ ?v0 ))?v0 )):named a75 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod_bool_fun$ ))(= (case_prod$ (uvf$ ?v0 ))?v0 )):named a76 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_llist_b_prod_fun_fun$ )(?v1 A_llist_llist_b_prod_a_llist_llist_b_prod_fun$ ))(=> (forall ((?v2 A_llist_llist$ )(?v3 B$ ))(= (fun_app$b (fun_app$c ?v0 ?v2 )?v3 )(fun_app$i ?v1 (pair$a ?v2 ?v3 ))))(= (case_prod$i ?v0 )?v1 ))):named a77 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_llist_b_prod_fun_fun$ )(?v1 A_llist_b_prod_a_llist_llist_b_prod_fun$ ))(=> (forall ((?v2 A_llist$ )(?v3 B$ ))(= (fun_app$b (fun_app$q ?v0 ?v2 )?v3 )(fun_app$r ?v1 (pair$ ?v2 ?v3 ))))(= (case_prod$h ?v0 )?v1 ))):named a78 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_fun_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_fun$ ))(=> (forall ((?v2 A_llist$ )(?v3 B$ ))(= (fun_app$ (fun_app$d ?v0 ?v2 )?v3 )(fun_app$s ?v1 (pair$ ?v2 ?v3 ))))(= (case_prod$d ?v0 )?v1 ))):named a79 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_prod_a_llist_b_prod_bool_fun_fun$ ))(=> (forall ((?v2 A_llist_llist$ )(?v3 B$ ))(= (fun_app$g (fun_app$o ?v0 ?v2 )?v3 )(fun_app$p ?v1 (pair$a ?v2 ?v3 ))))(= (case_prod$g ?v0 )?v1 ))):named a80 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ ))(=> (forall ((?v2 A_llist$ )(?v3 B$ ))(= (fun_app$e (fun_app$v ?v0 ?v2 )?v3 )(fun_app$w ?v1 (pair$ ?v2 ?v3 ))))(= (case_prod$e ?v0 )?v1 ))):named a81 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ ))(=> (forall ((?v2 A_llist$ )(?v3 B$ ))(= (fun_app$g (fun_app$h ?v0 ?v2 )?v3 )(fun_app$x ?v1 (pair$ ?v2 ?v3 ))))(= (case_prod$f ?v0 )?v1 ))):named a82 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_b_prod_bool_fun$ ))(=> (forall ((?v2 A_llist$ )(?v3 B$ ))(= (fun_app$k (fun_app$t ?v0 ?v2 )?v3 )(fun_app$u ?v1 (pair$ ?v2 ?v3 ))))(= (case_prod$a ?v0 )?v1 ))):named a83 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_b_prod_fun_fun$ )(?v1 A_llist_llist_b_prod_a_llist_b_prod_fun$ ))(=> (forall ((?v2 A_llist_llist$ )(?v3 B$ ))(= (fun_app$ (fun_app$a ?v0 ?v2 )?v3 )(fun_app$j ?v1 (pair$a ?v2 ?v3 ))))(= (case_prod$b ?v0 )?v1 ))):named a84 ))
(assert (! (forall ((?v0 A_llist_llist_b_a_llist_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_llist_b_prod_a_llist_llist_b_prod_bool_fun_fun$ ))(=> (forall ((?v2 A_llist_llist$ )(?v3 B$ ))(= (fun_app$e (fun_app$f ?v0 ?v2 )?v3 )(fun_app$n ?v1 (pair$a ?v2 ?v3 ))))(= (case_prod$c ?v0 )?v1 ))):named a85 ))
(assert (! (forall ((?v0 A_llist_llist_b_bool_fun_fun$ )(?v1 A_llist_llist_b_prod_bool_fun$ ))(=> (forall ((?v2 A_llist_llist$ )(?v3 B$ ))(= (fun_app$k (fun_app$l ?v0 ?v2 )?v3 )(fun_app$m ?v1 (pair$a ?v2 ?v3 ))))(= (case_prod$ ?v0 )?v1 ))):named a86 ))
(assert (! (forall ((?v0 A_llist_llist_b_prod$ ))(exists ((?v1 A_llist_llist$ )(?v2 B$ ))(= ?v0 (pair$a ?v1 ?v2 )))):named a87 ))
(assert (! (forall ((?v0 A_llist_b_prod$ ))(exists ((?v1 A_llist$ )(?v2 B$ ))(= ?v0 (pair$ ?v1 ?v2 )))):named a88 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 B$ )(?v2 A_llist_llist$ )(?v3 B$ ))(=> (and (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a89 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ )(?v2 A_llist$ )(?v3 B$ ))(=> (and (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a90 ))
(check-sat )
(get-unsat-core )
