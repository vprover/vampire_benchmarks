(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort Bool_set_bool_fun$ 0 )
(declare-sort B_a_llist_b_prod_fun$ 0 )
(declare-sort A_llist_b_bool_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_bool_fun$ 0 )
(declare-sort Bool_a_llist_b_prod_fun$ 0 )
(declare-sort B_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_a_llist_b_prod_fun_fun$ 0 )
(declare-sort A_llist_b_prod_bool_fun_bool_fun$ 0 )
(declare-sort Bool_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_b_prod_fun$ 0 )
(declare-sort A_llist_b_prod_set_a_llist_b_prod_fun$ 0 )
(declare-sort A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_bool_fun_a_llist_b_prod_fun$ 0 )
(declare-sort A_llist_b_prod_bool_fun_a_llist_b_prod_bool_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_bool_fun_bool_a_llist_b_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_b_bool_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_b_a_llist_b_prod_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort Bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_b_a_llist_b_prod_bool_fun_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_llist_b_prod_bool_fun_fun_bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-sort A_llist_b_prod$ 0)
(declare-fun fst$ (A_llist_b_prod$)A_llist$)
(declare-fun snd$ (A_llist_b_prod$)B$)
(declare-fun pair$ (A_llist$ B$ )A_llist_b_prod$)
(declare-fun uu$ (A_llist$ B$ )A_llist_b_bool_fun_fun$ )
(declare-fun uua$ ()A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun uub$ (Bool A_llist_b_bool_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uuc$ (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ A_llist_b_prod$ )A_llist_b_bool_fun_fun$ )
(declare-fun uud$ (A_llist_b_a_llist_b_prod_fun_fun$ A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_a_llist_b_prod_fun_fun$ )
(declare-fun uue$ (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_a_llist_b_prod_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ )
(declare-fun uuf$ (A_llist_b_bool_fun_fun$ A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uug$ (A_llist_b_prod_bool_fun_a_llist_b_prod_fun$ A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_a_llist_b_prod_fun_fun$ )
(declare-fun uuh$ (Bool_a_llist_b_prod_fun$ A_llist_b_bool_fun_fun$ )A_llist_b_a_llist_b_prod_fun_fun$ )
(declare-fun uui$ (A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )A_llist_b_a_llist_b_prod_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ )
(declare-fun uuj$ (A_llist_b_prod_bool_fun$ A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uuk$ (A_llist_b_prod_a_llist_b_prod_fun$ A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_a_llist_b_prod_fun_fun$ )
(declare-fun uul$ (A_llist_b_prod_bool_fun_a_llist_b_prod_bool_fun_fun$ )A_llist_b_a_llist_b_prod_bool_fun_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ )
(declare-fun uum$ (A_llist_b_prod_bool_fun_bool_fun$ A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uun$ (Bool_a_llist_b_prod_bool_fun_fun$ )A_llist_b_bool_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ )
(declare-fun uuo$ (Bool_bool_fun$ A_llist_b_bool_fun_fun$ )A_llist_b_bool_fun_fun$ )
(declare-fun uup$ (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )
(declare-fun uuq$ (A_llist_b_prod_bool_fun$ )A_llist_b_prod_bool_fun_bool_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun cont$ (A_llist_b_prod_set_a_llist_b_prod_fun$ )A_llist_b_prod_a_llist_b_prod_bool_fun_fun_bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun_fun$ )
(declare-fun reflp$ (A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )Bool )
(declare-fun fun_app$ (B_a_llist_b_prod_bool_fun_fun$ B$ )A_llist_b_prod_bool_fun$ )
(declare-fun lfinite$ (A_llist$ )Bool )
(declare-fun fun_app$a (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ A_llist$ )B_a_llist_b_prod_bool_fun_fun$ )
(declare-fun fun_app$b (A_llist_b_prod_bool_fun$ A_llist_b_prod$ )Bool )
(declare-fun fun_app$c (A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ A_llist_b_prod$ )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$d (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$e (A_llist_b_bool_fun_fun$ A_llist$ )B_bool_fun$ )
(declare-fun fun_app$f (Bool_a_llist_b_prod_bool_fun_fun$ Bool )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$g (A_llist_b_prod_bool_fun_bool_a_llist_b_prod_bool_fun_fun_fun$ A_llist_b_prod_bool_fun$ )Bool_a_llist_b_prod_bool_fun_fun$ )
(declare-fun fun_app$h (B_a_llist_b_prod_fun$ B$ )A_llist_b_prod$ )
(declare-fun fun_app$i (A_llist_b_a_llist_b_prod_fun_fun$ A_llist$ )B_a_llist_b_prod_fun$ )
(declare-fun fun_app$j (A_llist_b_prod_a_llist_b_prod_fun$ A_llist_b_prod$ )A_llist_b_prod$ )
(declare-fun fun_app$k (A_llist_b_a_llist_b_prod_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun fun_app$l (Bool_a_llist_b_prod_fun$ Bool )A_llist_b_prod$ )
(declare-fun fun_app$m (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$n (A_llist_b_bool_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ A_llist_b_bool_fun_fun$ )A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun fun_app$o (A_llist_b_prod_bool_fun_a_llist_b_prod_fun$ A_llist_b_prod_bool_fun$ )A_llist_b_prod$ )
(declare-fun fun_app$p (A_llist_b_prod_bool_fun_bool_fun$ A_llist_b_prod_bool_fun$ )Bool )
(declare-fun fun_app$q (A_llist_b_a_llist_b_prod_bool_fun_fun_fun_a_llist_b_a_llist_b_prod_bool_fun_fun_fun_fun$ A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )
(declare-fun fun_app$r (A_llist_b_prod_bool_fun_a_llist_b_prod_bool_fun_fun$ A_llist_b_prod_bool_fun$ )A_llist_b_prod_bool_fun$ )
(declare-fun fun_app$s (Bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_b_prod_bool_fun_bool_fun$ )
(declare-fun fun_app$t (Bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun$ Bool_set_bool_fun$ )Bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun$ )
(declare-fun fun_app$u (A_llist_b_prod_a_llist_b_prod_bool_fun_fun_bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun_fun$ A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )Bool_set_bool_fun_bool_bool_bool_fun_fun_a_llist_b_prod_bool_fun_bool_fun_fun_fun$ )
(declare-fun case_prod$ (A_llist_b_bool_fun_fun$ )A_llist_b_prod_bool_fun$ )
(declare-fun case_prod$a (A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )
(declare-fun case_prod$b (A_llist_b_a_llist_b_prod_fun_fun$ )A_llist_b_prod_a_llist_b_prod_fun$ )
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ ))(! (= (fun_app$ (fun_app$a uua$ ?v0 )?v1 )(case_prod$ (uu$ ?v0 ?v1 ))):pattern ((fun_app$ (fun_app$a uua$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_prod$ ))(! (= (fun_app$b (fun_app$c (uup$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$c (case_prod$a ?v0 )?v2 )?v1 )):pattern ((fun_app$b (fun_app$c (uup$ ?v0 )?v1 )?v2 )))):named a1 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (uuc$ ?v0 ?v1 )?v2 )?v3 )(fun_app$b (fun_app$ (fun_app$a ?v0 ?v2 )?v3 )?v1 )):pattern ((fun_app$d (fun_app$e (uuc$ ?v0 ?v1 )?v2 )?v3 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun$ )(?v1 A_llist_b_prod_bool_fun$ )(?v2 Bool )(?v3 A_llist_b_prod$ ))(! (= (fun_app$b (fun_app$f (fun_app$g (uuq$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$b ?v0 ?v3 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$b (fun_app$f (fun_app$g (uuq$ ?v0 )?v1 )?v2 )?v3 )))):named a3 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (uu$ ?v0 ?v1 )?v2 )?v3 )(and (= ?v0 ?v2 )(=> (lfinite$ ?v2 )(= ?v1 ?v3 )))):pattern ((fun_app$d (fun_app$e (uu$ ?v0 ?v1 )?v2 )?v3 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$h (fun_app$i (uud$ ?v0 ?v1 )?v2 )?v3 )(fun_app$j (case_prod$b ?v0 )(fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (uud$ ?v0 ?v1 )?v2 )?v3 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (uuf$ ?v0 ?v1 )?v2 )?v3 )(fun_app$b (case_prod$ ?v0 )(fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (uuf$ ?v0 ?v1 )?v2 )?v3 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$a (fun_app$k (uue$ ?v0 )?v1 )?v2 )?v3 )(fun_app$c (case_prod$a ?v0 )(fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$k (uue$ ?v0 )?v1 )?v2 )?v3 )))):named a7 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (uub$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (uub$ ?v0 ?v1 )?v2 )?v3 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$h (fun_app$i (uuk$ ?v0 ?v1 )?v2 )?v3 )(fun_app$j ?v0 (fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (uuk$ ?v0 ?v1 )?v2 )?v3 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (uuj$ ?v0 ?v1 )?v2 )?v3 )(fun_app$b ?v0 (fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (uuj$ ?v0 ?v1 )?v2 )?v3 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$a (fun_app$k (uui$ ?v0 )?v1 )?v2 )?v3 )(fun_app$c ?v0 (fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$k (uui$ ?v0 )?v1 )?v2 )?v3 )))):named a11 ))
(assert (! (forall ((?v0 Bool_a_llist_b_prod_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$h (fun_app$i (uuh$ ?v0 ?v1 )?v2 )?v3 )(fun_app$l ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (uuh$ ?v0 ?v1 )?v2 )?v3 )))):named a12 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (uuo$ ?v0 ?v1 )?v2 )?v3 )(fun_app$m ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (uuo$ ?v0 ?v1 )?v2 )?v3 )))):named a13 ))
(assert (! (forall ((?v0 Bool_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$a (fun_app$n (uun$ ?v0 )?v1 )?v2 )?v3 )(fun_app$f ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$n (uun$ ?v0 )?v1 )?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun_a_llist_b_prod_fun$ )(?v1 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$h (fun_app$i (uug$ ?v0 ?v1 )?v2 )?v3 )(fun_app$o ?v0 (fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (uug$ ?v0 ?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun_bool_fun$ )(?v1 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (uum$ ?v0 ?v1 )?v2 )?v3 )(fun_app$p ?v0 (fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (uum$ ?v0 ?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$a (fun_app$q (uul$ ?v0 )?v1 )?v2 )?v3 )(fun_app$r ?v0 (fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$q (uul$ ?v0 )?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (not (reflp$ (case_prod$a uua$ ))):named a18 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$b (case_prod$ (uub$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$b (case_prod$ ?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_prod$ ))(= (fun_app$b (fun_app$c (case_prod$a ?v0 )?v1 )?v2 )(fun_app$b (case_prod$ (uuc$ ?v0 ?v2 ))?v1 ))):named a20 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$j (case_prod$b ?v0 )(fun_app$j (case_prod$b ?v1 )?v2 ))(fun_app$j (case_prod$b (uud$ ?v0 ?v1 ))?v2 ))):named a21 ))
(assert (! (forall ((?v0 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$c (case_prod$a ?v0 )(fun_app$j (case_prod$b ?v1 )?v2 ))(fun_app$c (case_prod$a (fun_app$k (uue$ ?v0 )?v1 ))?v2 ))):named a22 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$b (case_prod$ ?v0 )(fun_app$j (case_prod$b ?v1 )?v2 ))(fun_app$b (case_prod$ (uuf$ ?v0 ?v1 ))?v2 ))):named a23 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun_a_llist_b_prod_fun$ )(?v1 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$o ?v0 (fun_app$c (case_prod$a ?v1 )?v2 ))(fun_app$j (case_prod$b (uug$ ?v0 ?v1 ))?v2 ))):named a24 ))
(assert (! (forall ((?v0 Bool_a_llist_b_prod_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$l ?v0 (fun_app$b (case_prod$ ?v1 )?v2 ))(fun_app$j (case_prod$b (uuh$ ?v0 ?v1 ))?v2 ))):named a25 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$c ?v0 (fun_app$j (case_prod$b ?v1 )?v2 ))(fun_app$c (case_prod$a (fun_app$k (uui$ ?v0 )?v1 ))?v2 ))):named a26 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$b ?v0 (fun_app$j (case_prod$b ?v1 )?v2 ))(fun_app$b (case_prod$ (uuj$ ?v0 ?v1 ))?v2 ))):named a27 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_fun$ )(?v1 A_llist_b_a_llist_b_prod_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$j ?v0 (fun_app$j (case_prod$b ?v1 )?v2 ))(fun_app$j (case_prod$b (uuk$ ?v0 ?v1 ))?v2 ))):named a28 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$r ?v0 (fun_app$c (case_prod$a ?v1 )?v2 ))(fun_app$c (case_prod$a (fun_app$q (uul$ ?v0 )?v1 ))?v2 ))):named a29 ))
(assert (! (forall ((?v0 A_llist_b_prod_bool_fun_bool_fun$ )(?v1 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$p ?v0 (fun_app$c (case_prod$a ?v1 )?v2 ))(fun_app$b (case_prod$ (uum$ ?v0 ?v1 ))?v2 ))):named a30 ))
(assert (! (forall ((?v0 Bool_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$f ?v0 (fun_app$b (case_prod$ ?v1 )?v2 ))(fun_app$c (case_prod$a (fun_app$n (uun$ ?v0 )?v1 ))?v2 ))):named a31 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_llist_b_bool_fun_fun$ )(?v2 A_llist_b_prod$ ))(= (fun_app$m ?v0 (fun_app$b (case_prod$ ?v1 )?v2 ))(fun_app$b (case_prod$ (uuo$ ?v0 ?v1 ))?v2 ))):named a32 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ ))(= (reflp$ ?v0 )(forall ((?v1 A_llist_b_prod$ ))(fun_app$b (fun_app$c ?v0 ?v1 )?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ ))(=> (forall ((?v1 A_llist_b_prod$ ))(fun_app$b (fun_app$c ?v0 ?v1 )?v1 ))(reflp$ ?v0 ))):named a34 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_prod$ ))(=> (and (reflp$ ?v0 )(=> (fun_app$b (fun_app$c ?v0 ?v1 )?v1 )false ))false )):named a35 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v1 A_llist_b_prod$ ))(=> (reflp$ ?v0 )(fun_app$b (fun_app$c ?v0 ?v1 )?v1 ))):named a36 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_a_llist_b_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$j (case_prod$b ?v2 )?v0 )(fun_app$j (case_prod$b ?v2 )?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$c (case_prod$a ?v2 )?v0 )(fun_app$c (case_prod$a ?v2 )?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_b_prod$ )(?v1 A_llist_b_prod$ )(?v2 A_llist_b_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$b (case_prod$ ?v2 )?v0 )(fun_app$b (case_prod$ ?v2 )?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v5 A_llist_b_prod$ ))(= (fun_app$p (fun_app$s (fun_app$t (fun_app$u (cont$ ?v0 )?v1 )?v2 )?v3 )(fun_app$c (uup$ ?v4 )?v5 ))(fun_app$p (fun_app$s (fun_app$t (fun_app$u (cont$ ?v0 )?v1 )?v2 )?v3 )(case_prod$ (uuc$ ?v4 ?v5 ))))):named a40 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v5 A_llist_b_prod$ ))(=> (fun_app$p (fun_app$s (fun_app$t (fun_app$u (cont$ ?v0 )?v1 )?v2 )?v3 )(case_prod$ (uuc$ ?v4 ?v5 )))(fun_app$p (fun_app$s (fun_app$t (fun_app$u (cont$ ?v0 )?v1 )?v2 )?v3 )(fun_app$c (uup$ ?v4 )?v5 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_b_prod_bool_fun$ )(?v5 A_llist_b_prod_bool_fun$ )(?v6 Bool ))(=> (and (fun_app$p (fun_app$s (fun_app$t (fun_app$u (cont$ ?v0 )?v1 )?v2 )?v3 )?v4 )(fun_app$p (fun_app$s (fun_app$t (fun_app$u (cont$ ?v0 )?v1 )?v2 )?v3 )?v5 ))(fun_app$p (fun_app$s (fun_app$t (fun_app$u (cont$ ?v0 )?v1 )?v2 )?v3 )(fun_app$f (fun_app$g (uuq$ ?v4 )?v5 )?v6 )))):named a42 ))
(assert (! (forall ((?v0 A_llist_b_prod_set_a_llist_b_prod_fun$ )(?v1 A_llist_b_prod_a_llist_b_prod_bool_fun_fun$ )(?v2 Bool_set_bool_fun$ )(?v3 Bool_bool_bool_fun_fun$ )(?v4 A_llist_b_a_llist_b_prod_bool_fun_fun_fun$ )(?v5 A_llist_b_prod$ ))(=> (fun_app$p (fun_app$s (fun_app$t (fun_app$u (cont$ ?v0 )?v1 )?v2 )?v3 )(fun_app$c (uup$ ?v4 )?v5 ))(fun_app$p (fun_app$s (fun_app$t (fun_app$u (cont$ ?v0 )?v1 )?v2 )?v3 )(case_prod$ (uuc$ ?v4 ?v5 ))))):named a43 ))
(check-sat )
(get-unsat-core )
