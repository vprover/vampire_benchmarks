(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort E$ 0 )
(declare-sort F$ 0 )
(declare-sort C_set$ 0 )
(declare-sort D_set$ 0 )
(declare-sort E_set$ 0 )
(declare-sort F_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_c_fun$ 0 )
(declare-sort A_d_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort B_e_fun$ 0 )
(declare-sort B_f_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort C_e_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort D_f_fun$ 0 )
(declare-sort E_c_fun$ 0 )
(declare-sort E_e_fun$ 0 )
(declare-sort F_d_fun$ 0 )
(declare-sort F_f_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort E_bool_fun$ 0 )
(declare-sort F_bool_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_d_c_tllist_fun$ 0 )
(declare-sort B_f_e_tllist_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_e_bool_fun_fun$ 0 )
(declare-sort D_c_tllist_c_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort D_f_bool_fun_fun$ 0 )
(declare-sort E_c_bool_fun_fun$ 0 )
(declare-sort E_e_bool_fun_fun$ 0 )
(declare-sort F_d_bool_fun_fun$ 0 )
(declare-sort F_e_tllist_e_fun$ 0 )
(declare-sort F_f_bool_fun_fun$ 0 )
(declare-sort D_c_tllist_bool_fun$ 0 )
(declare-sort F_e_tllist_bool_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun$ 0 )
(declare-sort C_d_c_tllist_bool_fun_fun$ 0 )
(declare-sort D_d_c_tllist_bool_fun_fun$ 0 )
(declare-sort E_f_e_tllist_bool_fun_fun$ 0 )
(declare-sort F_f_e_tllist_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_d_c_tllist_fun_fun$ 0 )
(declare-sort B_b_fun_b_f_e_tllist_fun_fun$ 0 )
(declare-sort D_c_tllist_d_c_tllist_bool_fun_fun$ 0 )
(declare-sort D_c_tllist_f_e_tllist_bool_fun_fun$ 0 )
(declare-sort F_e_tllist_d_c_tllist_bool_fun_fun$ 0 )
(declare-sort F_e_tllist_f_e_tllist_bool_fun_fun$ 0 )
(declare-sort A_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun$ 0 )
(declare-sort B_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun$ 0 )
(declare-sort A_bool_fun_a_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun_fun$ 0 )
(declare-sort B_bool_fun_b_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun_fun$ 0 )
(declare-sort A_d_fun_a_bool_fun_a_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun_fun_fun$ 0 )
(declare-sort B_f_fun_b_bool_fun_b_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_d_fun_a_bool_fun_a_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun_fun_fun_fun$ 0 )
(declare-sort B_e_fun_b_f_fun_b_bool_fun_b_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun_fun_fun_fun$ 0 )
(declare-sort D_c_tllist$ 0)
(declare-sort F_e_tllist$ 0)
(declare-fun terminal$ (D_c_tllist$)C$)
(declare-fun tNil$ (C$ )D_c_tllist$)
(declare-fun thd$ (D_c_tllist$)D$)
(declare-fun ttl$ (D_c_tllist$)D_c_tllist$)
(declare-fun tCons$ (D$ D_c_tllist$ )D_c_tllist$)
(declare-fun terminal$a (F_e_tllist$)E$)
(declare-fun tNil$a (E$ )F_e_tllist$)
(declare-fun thd$a (F_e_tllist$)F$)
(declare-fun ttl$a (F_e_tllist$)F_e_tllist$)
(declare-fun tCons$a (F$ F_e_tllist$ )F_e_tllist$)
(declare-fun a$ ()A_b_bool_fun_fun$ )
(declare-fun b$ ()C_e_bool_fun_fun$ )
(declare-fun c$ ()D_f_bool_fun_fun$ )
(declare-fun x$ ()A$ )
(declare-fun y$ ()B$ )
(declare-fun uu$ ()Bool_bool_bool_fun_fun$ )
(declare-fun xa$ ()A$ )
(declare-fun ya$ ()B$ )
(declare-fun uua$ ()F_f_bool_fun_fun$ )
(declare-fun uub$ ()E_e_bool_fun_fun$ )
(declare-fun uuc$ ()F_e_tllist_f_e_tllist_bool_fun_fun$ )
(declare-fun uud$ ()D_d_bool_fun_fun$ )
(declare-fun uue$ ()C_c_bool_fun_fun$ )
(declare-fun uuf$ ()D_c_tllist_d_c_tllist_bool_fun_fun$ )
(declare-fun uug$ ()D_c_tllist_c_fun$ )
(declare-fun uuh$ ()F_e_tllist_e_fun$ )
(declare-fun uui$ (E_set$ )E_bool_fun$ )
(declare-fun uuj$ (C_set$ )C_bool_fun$ )
(declare-fun uuk$ (F_set$ )F_bool_fun$ )
(declare-fun uul$ (D_set$ )D_bool_fun$ )
(declare-fun tHD1$ ()A_d_fun$ )
(declare-fun tHD2$ ()B_f_fun$ )
(declare-fun tTL1$ ()A_a_fun$ )
(declare-fun tTL2$ ()B_b_fun$ )
(declare-fun tmap$ (D_d_fun$ C_c_fun$ D_c_tllist$ )D_c_tllist$ )
(declare-fun tset$ (D_c_tllist$ )D_set$ )
(declare-fun mORE1$ ()A_bool_fun$ )
(declare-fun mORE2$ ()B_bool_fun$ )
(declare-fun sTOP1$ ()A_d_c_tllist_fun$ )
(declare-fun sTOP2$ ()B_f_e_tllist_fun$ )
(declare-fun tmap$a (D_f_fun$ C_e_fun$ D_c_tllist$ )F_e_tllist$ )
(declare-fun tmap$b (F_d_fun$ E_c_fun$ F_e_tllist$ )D_c_tllist$ )
(declare-fun tmap$c (F_f_fun$ E_e_fun$ F_e_tllist$ )F_e_tllist$ )
(declare-fun tset$a (F_e_tllist$ )F_set$ )
(declare-fun member$ (F$ F_set$ )Bool )
(declare-fun collect$ (D_bool_fun$ )D_set$ )
(declare-fun fun_app$ (F_e_tllist_e_fun$ F_e_tllist$ )E$ )
(declare-fun is_TNil$ (D_c_tllist$ )Bool )
(declare-fun member$a (E$ E_set$ )Bool )
(declare-fun member$b (D$ D_set$ )Bool )
(declare-fun member$c (C$ C_set$ )Bool )
(declare-fun rel_fun$ (A_b_bool_fun_fun$ Bool_bool_bool_fun_fun$ A_bool_fun$ B_bool_fun$ )Bool )
(declare-fun collect$a (F_bool_fun$ )F_set$ )
(declare-fun collect$b (C_bool_fun$ )C_set$ )
(declare-fun collect$c (E_bool_fun$ )E_set$ )
(declare-fun fun_app$a (D_c_tllist_c_fun$ D_c_tllist$ )C$ )
(declare-fun fun_app$b (F_bool_fun$ F$ )Bool )
(declare-fun fun_app$c (E_bool_fun$ E$ )Bool )
(declare-fun fun_app$d (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$e (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$f (F_e_tllist_bool_fun$ F_e_tllist$ )Bool )
(declare-fun fun_app$g (F_e_tllist_f_e_tllist_bool_fun_fun$ F_e_tllist$ )F_e_tllist_bool_fun$ )
(declare-fun fun_app$h (D_c_tllist_bool_fun$ D_c_tllist$ )Bool )
(declare-fun fun_app$i (D_c_tllist_d_c_tllist_bool_fun_fun$ D_c_tllist$ )D_c_tllist_bool_fun$ )
(declare-fun fun_app$j (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$k (Bool_bool_bool_fun_fun$ Bool )Bool_bool_fun$ )
(declare-fun fun_app$l (F_f_bool_fun_fun$ F$ )F_bool_fun$ )
(declare-fun fun_app$m (E_e_bool_fun_fun$ E$ )E_bool_fun$ )
(declare-fun fun_app$n (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$o (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$p (A_d_c_tllist_fun$ A$ )D_c_tllist$ )
(declare-fun fun_app$q (A_a_fun_a_d_c_tllist_fun_fun$ A_a_fun$ )A_d_c_tllist_fun$ )
(declare-fun fun_app$r (A_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun$ A_d_c_tllist_fun$ )A_a_fun_a_d_c_tllist_fun_fun$ )
(declare-fun fun_app$s (A_bool_fun_a_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun_fun$ A_bool_fun$ )A_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun$ )
(declare-fun fun_app$t (A_d_fun_a_bool_fun_a_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun_fun_fun$ A_d_fun$ )A_bool_fun_a_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun_fun$ )
(declare-fun fun_app$u (A_c_fun_a_d_fun_a_bool_fun_a_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun_fun_fun_fun$ A_c_fun$ )A_d_fun_a_bool_fun_a_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun_fun_fun$ )
(declare-fun fun_app$v (B_f_e_tllist_fun$ B$ )F_e_tllist$ )
(declare-fun fun_app$w (B_b_fun_b_f_e_tllist_fun_fun$ B_b_fun$ )B_f_e_tllist_fun$ )
(declare-fun fun_app$x (B_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun$ B_f_e_tllist_fun$ )B_b_fun_b_f_e_tllist_fun_fun$ )
(declare-fun fun_app$y (B_bool_fun_b_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun_fun$ B_bool_fun$ )B_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun$ )
(declare-fun fun_app$z (B_f_fun_b_bool_fun_b_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun_fun_fun$ B_f_fun$ )B_bool_fun_b_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun_fun$ )
(declare-fun iS_TNIL1$ ()A_bool_fun$ )
(declare-fun iS_TNIL2$ ()B_bool_fun$ )
(declare-fun is_TNil$a (F_e_tllist$ )Bool )
(declare-fun rel_fun$a (A_b_bool_fun_fun$ A_b_bool_fun_fun$ A_a_fun$ B_b_fun$ )Bool )
(declare-fun rel_fun$b (A_b_bool_fun_fun$ C_e_bool_fun_fun$ A_c_fun$ B_e_fun$ )Bool )
(declare-fun rel_fun$c (A_b_bool_fun_fun$ D_f_bool_fun_fun$ A_d_fun$ B_f_fun$ )Bool )
(declare-fun rel_fun$d (A_b_bool_fun_fun$ D_c_tllist_f_e_tllist_bool_fun_fun$ A_d_c_tllist_fun$ B_f_e_tllist_fun$ )Bool )
(declare-fun fun_app$aa (B_e_fun_b_f_fun_b_bool_fun_b_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun_fun_fun_fun$ B_e_fun$ )B_f_fun_b_bool_fun_b_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun_fun_fun$ )
(declare-fun fun_app$ab (C_e_bool_fun_fun$ C$ )E_bool_fun$ )
(declare-fun fun_app$ac (D_f_bool_fun_fun$ D$ )F_bool_fun$ )
(declare-fun fun_app$ad (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$ae (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$af (D_c_tllist_f_e_tllist_bool_fun_fun$ D_c_tllist$ )F_e_tllist_bool_fun$ )
(declare-fun fun_app$ag (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$ah (F_e_tllist_d_c_tllist_bool_fun_fun$ F_e_tllist$ )D_c_tllist_bool_fun$ )
(declare-fun fun_app$ai (E_c_bool_fun_fun$ E$ )C_bool_fun$ )
(declare-fun fun_app$aj (F_d_bool_fun_fun$ F$ )D_bool_fun$ )
(declare-fun fun_app$ak (A_d_fun$ A$ )D$ )
(declare-fun fun_app$al (B_f_fun$ B$ )F$ )
(declare-fun fun_app$am (A_a_fun$ A$ )A$ )
(declare-fun fun_app$an (B_b_fun$ B$ )B$ )
(declare-fun fun_app$ao (A_c_fun$ A$ )C$ )
(declare-fun fun_app$ap (B_e_fun$ B$ )E$ )
(declare-fun fun_app$aq (C_d_c_tllist_bool_fun_fun$ C$ )D_c_tllist_bool_fun$ )
(declare-fun fun_app$ar (E_f_e_tllist_bool_fun_fun$ E$ )F_e_tllist_bool_fun$ )
(declare-fun fun_app$as (D_d_c_tllist_bool_fun_fun$ D$ )D_c_tllist_bool_fun$ )
(declare-fun fun_app$at (F_f_e_tllist_bool_fun_fun$ F$ )F_e_tllist_bool_fun$ )
(declare-fun fun_app$au (D_d_fun$ D$ )D$ )
(declare-fun fun_app$av (D_f_fun$ D$ )F$ )
(declare-fun fun_app$aw (F_d_fun$ F$ )D$ )
(declare-fun fun_app$ax (F_f_fun$ F$ )F$ )
(declare-fun tERMINAL1$ ()A_c_fun$ )
(declare-fun tERMINAL2$ ()B_e_fun$ )
(declare-fun terminal0$ ()D_c_tllist_c_fun$ )
(declare-fun terminal0$a ()F_e_tllist_e_fun$ )
(declare-fun set2_tllist$ (D_c_tllist$ )C_set$ )
(declare-fun tllist_all2$ (D_f_bool_fun_fun$ C_e_bool_fun_fun$ )D_c_tllist_f_e_tllist_bool_fun_fun$ )
(declare-fun corec_tllist$ (A_bool_fun$ )A_c_fun_a_d_fun_a_bool_fun_a_d_c_tllist_fun_a_a_fun_a_d_c_tllist_fun_fun_fun_fun_fun_fun$ )
(declare-fun set2_tllist$a (F_e_tllist$ )E_set$ )
(declare-fun tllist_all2$a (D_d_bool_fun_fun$ C_c_bool_fun_fun$ )D_c_tllist_d_c_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$b (F_d_bool_fun_fun$ E_c_bool_fun_fun$ )F_e_tllist_d_c_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$c (F_f_bool_fun_fun$ E_e_bool_fun_fun$ )F_e_tllist_f_e_tllist_bool_fun_fun$ )
(declare-fun corec_tllist$a (B_bool_fun$ )B_e_fun_b_f_fun_b_bool_fun_b_f_e_tllist_fun_b_b_fun_b_f_e_tllist_fun_fun_fun_fun_fun_fun$ )
(assert (! (forall ((?v0 F_e_tllist$ ))(! (= (fun_app$ uuh$ ?v0 )(terminal$a ?v0 )):pattern ((fun_app$ uuh$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 D_c_tllist$ ))(! (= (fun_app$a uug$ ?v0 )(terminal$ ?v0 )):pattern ((fun_app$a uug$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 F_set$ )(?v1 F$ ))(! (= (fun_app$b (uuk$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$b (uuk$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 E_set$ )(?v1 E$ ))(! (= (fun_app$c (uui$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$c (uui$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 D_set$ )(?v1 D$ ))(! (= (fun_app$d (uul$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$d (uul$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 C_set$ )(?v1 C$ ))(! (= (fun_app$e (uuj$ ?v0 )?v1 )(member$c ?v1 ?v0 )):pattern ((fun_app$e (uuj$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 F_e_tllist$ )(?v1 F_e_tllist$ ))(! (= (fun_app$f (fun_app$g uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uuc$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 D_c_tllist$ )(?v1 D_c_tllist$ ))(! (= (fun_app$h (fun_app$i uuf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uuf$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(! (= (fun_app$j (fun_app$k uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uu$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 F$ )(?v1 F$ ))(! (= (fun_app$b (fun_app$l uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$l uua$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 E$ )(?v1 E$ ))(! (= (fun_app$c (fun_app$m uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$c (fun_app$m uub$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (fun_app$d (fun_app$n uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$n uud$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$e (fun_app$o uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$e (fun_app$o uue$ ?v0 )?v1 )))):named a12 ))
(assert (! (not (and (= (is_TNil$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ iS_TNIL1$ )tERMINAL1$ )tHD1$ )mORE1$ )sTOP1$ )tTL1$ )xa$ ))(is_TNil$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a iS_TNIL2$ )tERMINAL2$ )tHD2$ )mORE2$ )sTOP2$ )tTL2$ )ya$ )))(and (=> (and (is_TNil$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ iS_TNIL1$ )tERMINAL1$ )tHD1$ )mORE1$ )sTOP1$ )tTL1$ )xa$ ))(is_TNil$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a iS_TNIL2$ )tERMINAL2$ )tHD2$ )mORE2$ )sTOP2$ )tTL2$ )ya$ )))(fun_app$c (fun_app$ab b$ (terminal$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ iS_TNIL1$ )tERMINAL1$ )tHD1$ )mORE1$ )sTOP1$ )tTL1$ )xa$ )))(terminal$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a iS_TNIL2$ )tERMINAL2$ )tHD2$ )mORE2$ )sTOP2$ )tTL2$ )ya$ ))))(=> (and (not (is_TNil$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ iS_TNIL1$ )tERMINAL1$ )tHD1$ )mORE1$ )sTOP1$ )tTL1$ )xa$ )))(not (is_TNil$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a iS_TNIL2$ )tERMINAL2$ )tHD2$ )mORE2$ )sTOP2$ )tTL2$ )ya$ ))))(and (fun_app$b (fun_app$ac c$ (thd$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ iS_TNIL1$ )tERMINAL1$ )tHD1$ )mORE1$ )sTOP1$ )tTL1$ )xa$ )))(thd$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a iS_TNIL2$ )tERMINAL2$ )tHD2$ )mORE2$ )sTOP2$ )tTL2$ )ya$ )))(or (exists ((?v0 A$ )(?v1 B$ ))(and (= (ttl$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ iS_TNIL1$ )tERMINAL1$ )tHD1$ )mORE1$ )sTOP1$ )tTL1$ )xa$ ))(fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ iS_TNIL1$ )tERMINAL1$ )tHD1$ )mORE1$ )sTOP1$ )tTL1$ )?v0 ))(and (= (ttl$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a iS_TNIL2$ )tERMINAL2$ )tHD2$ )mORE2$ )sTOP2$ )tTL2$ )ya$ ))(fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a iS_TNIL2$ )tERMINAL2$ )tHD2$ )mORE2$ )sTOP2$ )tTL2$ )?v1 ))(fun_app$ad (fun_app$ae a$ ?v0 )?v1 ))))(fun_app$f (fun_app$af (tllist_all2$ c$ b$ )(ttl$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ iS_TNIL1$ )tERMINAL1$ )tHD1$ )mORE1$ )sTOP1$ )tTL1$ )xa$ )))(ttl$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a iS_TNIL2$ )tERMINAL2$ )tHD2$ )mORE2$ )sTOP2$ )tTL2$ )ya$ ))))))))):named a13 ))
(assert (! (fun_app$ad (fun_app$ae a$ xa$ )ya$ ):named a14 ))
(assert (! (fun_app$ad (fun_app$ae a$ x$ )y$ ):named a15 ))
(assert (! (rel_fun$ a$ uu$ mORE1$ mORE2$ ):named a16 ))
(assert (! (rel_fun$ a$ uu$ iS_TNIL1$ iS_TNIL2$ ):named a17 ))
(assert (! (rel_fun$a a$ a$ tTL1$ tTL2$ ):named a18 ))
(assert (! (rel_fun$b a$ b$ tERMINAL1$ tERMINAL2$ ):named a19 ))
(assert (! (rel_fun$c a$ c$ tHD1$ tHD2$ ):named a20 ))
(assert (! (rel_fun$d a$ (tllist_all2$ c$ b$ )sTOP1$ sTOP2$ ):named a21 ))
(assert (! (forall ((?v0 D_c_tllist$ ))(= (terminal$ (ttl$ ?v0 ))(terminal$ ?v0 ))):named a22 ))
(assert (! (forall ((?v0 F_e_tllist$ ))(= (terminal$a (ttl$a ?v0 ))(terminal$a ?v0 ))):named a23 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_c_fun$ )(?v2 A_d_fun$ )(?v3 A_bool_fun$ )(?v4 A_d_c_tllist_fun$ )(?v5 A_a_fun$ )(?v6 A$ ))(= (not (is_TNil$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ ?v0 )?v1 )?v2 )?v3 )?v4 )?v5 )?v6 )))(not (fun_app$ag ?v0 ?v6 )))):named a24 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_e_fun$ )(?v2 B_f_fun$ )(?v3 B_bool_fun$ )(?v4 B_f_e_tllist_fun$ )(?v5 B_b_fun$ )(?v6 B$ ))(= (not (is_TNil$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a ?v0 )?v1 )?v2 )?v3 )?v4 )?v5 )?v6 )))(not (fun_app$ad ?v0 ?v6 )))):named a25 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_c_fun$ )(?v2 A_d_fun$ )(?v3 A_bool_fun$ )(?v4 A_d_c_tllist_fun$ )(?v5 A_a_fun$ )(?v6 A$ ))(= (is_TNil$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ ?v0 )?v1 )?v2 )?v3 )?v4 )?v5 )?v6 ))(fun_app$ag ?v0 ?v6 ))):named a26 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_e_fun$ )(?v2 B_f_fun$ )(?v3 B_bool_fun$ )(?v4 B_f_e_tllist_fun$ )(?v5 B_b_fun$ )(?v6 B$ ))(= (is_TNil$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a ?v0 )?v1 )?v2 )?v3 )?v4 )?v5 )?v6 ))(fun_app$ad ?v0 ?v6 ))):named a27 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 D_c_tllist$ ))(= (fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (= (is_TNil$ ?v2 )(is_TNil$ ?v3 ))(and (=> (and (is_TNil$ ?v2 )(is_TNil$ ?v3 ))(fun_app$e (fun_app$o ?v1 (terminal$ ?v2 ))(terminal$ ?v3 )))(=> (and (not (is_TNil$ ?v2 ))(not (is_TNil$ ?v3 )))(and (fun_app$d (fun_app$n ?v0 (thd$ ?v2 ))(thd$ ?v3 ))(fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )(ttl$ ?v2 ))(ttl$ ?v3 )))))))):named a28 ))
(assert (! (forall ((?v0 F_d_bool_fun_fun$ )(?v1 E_c_bool_fun_fun$ )(?v2 F_e_tllist$ )(?v3 D_c_tllist$ ))(= (fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(and (= (is_TNil$a ?v2 )(is_TNil$ ?v3 ))(and (=> (and (is_TNil$a ?v2 )(is_TNil$ ?v3 ))(fun_app$e (fun_app$ai ?v1 (terminal$a ?v2 ))(terminal$ ?v3 )))(=> (and (not (is_TNil$a ?v2 ))(not (is_TNil$ ?v3 )))(and (fun_app$d (fun_app$aj ?v0 (thd$a ?v2 ))(thd$ ?v3 ))(fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )(ttl$a ?v2 ))(ttl$ ?v3 )))))))):named a29 ))
(assert (! (forall ((?v0 F_f_bool_fun_fun$ )(?v1 E_e_bool_fun_fun$ )(?v2 F_e_tllist$ )(?v3 F_e_tllist$ ))(= (fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(and (= (is_TNil$a ?v2 )(is_TNil$a ?v3 ))(and (=> (and (is_TNil$a ?v2 )(is_TNil$a ?v3 ))(fun_app$c (fun_app$m ?v1 (terminal$a ?v2 ))(terminal$a ?v3 )))(=> (and (not (is_TNil$a ?v2 ))(not (is_TNil$a ?v3 )))(and (fun_app$b (fun_app$l ?v0 (thd$a ?v2 ))(thd$a ?v3 ))(fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )(ttl$a ?v2 ))(ttl$a ?v3 )))))))):named a30 ))
(assert (! (forall ((?v0 D_f_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 F_e_tllist$ ))(= (fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )?v2 )?v3 )(and (= (is_TNil$ ?v2 )(is_TNil$a ?v3 ))(and (=> (and (is_TNil$ ?v2 )(is_TNil$a ?v3 ))(fun_app$c (fun_app$ab ?v1 (terminal$ ?v2 ))(terminal$a ?v3 )))(=> (and (not (is_TNil$ ?v2 ))(not (is_TNil$a ?v3 )))(and (fun_app$b (fun_app$ac ?v0 (thd$ ?v2 ))(thd$a ?v3 ))(fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )(ttl$ ?v2 ))(ttl$a ?v3 )))))))):named a31 ))
(assert (! (= (tllist_all2$c uua$ uub$ )uuc$ ):named a32 ))
(assert (! (= (tllist_all2$a uud$ uue$ )uuf$ ):named a33 ))
(assert (! (forall ((?v0 D_c_tllist$ ))(=> (and (=> (is_TNil$ ?v0 )false )(=> (not (is_TNil$ ?v0 ))false ))false )):named a34 ))
(assert (! (forall ((?v0 F_e_tllist$ ))(=> (and (=> (is_TNil$a ?v0 )false )(=> (not (is_TNil$a ?v0 ))false ))false )):named a35 ))
(assert (! (forall ((?v0 D_c_tllist$ ))(=> (and (=> (is_TNil$ ?v0 )false )(=> (not (is_TNil$ ?v0 ))false ))false )):named a36 ))
(assert (! (forall ((?v0 F_e_tllist$ ))(=> (and (=> (is_TNil$a ?v0 )false )(=> (not (is_TNil$a ?v0 ))false ))false )):named a37 ))
(assert (! (forall ((?v0 F_f_bool_fun_fun$ )(?v1 E_e_bool_fun_fun$ )(?v2 F_e_tllist$ )(?v3 F_e_tllist$ )(?v4 F_f_bool_fun_fun$ )(?v5 E_e_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 F$ )(?v7 F$ ))(=> (fun_app$b (fun_app$l ?v0 ?v6 )?v7 )(fun_app$b (fun_app$l ?v4 ?v6 )?v7 )))(forall ((?v6 E$ )(?v7 E$ ))(=> (fun_app$c (fun_app$m ?v1 ?v6 )?v7 )(fun_app$c (fun_app$m ?v5 ?v6 )?v7 )))))(fun_app$f (fun_app$g (tllist_all2$c ?v4 ?v5 )?v2 )?v3 ))):named a38 ))
(assert (! (forall ((?v0 F_d_bool_fun_fun$ )(?v1 E_c_bool_fun_fun$ )(?v2 F_e_tllist$ )(?v3 D_c_tllist$ )(?v4 F_d_bool_fun_fun$ )(?v5 E_c_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 F$ )(?v7 D$ ))(=> (fun_app$d (fun_app$aj ?v0 ?v6 )?v7 )(fun_app$d (fun_app$aj ?v4 ?v6 )?v7 )))(forall ((?v6 E$ )(?v7 C$ ))(=> (fun_app$e (fun_app$ai ?v1 ?v6 )?v7 )(fun_app$e (fun_app$ai ?v5 ?v6 )?v7 )))))(fun_app$h (fun_app$ah (tllist_all2$b ?v4 ?v5 )?v2 )?v3 ))):named a39 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 D_c_tllist$ )(?v4 D_d_bool_fun_fun$ )(?v5 C_c_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 D$ )(?v7 D$ ))(=> (fun_app$d (fun_app$n ?v0 ?v6 )?v7 )(fun_app$d (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 C$ ))(=> (fun_app$e (fun_app$o ?v1 ?v6 )?v7 )(fun_app$e (fun_app$o ?v5 ?v6 )?v7 )))))(fun_app$h (fun_app$i (tllist_all2$a ?v4 ?v5 )?v2 )?v3 ))):named a40 ))
(assert (! (forall ((?v0 D_f_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 F_e_tllist$ )(?v4 D_f_bool_fun_fun$ )(?v5 C_e_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 D$ )(?v7 F$ ))(=> (fun_app$b (fun_app$ac ?v0 ?v6 )?v7 )(fun_app$b (fun_app$ac ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 E$ ))(=> (fun_app$c (fun_app$ab ?v1 ?v6 )?v7 )(fun_app$c (fun_app$ab ?v5 ?v6 )?v7 )))))(fun_app$f (fun_app$af (tllist_all2$ ?v4 ?v5 )?v2 )?v3 ))):named a41 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 D_c_tllist$ ))(=> (and (fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(or (not (is_TNil$ ?v2 ))(not (is_TNil$ ?v3 ))))(fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )(ttl$ ?v2 ))(ttl$ ?v3 )))):named a42 ))
(assert (! (forall ((?v0 F_d_bool_fun_fun$ )(?v1 E_c_bool_fun_fun$ )(?v2 F_e_tllist$ )(?v3 D_c_tllist$ ))(=> (and (fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(or (not (is_TNil$a ?v2 ))(not (is_TNil$ ?v3 ))))(fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )(ttl$a ?v2 ))(ttl$ ?v3 )))):named a43 ))
(assert (! (forall ((?v0 F_f_bool_fun_fun$ )(?v1 E_e_bool_fun_fun$ )(?v2 F_e_tllist$ )(?v3 F_e_tllist$ ))(=> (and (fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(or (not (is_TNil$a ?v2 ))(not (is_TNil$a ?v3 ))))(fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )(ttl$a ?v2 ))(ttl$a ?v3 )))):named a44 ))
(assert (! (forall ((?v0 D_f_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 F_e_tllist$ ))(=> (and (fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )?v2 )?v3 )(or (not (is_TNil$ ?v2 ))(not (is_TNil$a ?v3 ))))(fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )(ttl$ ?v2 ))(ttl$a ?v3 )))):named a45 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 D_c_tllist$ ))(=> (and (fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(or (not (is_TNil$ ?v2 ))(not (is_TNil$ ?v3 ))))(fun_app$d (fun_app$n ?v0 (thd$ ?v2 ))(thd$ ?v3 )))):named a46 ))
(assert (! (forall ((?v0 F_d_bool_fun_fun$ )(?v1 E_c_bool_fun_fun$ )(?v2 F_e_tllist$ )(?v3 D_c_tllist$ ))(=> (and (fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(or (not (is_TNil$a ?v2 ))(not (is_TNil$ ?v3 ))))(fun_app$d (fun_app$aj ?v0 (thd$a ?v2 ))(thd$ ?v3 )))):named a47 ))
(assert (! (forall ((?v0 F_f_bool_fun_fun$ )(?v1 E_e_bool_fun_fun$ )(?v2 F_e_tllist$ )(?v3 F_e_tllist$ ))(=> (and (fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(or (not (is_TNil$a ?v2 ))(not (is_TNil$a ?v3 ))))(fun_app$b (fun_app$l ?v0 (thd$a ?v2 ))(thd$a ?v3 )))):named a48 ))
(assert (! (forall ((?v0 D_f_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 F_e_tllist$ ))(=> (and (fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )?v2 )?v3 )(or (not (is_TNil$ ?v2 ))(not (is_TNil$a ?v3 ))))(fun_app$b (fun_app$ac ?v0 (thd$ ?v2 ))(thd$a ?v3 )))):named a49 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 D_c_tllist$ ))(=> (fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(= (is_TNil$ ?v2 )(is_TNil$ ?v3 )))):named a50 ))
(assert (! (forall ((?v0 F_d_bool_fun_fun$ )(?v1 E_c_bool_fun_fun$ )(?v2 F_e_tllist$ )(?v3 D_c_tllist$ ))(=> (fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(= (is_TNil$a ?v2 )(is_TNil$ ?v3 )))):named a51 ))
(assert (! (forall ((?v0 F_f_bool_fun_fun$ )(?v1 E_e_bool_fun_fun$ )(?v2 F_e_tllist$ )(?v3 F_e_tllist$ ))(=> (fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(= (is_TNil$a ?v2 )(is_TNil$a ?v3 )))):named a52 ))
(assert (! (forall ((?v0 D_f_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 F_e_tllist$ ))(=> (fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )?v2 )?v3 )(= (is_TNil$ ?v2 )(is_TNil$a ?v3 )))):named a53 ))
(assert (! (forall ((?v0 D_c_tllist$ )(?v1 D_c_tllist$ ))(=> (and (= (is_TNil$ ?v0 )(is_TNil$ ?v1 ))(and (=> (and (is_TNil$ ?v0 )(is_TNil$ ?v1 ))(= (terminal$ ?v0 )(terminal$ ?v1 )))(=> (and (not (is_TNil$ ?v0 ))(not (is_TNil$ ?v1 )))(and (= (thd$ ?v0 )(thd$ ?v1 ))(= (ttl$ ?v0 )(ttl$ ?v1 ))))))(= ?v0 ?v1 ))):named a54 ))
(assert (! (forall ((?v0 F_e_tllist$ )(?v1 F_e_tllist$ ))(=> (and (= (is_TNil$a ?v0 )(is_TNil$a ?v1 ))(and (=> (and (is_TNil$a ?v0 )(is_TNil$a ?v1 ))(= (terminal$a ?v0 )(terminal$a ?v1 )))(=> (and (not (is_TNil$a ?v0 ))(not (is_TNil$a ?v1 )))(and (= (thd$a ?v0 )(thd$a ?v1 ))(= (ttl$a ?v0 )(ttl$a ?v1 ))))))(= ?v0 ?v1 ))):named a55 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_c_fun$ )(?v3 A_d_fun$ )(?v4 A_bool_fun$ )(?v5 A_d_c_tllist_fun$ )(?v6 A_a_fun$ ))(=> (not (fun_app$ag ?v0 ?v1 ))(= (thd$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 ))(fun_app$ak ?v3 ?v1 )))):named a56 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_e_fun$ )(?v3 B_f_fun$ )(?v4 B_bool_fun$ )(?v5 B_f_e_tllist_fun$ )(?v6 B_b_fun$ ))(=> (not (fun_app$ad ?v0 ?v1 ))(= (thd$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 ))(fun_app$al ?v3 ?v1 )))):named a57 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_c_fun$ )(?v3 A_d_fun$ )(?v4 A_bool_fun$ )(?v5 A_d_c_tllist_fun$ )(?v6 A_a_fun$ ))(=> (not (fun_app$ag ?v0 ?v1 ))(= (ttl$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 ))(ite (fun_app$ag ?v4 ?v1 )(fun_app$p ?v5 ?v1 )(fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )(fun_app$am ?v6 ?v1 )))))):named a58 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_e_fun$ )(?v3 B_f_fun$ )(?v4 B_bool_fun$ )(?v5 B_f_e_tllist_fun$ )(?v6 B_b_fun$ ))(=> (not (fun_app$ad ?v0 ?v1 ))(= (ttl$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 ))(ite (fun_app$ad ?v4 ?v1 )(fun_app$v ?v5 ?v1 )(fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )(fun_app$an ?v6 ?v1 )))))):named a59 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_c_fun$ )(?v3 A_d_fun$ )(?v4 A_bool_fun$ )(?v5 A_d_c_tllist_fun$ )(?v6 A_a_fun$ ))(=> (not (fun_app$ag ?v0 ?v1 ))(not (is_TNil$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 ))))):named a60 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_e_fun$ )(?v3 B_f_fun$ )(?v4 B_bool_fun$ )(?v5 B_f_e_tllist_fun$ )(?v6 B_b_fun$ ))(=> (not (fun_app$ad ?v0 ?v1 ))(not (is_TNil$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 ))))):named a61 ))
(assert (! (forall ((?v0 D_c_tllist$ ))(=> (is_TNil$ ?v0 )(is_TNil$ (ttl$ ?v0 )))):named a62 ))
(assert (! (forall ((?v0 F_e_tllist$ ))(=> (is_TNil$a ?v0 )(is_TNil$a (ttl$a ?v0 )))):named a63 ))
(assert (! (forall ((?v0 D_c_tllist_d_c_tllist_bool_fun_fun$ )(?v1 D_c_tllist$ )(?v2 D_c_tllist$ )(?v3 C_c_bool_fun_fun$ )(?v4 D_d_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$i ?v0 ?v1 )?v2 )(forall ((?v5 D_c_tllist$ )(?v6 D_c_tllist$ ))(=> (fun_app$h (fun_app$i ?v0 ?v5 )?v6 )(and (= (is_TNil$ ?v5 )(is_TNil$ ?v6 ))(and (=> (and (is_TNil$ ?v5 )(is_TNil$ ?v6 ))(fun_app$e (fun_app$o ?v3 (terminal$ ?v5 ))(terminal$ ?v6 )))(=> (and (not (is_TNil$ ?v5 ))(not (is_TNil$ ?v6 )))(and (fun_app$d (fun_app$n ?v4 (thd$ ?v5 ))(thd$ ?v6 ))(or (fun_app$h (fun_app$i ?v0 (ttl$ ?v5 ))(ttl$ ?v6 ))(fun_app$h (fun_app$i (tllist_all2$a ?v4 ?v3 )(ttl$ ?v5 ))(ttl$ ?v6 ))))))))))(fun_app$h (fun_app$i (tllist_all2$a ?v4 ?v3 )?v1 )?v2 ))):named a64 ))
(assert (! (forall ((?v0 F_e_tllist_d_c_tllist_bool_fun_fun$ )(?v1 F_e_tllist$ )(?v2 D_c_tllist$ )(?v3 E_c_bool_fun_fun$ )(?v4 F_d_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$ah ?v0 ?v1 )?v2 )(forall ((?v5 F_e_tllist$ )(?v6 D_c_tllist$ ))(=> (fun_app$h (fun_app$ah ?v0 ?v5 )?v6 )(and (= (is_TNil$a ?v5 )(is_TNil$ ?v6 ))(and (=> (and (is_TNil$a ?v5 )(is_TNil$ ?v6 ))(fun_app$e (fun_app$ai ?v3 (terminal$a ?v5 ))(terminal$ ?v6 )))(=> (and (not (is_TNil$a ?v5 ))(not (is_TNil$ ?v6 )))(and (fun_app$d (fun_app$aj ?v4 (thd$a ?v5 ))(thd$ ?v6 ))(or (fun_app$h (fun_app$ah ?v0 (ttl$a ?v5 ))(ttl$ ?v6 ))(fun_app$h (fun_app$ah (tllist_all2$b ?v4 ?v3 )(ttl$a ?v5 ))(ttl$ ?v6 ))))))))))(fun_app$h (fun_app$ah (tllist_all2$b ?v4 ?v3 )?v1 )?v2 ))):named a65 ))
(assert (! (forall ((?v0 F_e_tllist_f_e_tllist_bool_fun_fun$ )(?v1 F_e_tllist$ )(?v2 F_e_tllist$ )(?v3 E_e_bool_fun_fun$ )(?v4 F_f_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v5 F_e_tllist$ )(?v6 F_e_tllist$ ))(=> (fun_app$f (fun_app$g ?v0 ?v5 )?v6 )(and (= (is_TNil$a ?v5 )(is_TNil$a ?v6 ))(and (=> (and (is_TNil$a ?v5 )(is_TNil$a ?v6 ))(fun_app$c (fun_app$m ?v3 (terminal$a ?v5 ))(terminal$a ?v6 )))(=> (and (not (is_TNil$a ?v5 ))(not (is_TNil$a ?v6 )))(and (fun_app$b (fun_app$l ?v4 (thd$a ?v5 ))(thd$a ?v6 ))(or (fun_app$f (fun_app$g ?v0 (ttl$a ?v5 ))(ttl$a ?v6 ))(fun_app$f (fun_app$g (tllist_all2$c ?v4 ?v3 )(ttl$a ?v5 ))(ttl$a ?v6 ))))))))))(fun_app$f (fun_app$g (tllist_all2$c ?v4 ?v3 )?v1 )?v2 ))):named a66 ))
(assert (! (forall ((?v0 D_c_tllist_f_e_tllist_bool_fun_fun$ )(?v1 D_c_tllist$ )(?v2 F_e_tllist$ )(?v3 C_e_bool_fun_fun$ )(?v4 D_f_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$af ?v0 ?v1 )?v2 )(forall ((?v5 D_c_tllist$ )(?v6 F_e_tllist$ ))(=> (fun_app$f (fun_app$af ?v0 ?v5 )?v6 )(and (= (is_TNil$ ?v5 )(is_TNil$a ?v6 ))(and (=> (and (is_TNil$ ?v5 )(is_TNil$a ?v6 ))(fun_app$c (fun_app$ab ?v3 (terminal$ ?v5 ))(terminal$a ?v6 )))(=> (and (not (is_TNil$ ?v5 ))(not (is_TNil$a ?v6 )))(and (fun_app$b (fun_app$ac ?v4 (thd$ ?v5 ))(thd$a ?v6 ))(or (fun_app$f (fun_app$af ?v0 (ttl$ ?v5 ))(ttl$a ?v6 ))(fun_app$f (fun_app$af (tllist_all2$ ?v4 ?v3 )(ttl$ ?v5 ))(ttl$a ?v6 ))))))))))(fun_app$f (fun_app$af (tllist_all2$ ?v4 ?v3 )?v1 )?v2 ))):named a67 ))
(assert (! (forall ((?v0 D_c_tllist_d_c_tllist_bool_fun_fun$ )(?v1 D_c_tllist$ )(?v2 D_c_tllist$ )(?v3 C_c_bool_fun_fun$ )(?v4 D_d_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$i ?v0 ?v1 )?v2 )(forall ((?v5 D_c_tllist$ )(?v6 D_c_tllist$ ))(=> (fun_app$h (fun_app$i ?v0 ?v5 )?v6 )(and (= (is_TNil$ ?v5 )(is_TNil$ ?v6 ))(and (=> (and (is_TNil$ ?v5 )(is_TNil$ ?v6 ))(fun_app$e (fun_app$o ?v3 (terminal$ ?v5 ))(terminal$ ?v6 )))(=> (and (not (is_TNil$ ?v5 ))(not (is_TNil$ ?v6 )))(and (fun_app$d (fun_app$n ?v4 (thd$ ?v5 ))(thd$ ?v6 ))(fun_app$h (fun_app$i ?v0 (ttl$ ?v5 ))(ttl$ ?v6 )))))))))(fun_app$h (fun_app$i (tllist_all2$a ?v4 ?v3 )?v1 )?v2 ))):named a68 ))
(assert (! (forall ((?v0 F_e_tllist_d_c_tllist_bool_fun_fun$ )(?v1 F_e_tllist$ )(?v2 D_c_tllist$ )(?v3 E_c_bool_fun_fun$ )(?v4 F_d_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$ah ?v0 ?v1 )?v2 )(forall ((?v5 F_e_tllist$ )(?v6 D_c_tllist$ ))(=> (fun_app$h (fun_app$ah ?v0 ?v5 )?v6 )(and (= (is_TNil$a ?v5 )(is_TNil$ ?v6 ))(and (=> (and (is_TNil$a ?v5 )(is_TNil$ ?v6 ))(fun_app$e (fun_app$ai ?v3 (terminal$a ?v5 ))(terminal$ ?v6 )))(=> (and (not (is_TNil$a ?v5 ))(not (is_TNil$ ?v6 )))(and (fun_app$d (fun_app$aj ?v4 (thd$a ?v5 ))(thd$ ?v6 ))(fun_app$h (fun_app$ah ?v0 (ttl$a ?v5 ))(ttl$ ?v6 )))))))))(fun_app$h (fun_app$ah (tllist_all2$b ?v4 ?v3 )?v1 )?v2 ))):named a69 ))
(assert (! (forall ((?v0 F_e_tllist_f_e_tllist_bool_fun_fun$ )(?v1 F_e_tllist$ )(?v2 F_e_tllist$ )(?v3 E_e_bool_fun_fun$ )(?v4 F_f_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v5 F_e_tllist$ )(?v6 F_e_tllist$ ))(=> (fun_app$f (fun_app$g ?v0 ?v5 )?v6 )(and (= (is_TNil$a ?v5 )(is_TNil$a ?v6 ))(and (=> (and (is_TNil$a ?v5 )(is_TNil$a ?v6 ))(fun_app$c (fun_app$m ?v3 (terminal$a ?v5 ))(terminal$a ?v6 )))(=> (and (not (is_TNil$a ?v5 ))(not (is_TNil$a ?v6 )))(and (fun_app$b (fun_app$l ?v4 (thd$a ?v5 ))(thd$a ?v6 ))(fun_app$f (fun_app$g ?v0 (ttl$a ?v5 ))(ttl$a ?v6 )))))))))(fun_app$f (fun_app$g (tllist_all2$c ?v4 ?v3 )?v1 )?v2 ))):named a70 ))
(assert (! (forall ((?v0 D_c_tllist_f_e_tllist_bool_fun_fun$ )(?v1 D_c_tllist$ )(?v2 F_e_tllist$ )(?v3 C_e_bool_fun_fun$ )(?v4 D_f_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$af ?v0 ?v1 )?v2 )(forall ((?v5 D_c_tllist$ )(?v6 F_e_tllist$ ))(=> (fun_app$f (fun_app$af ?v0 ?v5 )?v6 )(and (= (is_TNil$ ?v5 )(is_TNil$a ?v6 ))(and (=> (and (is_TNil$ ?v5 )(is_TNil$a ?v6 ))(fun_app$c (fun_app$ab ?v3 (terminal$ ?v5 ))(terminal$a ?v6 )))(=> (and (not (is_TNil$ ?v5 ))(not (is_TNil$a ?v6 )))(and (fun_app$b (fun_app$ac ?v4 (thd$ ?v5 ))(thd$a ?v6 ))(fun_app$f (fun_app$af ?v0 (ttl$ ?v5 ))(ttl$a ?v6 )))))))))(fun_app$f (fun_app$af (tllist_all2$ ?v4 ?v3 )?v1 )?v2 ))):named a71 ))
(assert (! (forall ((?v0 D_c_tllist_d_c_tllist_bool_fun_fun$ )(?v1 D_c_tllist$ )(?v2 D_c_tllist$ ))(=> (and (fun_app$h (fun_app$i ?v0 ?v1 )?v2 )(forall ((?v3 D_c_tllist$ )(?v4 D_c_tllist$ ))(=> (fun_app$h (fun_app$i ?v0 ?v3 )?v4 )(and (= (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(and (=> (and (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(= (terminal$ ?v3 )(terminal$ ?v4 )))(=> (and (not (is_TNil$ ?v3 ))(not (is_TNil$ ?v4 )))(and (= (thd$ ?v3 )(thd$ ?v4 ))(or (fun_app$h (fun_app$i ?v0 (ttl$ ?v3 ))(ttl$ ?v4 ))(= (ttl$ ?v3 )(ttl$ ?v4 ))))))))))(= ?v1 ?v2 ))):named a72 ))
(assert (! (forall ((?v0 F_e_tllist_f_e_tllist_bool_fun_fun$ )(?v1 F_e_tllist$ )(?v2 F_e_tllist$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v3 F_e_tllist$ )(?v4 F_e_tllist$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(and (= (is_TNil$a ?v3 )(is_TNil$a ?v4 ))(and (=> (and (is_TNil$a ?v3 )(is_TNil$a ?v4 ))(= (terminal$a ?v3 )(terminal$a ?v4 )))(=> (and (not (is_TNil$a ?v3 ))(not (is_TNil$a ?v4 )))(and (= (thd$a ?v3 )(thd$a ?v4 ))(or (fun_app$f (fun_app$g ?v0 (ttl$a ?v3 ))(ttl$a ?v4 ))(= (ttl$a ?v3 )(ttl$a ?v4 ))))))))))(= ?v1 ?v2 ))):named a73 ))
(assert (! (forall ((?v0 D_c_tllist_d_c_tllist_bool_fun_fun$ )(?v1 D_c_tllist$ )(?v2 D_c_tllist$ ))(=> (and (fun_app$h (fun_app$i ?v0 ?v1 )?v2 )(forall ((?v3 D_c_tllist$ )(?v4 D_c_tllist$ ))(=> (fun_app$h (fun_app$i ?v0 ?v3 )?v4 )(and (= (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(and (=> (and (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(= (terminal$ ?v3 )(terminal$ ?v4 )))(=> (and (not (is_TNil$ ?v3 ))(not (is_TNil$ ?v4 )))(and (= (thd$ ?v3 )(thd$ ?v4 ))(fun_app$h (fun_app$i ?v0 (ttl$ ?v3 ))(ttl$ ?v4 )))))))))(= ?v1 ?v2 ))):named a74 ))
(assert (! (forall ((?v0 F_e_tllist_f_e_tllist_bool_fun_fun$ )(?v1 F_e_tllist$ )(?v2 F_e_tllist$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v3 F_e_tllist$ )(?v4 F_e_tllist$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(and (= (is_TNil$a ?v3 )(is_TNil$a ?v4 ))(and (=> (and (is_TNil$a ?v3 )(is_TNil$a ?v4 ))(= (terminal$a ?v3 )(terminal$a ?v4 )))(=> (and (not (is_TNil$a ?v3 ))(not (is_TNil$a ?v4 )))(and (= (thd$a ?v3 )(thd$a ?v4 ))(fun_app$f (fun_app$g ?v0 (ttl$a ?v3 ))(ttl$a ?v4 )))))))))(= ?v1 ?v2 ))):named a75 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_c_fun$ )(?v3 A_d_fun$ )(?v4 A_bool_fun$ )(?v5 A_d_c_tllist_fun$ )(?v6 A_a_fun$ ))(=> (fun_app$ag ?v0 ?v1 )(= (terminal$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 ))(fun_app$ao ?v2 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_e_fun$ )(?v3 B_f_fun$ )(?v4 B_bool_fun$ )(?v5 B_f_e_tllist_fun$ )(?v6 B_b_fun$ ))(=> (fun_app$ad ?v0 ?v1 )(= (terminal$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 ))(fun_app$ap ?v2 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_c_fun$ )(?v3 A_d_fun$ )(?v4 A_bool_fun$ )(?v5 A_d_c_tllist_fun$ )(?v6 A_a_fun$ ))(=> (fun_app$ag ?v0 ?v1 )(is_TNil$ (fun_app$p (fun_app$q (fun_app$r (fun_app$s (fun_app$t (fun_app$u (corec_tllist$ ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 )))):named a78 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_e_fun$ )(?v3 B_f_fun$ )(?v4 B_bool_fun$ )(?v5 B_f_e_tllist_fun$ )(?v6 B_b_fun$ ))(=> (fun_app$ad ?v0 ?v1 )(is_TNil$a (fun_app$v (fun_app$w (fun_app$x (fun_app$y (fun_app$z (fun_app$aa (corec_tllist$a ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 )))):named a79 ))
(assert (! (forall ((?v0 C$ )(?v1 D_c_tllist$ )(?v2 C_d_c_tllist_bool_fun_fun$ ))(=> (and (member$c ?v0 (set2_tllist$ ?v1 ))(and (forall ((?v3 D_c_tllist$ ))(=> (is_TNil$ ?v3 )(fun_app$h (fun_app$aq ?v2 (terminal$ ?v3 ))?v3 )))(forall ((?v3 D_c_tllist$ )(?v4 C$ ))(=> (and (not (is_TNil$ ?v3 ))(and (member$c ?v4 (set2_tllist$ (ttl$ ?v3 )))(fun_app$h (fun_app$aq ?v2 ?v4 )(ttl$ ?v3 ))))(fun_app$h (fun_app$aq ?v2 ?v4 )?v3 )))))(fun_app$h (fun_app$aq ?v2 ?v0 )?v1 ))):named a80 ))
(assert (! (forall ((?v0 E$ )(?v1 F_e_tllist$ )(?v2 E_f_e_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (set2_tllist$a ?v1 ))(and (forall ((?v3 F_e_tllist$ ))(=> (is_TNil$a ?v3 )(fun_app$f (fun_app$ar ?v2 (terminal$a ?v3 ))?v3 )))(forall ((?v3 F_e_tllist$ )(?v4 E$ ))(=> (and (not (is_TNil$a ?v3 ))(and (member$a ?v4 (set2_tllist$a (ttl$a ?v3 )))(fun_app$f (fun_app$ar ?v2 ?v4 )(ttl$a ?v3 ))))(fun_app$f (fun_app$ar ?v2 ?v4 )?v3 )))))(fun_app$f (fun_app$ar ?v2 ?v0 )?v1 ))):named a81 ))
(assert (! (= terminal0$ uug$ ):named a82 ))
(assert (! (= terminal0$a uuh$ ):named a83 ))
(assert (! (forall ((?v0 D_c_tllist$ ))(=> (not (is_TNil$ ?v0 ))(= (tCons$ (thd$ ?v0 )(ttl$ ?v0 ))?v0 ))):named a84 ))
(assert (! (forall ((?v0 F_e_tllist$ ))(=> (not (is_TNil$a ?v0 ))(= (tCons$a (thd$a ?v0 )(ttl$a ?v0 ))?v0 ))):named a85 ))
(assert (! (forall ((?v0 D$ )(?v1 D_c_tllist$ )(?v2 D_d_c_tllist_bool_fun_fun$ ))(=> (and (member$b ?v0 (tset$ ?v1 ))(and (forall ((?v3 D_c_tllist$ ))(=> (not (is_TNil$ ?v3 ))(fun_app$h (fun_app$as ?v2 (thd$ ?v3 ))?v3 )))(forall ((?v3 D_c_tllist$ )(?v4 D$ ))(=> (and (not (is_TNil$ ?v3 ))(and (member$b ?v4 (tset$ (ttl$ ?v3 )))(fun_app$h (fun_app$as ?v2 ?v4 )(ttl$ ?v3 ))))(fun_app$h (fun_app$as ?v2 ?v4 )?v3 )))))(fun_app$h (fun_app$as ?v2 ?v0 )?v1 ))):named a86 ))
(assert (! (forall ((?v0 F$ )(?v1 F_e_tllist$ )(?v2 F_f_e_tllist_bool_fun_fun$ ))(=> (and (member$ ?v0 (tset$a ?v1 ))(and (forall ((?v3 F_e_tllist$ ))(=> (not (is_TNil$a ?v3 ))(fun_app$f (fun_app$at ?v2 (thd$a ?v3 ))?v3 )))(forall ((?v3 F_e_tllist$ )(?v4 F$ ))(=> (and (not (is_TNil$a ?v3 ))(and (member$ ?v4 (tset$a (ttl$a ?v3 )))(fun_app$f (fun_app$at ?v2 ?v4 )(ttl$a ?v3 ))))(fun_app$f (fun_app$at ?v2 ?v4 )?v3 )))))(fun_app$f (fun_app$at ?v2 ?v0 )?v1 ))):named a87 ))
(assert (! (forall ((?v0 D_c_tllist$ )(?v1 D_d_fun$ )(?v2 C_c_fun$ ))(=> (not (is_TNil$ ?v0 ))(= (thd$ (tmap$ ?v1 ?v2 ?v0 ))(fun_app$au ?v1 (thd$ ?v0 ))))):named a88 ))
(assert (! (forall ((?v0 D_c_tllist$ )(?v1 D_f_fun$ )(?v2 C_e_fun$ ))(=> (not (is_TNil$ ?v0 ))(= (thd$a (tmap$a ?v1 ?v2 ?v0 ))(fun_app$av ?v1 (thd$ ?v0 ))))):named a89 ))
(assert (! (forall ((?v0 F_e_tllist$ )(?v1 F_d_fun$ )(?v2 E_c_fun$ ))(=> (not (is_TNil$a ?v0 ))(= (thd$ (tmap$b ?v1 ?v2 ?v0 ))(fun_app$aw ?v1 (thd$a ?v0 ))))):named a90 ))
(assert (! (forall ((?v0 F_e_tllist$ )(?v1 F_f_fun$ )(?v2 E_e_fun$ ))(=> (not (is_TNil$a ?v0 ))(= (thd$a (tmap$c ?v1 ?v2 ?v0 ))(fun_app$ax ?v1 (thd$a ?v0 ))))):named a91 ))
(assert (! (forall ((?v0 D_c_tllist$ )(?v1 C$ ))(=> (and (not (is_TNil$ ?v0 ))(member$c ?v1 (set2_tllist$ (ttl$ ?v0 ))))(member$c ?v1 (set2_tllist$ ?v0 )))):named a92 ))
(assert (! (forall ((?v0 F_e_tllist$ )(?v1 E$ ))(=> (and (not (is_TNil$a ?v0 ))(member$a ?v1 (set2_tllist$a (ttl$a ?v0 ))))(member$a ?v1 (set2_tllist$a ?v0 )))):named a93 ))
(assert (! (forall ((?v0 D_c_tllist$ ))(=> (is_TNil$ ?v0 )(member$c (terminal$ ?v0 )(set2_tllist$ ?v0 )))):named a94 ))
(assert (! (forall ((?v0 F_e_tllist$ ))(=> (is_TNil$a ?v0 )(member$a (terminal$a ?v0 )(set2_tllist$a ?v0 )))):named a95 ))
(assert (! (forall ((?v0 D_c_tllist$ ))(=> (is_TNil$ ?v0 )(= (tNil$ (terminal$ ?v0 ))?v0 ))):named a96 ))
(assert (! (forall ((?v0 F_e_tllist$ ))(=> (is_TNil$a ?v0 )(= (tNil$a (terminal$a ?v0 ))?v0 ))):named a97 ))
(assert (! (forall ((?v0 D_c_tllist$ ))(=> (not (is_TNil$ ?v0 ))(member$b (thd$ ?v0 )(tset$ ?v0 )))):named a98 ))
(assert (! (forall ((?v0 F_e_tllist$ ))(=> (not (is_TNil$a ?v0 ))(member$ (thd$a ?v0 )(tset$a ?v0 )))):named a99 ))
(assert (! (forall ((?v0 D_c_tllist$ )(?v1 D$ ))(=> (and (not (is_TNil$ ?v0 ))(member$b ?v1 (tset$ (ttl$ ?v0 ))))(member$b ?v1 (tset$ ?v0 )))):named a100 ))
(assert (! (forall ((?v0 F_e_tllist$ )(?v1 F$ ))(=> (and (not (is_TNil$a ?v0 ))(member$ ?v1 (tset$a (ttl$a ?v0 ))))(member$ ?v1 (tset$a ?v0 )))):named a101 ))
(assert (! (forall ((?v0 D_c_tllist$ )(?v1 D_d_fun$ )(?v2 C_c_fun$ ))(=> (not (is_TNil$ ?v0 ))(= (ttl$ (tmap$ ?v1 ?v2 ?v0 ))(tmap$ ?v1 ?v2 (ttl$ ?v0 ))))):named a102 ))
(assert (! (forall ((?v0 D_c_tllist$ )(?v1 D_f_fun$ )(?v2 C_e_fun$ ))(=> (not (is_TNil$ ?v0 ))(= (ttl$a (tmap$a ?v1 ?v2 ?v0 ))(tmap$a ?v1 ?v2 (ttl$ ?v0 ))))):named a103 ))
(assert (! (forall ((?v0 F_e_tllist$ )(?v1 F_d_fun$ )(?v2 E_c_fun$ ))(=> (not (is_TNil$a ?v0 ))(= (ttl$ (tmap$b ?v1 ?v2 ?v0 ))(tmap$b ?v1 ?v2 (ttl$a ?v0 ))))):named a104 ))
(assert (! (forall ((?v0 F_e_tllist$ )(?v1 F_f_fun$ )(?v2 E_e_fun$ ))(=> (not (is_TNil$a ?v0 ))(= (ttl$a (tmap$c ?v1 ?v2 ?v0 ))(tmap$c ?v1 ?v2 (ttl$a ?v0 ))))):named a105 ))
(assert (! (forall ((?v0 F$ )(?v1 F_e_tllist$ )(?v2 F$ )(?v3 F_e_tllist$ ))(= (= (tCons$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a106 ))
(assert (! (forall ((?v0 D$ )(?v1 D_c_tllist$ )(?v2 D$ )(?v3 D_c_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a107 ))
(assert (! (forall ((?v0 E$ )(?v1 E$ ))(= (= (tNil$a ?v0 )(tNil$a ?v1 ))(= ?v0 ?v1 ))):named a108 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(= (= (tNil$ ?v0 )(tNil$ ?v1 ))(= ?v0 ?v1 ))):named a109 ))
(assert (! (forall ((?v0 F_f_bool_fun_fun$ )(?v1 E_e_bool_fun_fun$ )(?v2 F$ )(?v3 F_e_tllist$ )(?v4 F$ )(?v5 F_e_tllist$ ))(! (= (fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))(and (fun_app$b (fun_app$l ?v0 ?v2 )?v4 )(fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))))):named a110 ))
(assert (! (forall ((?v0 F_d_bool_fun_fun$ )(?v1 E_c_bool_fun_fun$ )(?v2 F$ )(?v3 F_e_tllist$ )(?v4 D$ )(?v5 D_c_tllist$ ))(! (= (fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))(and (fun_app$d (fun_app$aj ?v0 ?v2 )?v4 )(fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))))):named a111 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 D$ )(?v3 D_c_tllist$ )(?v4 D$ )(?v5 D_c_tllist$ ))(! (= (fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))(and (fun_app$d (fun_app$n ?v0 ?v2 )?v4 )(fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))))):named a112 ))
(assert (! (forall ((?v0 D_f_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 D$ )(?v3 D_c_tllist$ )(?v4 F$ )(?v5 F_e_tllist$ ))(! (= (fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))(and (fun_app$b (fun_app$ac ?v0 ?v2 )?v4 )(fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))))):named a113 ))
(assert (! (forall ((?v0 F_f_bool_fun_fun$ )(?v1 E_e_bool_fun_fun$ )(?v2 E$ )(?v3 E$ ))(! (= (fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))(fun_app$c (fun_app$m ?v1 ?v2 )?v3 )):pattern ((fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))))):named a114 ))
(assert (! (forall ((?v0 F_d_bool_fun_fun$ )(?v1 E_c_bool_fun_fun$ )(?v2 E$ )(?v3 C$ ))(! (= (fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )(tNil$a ?v2 ))(tNil$ ?v3 ))(fun_app$e (fun_app$ai ?v1 ?v2 )?v3 )):pattern ((fun_app$h (fun_app$ah (tllist_all2$b ?v0 ?v1 )(tNil$a ?v2 ))(tNil$ ?v3 ))))):named a115 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 C$ ))(! (= (fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))(fun_app$e (fun_app$o ?v1 ?v2 )?v3 )):pattern ((fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))))):named a116 ))
(assert (! (forall ((?v0 D_f_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 C$ )(?v3 E$ ))(! (= (fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )(tNil$ ?v2 ))(tNil$a ?v3 ))(fun_app$c (fun_app$ab ?v1 ?v2 )?v3 )):pattern ((fun_app$f (fun_app$af (tllist_all2$ ?v0 ?v1 )(tNil$ ?v2 ))(tNil$a ?v3 ))))):named a117 ))
(assert (! (forall ((?v0 D_bool_fun$ )(?v1 D_bool_fun$ ))(=> (forall ((?v2 D$ ))(= (fun_app$d ?v0 ?v2 )(fun_app$d ?v1 ?v2 )))(= (collect$ ?v0 )(collect$ ?v1 )))):named a118 ))
(assert (! (forall ((?v0 F_bool_fun$ )(?v1 F_bool_fun$ ))(=> (forall ((?v2 F$ ))(= (fun_app$b ?v0 ?v2 )(fun_app$b ?v1 ?v2 )))(= (collect$a ?v0 )(collect$a ?v1 )))):named a119 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 C_bool_fun$ ))(=> (forall ((?v2 C$ ))(= (fun_app$e ?v0 ?v2 )(fun_app$e ?v1 ?v2 )))(= (collect$b ?v0 )(collect$b ?v1 )))):named a120 ))
(assert (! (forall ((?v0 E_bool_fun$ )(?v1 E_bool_fun$ ))(=> (forall ((?v2 E$ ))(= (fun_app$c ?v0 ?v2 )(fun_app$c ?v1 ?v2 )))(= (collect$c ?v0 )(collect$c ?v1 )))):named a121 ))
(assert (! (forall ((?v0 E_set$ ))(= (collect$c (uui$ ?v0 ))?v0 )):named a122 ))
(assert (! (forall ((?v0 C_set$ ))(= (collect$b (uuj$ ?v0 ))?v0 )):named a123 ))
(assert (! (forall ((?v0 F_set$ ))(= (collect$a (uuk$ ?v0 ))?v0 )):named a124 ))
(assert (! (forall ((?v0 D_set$ ))(= (collect$ (uul$ ?v0 ))?v0 )):named a125 ))
(assert (! (forall ((?v0 E$ )(?v1 E_bool_fun$ ))(= (member$a ?v0 (collect$c ?v1 ))(fun_app$c ?v1 ?v0 ))):named a126 ))
(assert (! (forall ((?v0 C$ )(?v1 C_bool_fun$ ))(= (member$c ?v0 (collect$b ?v1 ))(fun_app$e ?v1 ?v0 ))):named a127 ))
(assert (! (forall ((?v0 F$ )(?v1 F_bool_fun$ ))(= (member$ ?v0 (collect$a ?v1 ))(fun_app$b ?v1 ?v0 ))):named a128 ))
(assert (! (forall ((?v0 D$ )(?v1 D_bool_fun$ ))(= (member$b ?v0 (collect$ ?v1 ))(fun_app$d ?v1 ?v0 ))):named a129 ))
(assert (! (forall ((?v0 D$ )(?v1 D_c_tllist$ ))(! (= (terminal$ (tCons$ ?v0 ?v1 ))(terminal$ ?v1 )):pattern ((tCons$ ?v0 ?v1 )))):named a130 ))
(assert (! (forall ((?v0 F$ )(?v1 F_e_tllist$ ))(! (= (terminal$a (tCons$a ?v0 ?v1 ))(terminal$a ?v1 )):pattern ((tCons$a ?v0 ?v1 )))):named a131 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 C_c_fun$ )(?v2 D_c_tllist$ ))(= (is_TNil$ (tmap$ ?v0 ?v1 ?v2 ))(is_TNil$ ?v2 ))):named a132 ))
(assert (! (forall ((?v0 F_d_fun$ )(?v1 E_c_fun$ )(?v2 F_e_tllist$ ))(= (is_TNil$ (tmap$b ?v0 ?v1 ?v2 ))(is_TNil$a ?v2 ))):named a133 ))
(assert (! (forall ((?v0 D_f_fun$ )(?v1 C_e_fun$ )(?v2 D_c_tllist$ ))(= (is_TNil$a (tmap$a ?v0 ?v1 ?v2 ))(is_TNil$ ?v2 ))):named a134 ))
(assert (! (forall ((?v0 F_f_fun$ )(?v1 E_e_fun$ )(?v2 F_e_tllist$ ))(= (is_TNil$a (tmap$c ?v0 ?v1 ?v2 ))(is_TNil$a ?v2 ))):named a135 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 C_c_fun$ )(?v2 D_c_tllist$ ))(= (ttl$ (tmap$ ?v0 ?v1 ?v2 ))(tmap$ ?v0 ?v1 (ttl$ ?v2 )))):named a136 ))
(assert (! (forall ((?v0 F_d_fun$ )(?v1 E_c_fun$ )(?v2 F_e_tllist$ ))(= (ttl$ (tmap$b ?v0 ?v1 ?v2 ))(tmap$b ?v0 ?v1 (ttl$a ?v2 )))):named a137 ))
(assert (! (forall ((?v0 D_f_fun$ )(?v1 C_e_fun$ )(?v2 D_c_tllist$ ))(= (ttl$a (tmap$a ?v0 ?v1 ?v2 ))(tmap$a ?v0 ?v1 (ttl$ ?v2 )))):named a138 ))
(assert (! (forall ((?v0 F_f_fun$ )(?v1 E_e_fun$ )(?v2 F_e_tllist$ ))(= (ttl$a (tmap$c ?v0 ?v1 ?v2 ))(tmap$c ?v0 ?v1 (ttl$a ?v2 )))):named a139 ))
(check-sat )
(get-unsat-core )
