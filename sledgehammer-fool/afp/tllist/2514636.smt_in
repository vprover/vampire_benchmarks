(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort Unit$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort C_set$ 0 )
(declare-sort D_set$ 0 )
(declare-sort C_a_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort D_b_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort Unit_c_fun$ 0 )
(declare-sort Unit_d_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun$ 0 )
(declare-sort A_d_bool_fun_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort C_a_bool_fun_fun$ 0 )
(declare-sort C_a_c_tllist_fun$ 0 )
(declare-sort C_b_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort D_a_bool_fun_fun$ 0 )
(declare-sort D_b_bool_fun_fun$ 0 )
(declare-sort D_b_d_tllist_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort A_a_tllist_bool_fun$ 0 )
(declare-sort A_c_tllist_bool_fun$ 0 )
(declare-sort B_d_tllist_bool_fun$ 0 )
(declare-sort A_b_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_bool_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun$ 0 )
(declare-sort A_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_a_c_tllist_fun$ 0 )
(declare-sort B_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_b_d_tllist_fun$ 0 )
(declare-sort C_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort D_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort D_b_d_tllist_fun_bool_fun$ 0 )
(declare-sort C_a_fun_d_b_fun_bool_fun_fun$ 0 )
(declare-sort C_c_fun_c_a_c_tllist_fun_fun$ 0 )
(declare-sort C_c_fun_d_d_fun_bool_fun_fun$ 0 )
(declare-sort D_d_fun_d_b_d_tllist_fun_fun$ 0 )
(declare-sort A_a_c_tllist_a_c_tllist_fun_fun$ 0 )
(declare-sort B_b_d_tllist_b_d_tllist_fun_fun$ 0 )
(declare-sort C_a_c_tllist_fun_a_c_tllist_fun$ 0 )
(declare-sort D_b_d_tllist_fun_b_d_tllist_fun$ 0 )
(declare-sort A_a_tllist_a_a_tllist_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort C_a_c_tllist_a_c_tllist_tllist_fun$ 0 )
(declare-sort C_bool_fun_d_bool_fun_bool_fun_fun$ 0 )
(declare-sort D_b_d_tllist_b_d_tllist_tllist_fun$ 0 )
(declare-sort A_bool_fun_a_c_tllist_a_c_tllist_fun_fun$ 0 )
(declare-sort B_bool_fun_b_d_tllist_b_d_tllist_fun_fun$ 0 )
(declare-sort C_a_c_tllist_fun_d_b_d_tllist_fun_bool_fun_fun$ 0 )
(declare-sort C_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun$ 0 )
(declare-sort D_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun$ 0 )
(declare-sort C_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun$ 0 )
(declare-sort D_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun$ 0 )
(declare-sort A_a_c_tllist_a_c_tllist_fun_fun_a_c_tllist_a_c_tllist_fun_fun$ 0 )
(declare-sort B_b_d_tllist_b_d_tllist_fun_fun_b_d_tllist_b_d_tllist_fun_fun$ 0 )
(declare-sort A_c_tllist_a_c_tllist_fun_b_d_tllist_b_d_tllist_fun_bool_fun_fun$ 0 )
(declare-sort C_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun$ 0 )
(declare-sort D_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun$ 0 )
(declare-sort A_c_tllist_a_c_tllist_tllist_b_d_tllist_b_d_tllist_tllist_bool_fun_fun$ 0 )
(declare-sort C_c_fun_c_a_c_tllist_fun_fun_d_d_fun_d_b_d_tllist_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_c_tllist_a_c_tllist_fun_fun_b_b_d_tllist_b_d_tllist_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun$ 0 )
(declare-sort D_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun$ 0 )
(declare-sort C_a_c_tllist_a_c_tllist_tllist_fun_d_b_d_tllist_b_d_tllist_tllist_fun_bool_fun_fun$ 0 )
(declare-sort C_a_c_tllist_fun_a_a_c_tllist_a_c_tllist_fun_fun_a_c_tllist_a_c_tllist_fun_fun_fun$ 0 )
(declare-sort D_b_d_tllist_fun_b_b_d_tllist_b_d_tllist_fun_fun_b_d_tllist_b_d_tllist_fun_fun_fun$ 0 )
(declare-sort C_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun$ 0 )
(declare-sort D_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun$ 0 )
(declare-sort C_c_fun_c_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_fun$ 0 )
(declare-sort D_d_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_fun$ 0 )
(declare-sort C_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun$ 0 )
(declare-sort D_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun$ 0 )
(declare-sort C_bool_fun_c_c_fun_c_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_fun_fun$ 0 )
(declare-sort D_bool_fun_d_d_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_fun_fun$ 0 )
(declare-sort C_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun$ 0 )
(declare-sort D_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_a_c_tllist_a_c_tllist_fun_fun_a_c_tllist_a_c_tllist_fun_fun_b_b_d_tllist_b_d_tllist_fun_fun_b_d_tllist_b_d_tllist_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_a_c_tllist_fun_c_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_fun$ 0 )
(declare-sort C_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_bool_fun_fun$ 0 )
(declare-sort D_b_d_tllist_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_fun$ 0 )
(declare-sort C_bool_fun_c_a_c_tllist_fun_c_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_fun_fun$ 0 )
(declare-sort D_bool_fun_d_b_d_tllist_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_fun_fun$ 0 )
(declare-sort C_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_c_fun_c_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_fun_d_d_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_a_c_tllist_fun_c_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_fun_d_b_d_tllist_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_c_tllist$ 0)
(declare-sort B_d_tllist$ 0)
(declare-sort A_b_tllist$ 0)
(declare-sort A_a_tllist$ 0)
(declare-sort A_d_tllist$ 0)
(declare-sort B_llist$ 0)
(declare-sort B_llist_d_tllist$ 0)
(declare-sort A_c_tllist_a_c_tllist_tllist$ 0)
(declare-sort B_d_tllist_b_d_tllist_tllist$ 0)
(declare-sort B_a_tllist$ 0)
(declare-sort A_llist$ 0)
(declare-sort A_llist_c_tllist$ 0)
(declare-sort D_d_tllist$ 0)
(declare-sort D_c_tllist$ 0)
(declare-sort D_a_tllist$ 0)
(declare-sort D_b_tllist$ 0)
(declare-fun terminal$ (A_c_tllist$)C$)
(declare-fun tNil$ (C$ )A_c_tllist$)
(declare-fun thd$ (A_c_tllist$)A$)
(declare-fun ttl$ (A_c_tllist$)A_c_tllist$)
(declare-fun tCons$ (A$ A_c_tllist$ )A_c_tllist$)
(declare-fun terminal$a (B_d_tllist$)D$)
(declare-fun tNil$a (D$ )B_d_tllist$)
(declare-fun thd$a (B_d_tllist$)B$)
(declare-fun ttl$a (B_d_tllist$)B_d_tllist$)
(declare-fun tCons$a (B$ B_d_tllist$ )B_d_tllist$)
(declare-fun terminal$b (A_b_tllist$)B$)
(declare-fun tNil$b (B$ )A_b_tllist$)
(declare-fun thd$b (A_b_tllist$)A$)
(declare-fun ttl$b (A_b_tllist$)A_b_tllist$)
(declare-fun tCons$b (A$ A_b_tllist$ )A_b_tllist$)
(declare-fun terminal$c (A_a_tllist$)A$)
(declare-fun tNil$c (A$ )A_a_tllist$)
(declare-fun thd$c (A_a_tllist$)A$)
(declare-fun ttl$c (A_a_tllist$)A_a_tllist$)
(declare-fun tCons$c (A$ A_a_tllist$ )A_a_tllist$)
(declare-fun terminal$d (A_d_tllist$)D$)
(declare-fun tNil$d (D$ )A_d_tllist$)
(declare-fun thd$d (A_d_tllist$)A$)
(declare-fun ttl$d (A_d_tllist$)A_d_tllist$)
(declare-fun tCons$d (A$ A_d_tllist$ )A_d_tllist$)
(declare-fun lNil$ ()B_llist$)
(declare-fun lhd$ (B_llist$)B$)
(declare-fun ltl$ (B_llist$)B_llist$)
(declare-fun lCons$ (B$ B_llist$ )B_llist$)
(declare-fun terminal$e (B_llist_d_tllist$)D$)
(declare-fun tNil$e (D$ )B_llist_d_tllist$)
(declare-fun thd$e (B_llist_d_tllist$)B_llist$)
(declare-fun ttl$e (B_llist_d_tllist$)B_llist_d_tllist$)
(declare-fun tCons$e (B_llist$ B_llist_d_tllist$ )B_llist_d_tllist$)
(declare-fun terminal$f (A_c_tllist_a_c_tllist_tllist$)A_c_tllist$)
(declare-fun tNil$f (A_c_tllist$ )A_c_tllist_a_c_tllist_tllist$)
(declare-fun thd$f (A_c_tllist_a_c_tllist_tllist$)A_c_tllist$)
(declare-fun ttl$f (A_c_tllist_a_c_tllist_tllist$)A_c_tllist_a_c_tllist_tllist$)
(declare-fun tCons$f (A_c_tllist$ A_c_tllist_a_c_tllist_tllist$ )A_c_tllist_a_c_tllist_tllist$)
(declare-fun terminal$g (B_d_tllist_b_d_tllist_tllist$)B_d_tllist$)
(declare-fun tNil$g (B_d_tllist$ )B_d_tllist_b_d_tllist_tllist$)
(declare-fun thd$g (B_d_tllist_b_d_tllist_tllist$)B_d_tllist$)
(declare-fun ttl$g (B_d_tllist_b_d_tllist_tllist$)B_d_tllist_b_d_tllist_tllist$)
(declare-fun tCons$g (B_d_tllist$ B_d_tllist_b_d_tllist_tllist$ )B_d_tllist_b_d_tllist_tllist$)
(declare-fun terminal$h (B_a_tllist$)A$)
(declare-fun tNil$h (A$ )B_a_tllist$)
(declare-fun thd$h (B_a_tllist$)B$)
(declare-fun ttl$h (B_a_tllist$)B_a_tllist$)
(declare-fun tCons$h (B$ B_a_tllist$ )B_a_tllist$)
(declare-fun lNil$a ()A_llist$)
(declare-fun lhd$a (A_llist$)A$)
(declare-fun ltl$a (A_llist$)A_llist$)
(declare-fun lCons$a (A$ A_llist$ )A_llist$)
(declare-fun terminal$i (A_llist_c_tllist$)C$)
(declare-fun tNil$i (C$ )A_llist_c_tllist$)
(declare-fun thd$i (A_llist_c_tllist$)A_llist$)
(declare-fun ttl$i (A_llist_c_tllist$)A_llist_c_tllist$)
(declare-fun tCons$i (A_llist$ A_llist_c_tllist$ )A_llist_c_tllist$)
(declare-fun terminal$j (D_d_tllist$)D$)
(declare-fun tNil$j (D$ )D_d_tllist$)
(declare-fun thd$j (D_d_tllist$)D$)
(declare-fun ttl$j (D_d_tllist$)D_d_tllist$)
(declare-fun tCons$j (D$ D_d_tllist$ )D_d_tllist$)
(declare-fun terminal$k (D_c_tllist$)C$)
(declare-fun tNil$k (C$ )D_c_tllist$)
(declare-fun thd$k (D_c_tllist$)D$)
(declare-fun ttl$k (D_c_tllist$)D_c_tllist$)
(declare-fun tCons$k (D$ D_c_tllist$ )D_c_tllist$)
(declare-fun terminal$l (D_a_tllist$)A$)
(declare-fun tNil$l (A$ )D_a_tllist$)
(declare-fun thd$l (D_a_tllist$)D$)
(declare-fun ttl$l (D_a_tllist$)D_a_tllist$)
(declare-fun tCons$l (D$ D_a_tllist$ )D_a_tllist$)
(declare-fun terminal$m (D_b_tllist$)B$)
(declare-fun tNil$m (B$ )D_b_tllist$)
(declare-fun thd$m (D_b_tllist$)D$)
(declare-fun ttl$m (D_b_tllist$)D_b_tllist$)
(declare-fun tCons$m (D$ D_b_tllist$ )D_b_tllist$)
(declare-fun p$ ()A_b_bool_fun_fun$ )
(declare-fun q$ ()C_d_bool_fun_fun$ )
(declare-fun x$ ()A$ )
(declare-fun ts$ ()A_c_tllist$ )
(declare-fun uu$ ()A_a_bool_fun_fun$ )
(declare-fun ts$a ()B_d_tllist$ )
(declare-fun uua$ ()A_a_tllist_a_a_tllist_bool_fun_fun$ )
(declare-fun uub$ ()B_b_bool_fun_fun$ )
(declare-fun uuc$ ()D_d_bool_fun_fun$ )
(declare-fun uud$ ()B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun uue$ ()C_c_bool_fun_fun$ )
(declare-fun uuf$ ()A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun uug$ ()C_a_c_tllist_fun$ )
(declare-fun uuh$ ()D_b_d_tllist_fun$ )
(declare-fun uui$ (D_set$ )D_bool_fun$ )
(declare-fun uuj$ (C_set$ )C_bool_fun$ )
(declare-fun uuk$ (A_set$ )A_bool_fun$ )
(declare-fun uul$ (B_set$ )B_bool_fun$ )
(declare-fun uum$ ()Bool_bool_bool_fun_fun$ )
(declare-fun tset$ (A_c_tllist$ )A_set$ )
(declare-fun tset$a (B_d_tllist$ )B_set$ )
(declare-fun tset$b (D_d_tllist$ )D_set$ )
(declare-fun tset$c (D_c_tllist$ )D_set$ )
(declare-fun tset$d (D_a_tllist$ )D_set$ )
(declare-fun tset$e (D_b_tllist$ )D_set$ )
(declare-fun unity$ ()Unit$ )
(declare-fun member$ (D$ D_set$ )Bool )
(declare-fun collect$ (D_bool_fun$ )D_set$ )
(declare-fun fun_app$ (D_b_d_tllist_fun$ D$ )B_d_tllist$ )
(declare-fun member$a (C$ C_set$ )Bool )
(declare-fun member$b (B$ B_set$ )Bool )
(declare-fun member$c (A$ A_set$ )Bool )
(declare-fun rel_fun$ (D_d_bool_fun_fun$ B_d_tllist_b_d_tllist_bool_fun_fun$ D_b_d_tllist_fun$ D_b_d_tllist_fun$ )Bool )
(declare-fun tappend$ (A_c_tllist$ )C_a_c_tllist_fun_a_c_tllist_fun$ )
(declare-fun tconcat$ (C$ A_llist_c_tllist$ )A_c_tllist$ )
(declare-fun tfilter$ (Unit_c_fun$ )A_bool_fun_a_c_tllist_a_c_tllist_fun_fun$ )
(declare-fun collect$a (C_bool_fun$ )C_set$ )
(declare-fun collect$b (A_bool_fun$ )A_set$ )
(declare-fun collect$c (B_bool_fun$ )B_set$ )
(declare-fun fun_app$a (C_a_c_tllist_fun$ C$ )A_c_tllist$ )
(declare-fun fun_app$b (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$c (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$d (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$e (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$f (B_d_tllist_bool_fun$ B_d_tllist$ )Bool )
(declare-fun fun_app$g (B_d_tllist_b_d_tllist_bool_fun_fun$ B_d_tllist$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$h (A_c_tllist_bool_fun$ A_c_tllist$ )Bool )
(declare-fun fun_app$i (A_c_tllist_a_c_tllist_bool_fun_fun$ A_c_tllist$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$j (A_a_tllist_bool_fun$ A_a_tllist$ )Bool )
(declare-fun fun_app$k (A_a_tllist_a_a_tllist_bool_fun_fun$ A_a_tllist$ )A_a_tllist_bool_fun$ )
(declare-fun fun_app$l (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$m (Bool_bool_bool_fun_fun$ Bool )Bool_bool_fun$ )
(declare-fun fun_app$n (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$o (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$p (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$q (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$r (A_c_tllist_b_d_tllist_bool_fun_fun$ A_c_tllist$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$s (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$t (B_d_tllist_a_c_tllist_bool_fun_fun$ B_d_tllist$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$u (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$v (A_c_tllist_a_c_tllist_fun$ A_c_tllist$ )A_c_tllist$ )
(declare-fun fun_app$w (A_bool_fun_a_c_tllist_a_c_tllist_fun_fun$ A_bool_fun$ )A_c_tllist_a_c_tllist_fun$ )
(declare-fun fun_app$x (B_d_tllist_b_d_tllist_fun$ B_d_tllist$ )B_d_tllist$ )
(declare-fun fun_app$y (B_bool_fun_b_d_tllist_b_d_tllist_fun_fun$ B_bool_fun$ )B_d_tllist_b_d_tllist_fun$ )
(declare-fun fun_app$z (C_a_c_tllist_fun_a_c_tllist_fun$ C_a_c_tllist_fun$ )A_c_tllist$ )
(declare-fun rel_fun$a (D_c_bool_fun_fun$ B_d_tllist_a_c_tllist_bool_fun_fun$ D_b_d_tllist_fun$ C_a_c_tllist_fun$ )Bool )
(declare-fun rel_fun$b (C_c_bool_fun_fun$ A_c_tllist_a_c_tllist_bool_fun_fun$ C_a_c_tllist_fun$ C_a_c_tllist_fun$ )Bool )
(declare-fun rel_fun$c (C_d_bool_fun_fun$ A_c_tllist_b_d_tllist_bool_fun_fun$ )C_a_c_tllist_fun_d_b_d_tllist_fun_bool_fun_fun$ )
(declare-fun rel_fun$d (C_a_c_tllist_fun_d_b_d_tllist_fun_bool_fun_fun$ A_a_c_tllist_a_c_tllist_fun_fun_a_c_tllist_a_c_tllist_fun_fun_b_b_d_tllist_b_d_tllist_fun_fun_b_d_tllist_b_d_tllist_fun_fun_bool_fun_fun$ C_a_c_tllist_fun_a_a_c_tllist_a_c_tllist_fun_fun_a_c_tllist_a_c_tllist_fun_fun_fun$ D_b_d_tllist_fun_b_b_d_tllist_b_d_tllist_fun_fun_b_d_tllist_b_d_tllist_fun_fun_fun$ )Bool )
(declare-fun rel_fun$e (A_a_c_tllist_a_c_tllist_fun_fun_b_b_d_tllist_b_d_tllist_fun_fun_bool_fun_fun$ A_c_tllist_a_c_tllist_fun_b_d_tllist_b_d_tllist_fun_bool_fun_fun$ )A_a_c_tllist_a_c_tllist_fun_fun_a_c_tllist_a_c_tllist_fun_fun_b_b_d_tllist_b_d_tllist_fun_fun_b_d_tllist_b_d_tllist_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$f (A_b_bool_fun_fun$ A_c_tllist_a_c_tllist_fun_b_d_tllist_b_d_tllist_fun_bool_fun_fun$ )A_a_c_tllist_a_c_tllist_fun_fun_b_b_d_tllist_b_d_tllist_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$g (A_c_tllist_b_d_tllist_bool_fun_fun$ A_c_tllist_b_d_tllist_bool_fun_fun$ )A_c_tllist_a_c_tllist_fun_b_d_tllist_b_d_tllist_fun_bool_fun_fun$ )
(declare-fun rel_fun$h (C_bool_fun_d_bool_fun_bool_fun_fun$ C_a_c_tllist_fun_c_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_fun_d_b_d_tllist_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_fun_bool_fun_fun$ C_bool_fun_c_a_c_tllist_fun_c_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_fun_fun$ D_bool_fun_d_b_d_tllist_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_fun_fun$ )Bool )
(declare-fun rel_fun$i (C_d_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_bool_fun_d_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$j (C_a_c_tllist_fun_d_b_d_tllist_fun_bool_fun_fun$ C_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_bool_fun_fun$ )C_a_c_tllist_fun_c_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_fun_d_b_d_tllist_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$k (C_a_c_tllist_fun_d_b_d_tllist_fun_bool_fun_fun$ C_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_bool_fun_fun$ )C_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$l (C_bool_fun_d_bool_fun_bool_fun_fun$ C_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_bool_fun_fun$ )C_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$m (C_a_c_tllist_a_c_tllist_tllist_fun_d_b_d_tllist_b_d_tllist_tllist_fun_bool_fun_fun$ C_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_bool_fun_fun$ )C_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$n (C_d_bool_fun_fun$ A_c_tllist_a_c_tllist_tllist_b_d_tllist_b_d_tllist_tllist_bool_fun_fun$ )C_a_c_tllist_a_c_tllist_tllist_fun_d_b_d_tllist_b_d_tllist_tllist_fun_bool_fun_fun$ )
(declare-fun rel_fun$o (C_c_fun_d_d_fun_bool_fun_fun$ C_a_c_tllist_a_c_tllist_tllist_fun_d_b_d_tllist_b_d_tllist_tllist_fun_bool_fun_fun$ )C_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$p (C_d_bool_fun_fun$ C_d_bool_fun_fun$ )C_c_fun_d_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$q (C_bool_fun_d_bool_fun_bool_fun_fun$ C_c_fun_c_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_fun_d_d_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_fun_bool_fun_fun$ C_bool_fun_c_c_fun_c_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_fun_fun$ D_bool_fun_d_d_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_fun_fun$ )Bool )
(declare-fun rel_fun$r (C_c_fun_d_d_fun_bool_fun_fun$ C_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_bool_fun_fun$ )C_c_fun_c_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_fun_d_d_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$s (C_a_fun_d_b_fun_bool_fun_fun$ C_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_bool_fun_fun$ )C_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$t (C_d_bool_fun_fun$ A_b_bool_fun_fun$ )C_a_fun_d_b_fun_bool_fun_fun$ )
(declare-fun rel_fun$u (C_bool_fun_d_bool_fun_bool_fun_fun$ C_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_bool_fun_fun$ )C_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$v (C_a_c_tllist_fun_d_b_d_tllist_fun_bool_fun_fun$ C_c_fun_c_a_c_tllist_fun_fun_d_d_fun_d_b_d_tllist_fun_fun_bool_fun_fun$ )C_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$w (C_c_fun_d_d_fun_bool_fun_fun$ C_a_c_tllist_fun_d_b_d_tllist_fun_bool_fun_fun$ )C_c_fun_c_a_c_tllist_fun_fun_d_d_fun_d_b_d_tllist_fun_fun_bool_fun_fun$ )
(declare-fun tappend$a (B_d_tllist$ )D_b_d_tllist_fun_b_d_tllist_fun$ )
(declare-fun tconcat$a (D$ B_llist_d_tllist$ )B_d_tllist$ )
(declare-fun tconcat$b (Unit_c_fun$ A_llist_c_tllist$ )A_c_tllist$ )
(declare-fun tconcat$c (Unit_d_fun$ B_llist_d_tllist$ )B_d_tllist$ )
(declare-fun tfilter$a (Unit_d_fun$ )B_bool_fun_b_d_tllist_b_d_tllist_fun_fun$ )
(declare-fun tfilter$b (C$ )A_bool_fun_a_c_tllist_a_c_tllist_fun_fun$ )
(declare-fun tfilter$c (D$ )B_bool_fun_b_d_tllist_b_d_tllist_fun_fun$ )
(declare-fun fun_app$aa (D_b_d_tllist_fun_b_d_tllist_fun$ D_b_d_tllist_fun$ )B_d_tllist$ )
(declare-fun fun_app$ab (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun fun_app$ac (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun fun_app$ad (A_d_bool_fun_fun$ A$ )D_bool_fun$ )
(declare-fun fun_app$ae (A_c_bool_fun_fun$ A$ )C_bool_fun$ )
(declare-fun fun_app$af (B_llist_a_bool_fun_fun$ B_llist$ )A_bool_fun$ )
(declare-fun fun_app$ag (A_a_c_tllist_a_c_tllist_fun_fun_a_c_tllist_a_c_tllist_fun_fun$ A_a_c_tllist_a_c_tllist_fun_fun$ )A_c_tllist_a_c_tllist_fun$ )
(declare-fun fun_app$ah (C_a_c_tllist_fun_a_a_c_tllist_a_c_tllist_fun_fun_a_c_tllist_a_c_tllist_fun_fun_fun$ C_a_c_tllist_fun$ )A_a_c_tllist_a_c_tllist_fun_fun_a_c_tllist_a_c_tllist_fun_fun$ )
(declare-fun fun_app$ai (A_a_c_tllist_a_c_tllist_fun_fun$ A$ )A_c_tllist_a_c_tllist_fun$ )
(declare-fun fun_app$aj (B_b_d_tllist_b_d_tllist_fun_fun_b_d_tllist_b_d_tllist_fun_fun$ B_b_d_tllist_b_d_tllist_fun_fun$ )B_d_tllist_b_d_tllist_fun$ )
(declare-fun fun_app$ak (D_b_d_tllist_fun_b_b_d_tllist_b_d_tllist_fun_fun_b_d_tllist_b_d_tllist_fun_fun_fun$ D_b_d_tllist_fun$ )B_b_d_tllist_b_d_tllist_fun_fun_b_d_tllist_b_d_tllist_fun_fun$ )
(declare-fun fun_app$al (B_b_d_tllist_b_d_tllist_fun_fun$ B$ )B_d_tllist_b_d_tllist_fun$ )
(declare-fun fun_app$am (C_c_fun_c_a_c_tllist_fun_fun$ C_c_fun$ )C_a_c_tllist_fun$ )
(declare-fun fun_app$an (C_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun$ C_a_c_tllist_fun$ )C_c_fun_c_a_c_tllist_fun_fun$ )
(declare-fun fun_app$ao (C_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun$ C_bool_fun$ )C_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun$ )
(declare-fun fun_app$ap (C_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun$ C_a_fun$ )C_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun$ )
(declare-fun fun_app$aq (C_c_fun_c_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_fun$ C_c_fun$ )C_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun$ )
(declare-fun fun_app$ar (C_bool_fun_c_c_fun_c_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_fun_fun$ C_bool_fun$ )C_c_fun_c_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_fun$ )
(declare-fun fun_app$as (C_a_fun$ C$ )A$ )
(declare-fun fun_app$at (C_c_fun$ C$ )C$ )
(declare-fun fun_app$au (D_d_fun_d_b_d_tllist_fun_fun$ D_d_fun$ )D_b_d_tllist_fun$ )
(declare-fun fun_app$av (D_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun$ D_b_d_tllist_fun$ )D_d_fun_d_b_d_tllist_fun_fun$ )
(declare-fun fun_app$aw (D_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun$ D_bool_fun$ )D_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun$ )
(declare-fun fun_app$ax (D_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun$ D_b_fun$ )D_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun$ )
(declare-fun fun_app$ay (D_d_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_fun$ D_d_fun$ )D_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun$ )
(declare-fun fun_app$az (D_bool_fun_d_d_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_fun_fun$ D_bool_fun$ )D_d_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_fun$ )
(declare-fun fun_app$ba (D_b_fun$ D$ )B$ )
(declare-fun fun_app$bb (D_d_fun$ D$ )D$ )
(declare-fun fun_app$bc (C_a_c_tllist_a_c_tllist_tllist_fun$ C$ )A_c_tllist_a_c_tllist_tllist$ )
(declare-fun fun_app$bd (C_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun$ C_c_fun$ )C_a_c_tllist_a_c_tllist_tllist_fun$ )
(declare-fun fun_app$be (C_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun$ C_a_c_tllist_a_c_tllist_tllist_fun$ )C_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun$ )
(declare-fun fun_app$bf (C_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun$ C_bool_fun$ )C_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun$ )
(declare-fun fun_app$bg (C_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun$ C_a_c_tllist_fun$ )C_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun$ )
(declare-fun fun_app$bh (C_a_c_tllist_fun_c_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_fun$ C_a_c_tllist_fun$ )C_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun$ )
(declare-fun fun_app$bi (C_bool_fun_c_a_c_tllist_fun_c_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_fun_fun$ C_bool_fun$ )C_a_c_tllist_fun_c_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_fun$ )
(declare-fun fun_app$bj (D_b_d_tllist_b_d_tllist_tllist_fun$ D$ )B_d_tllist_b_d_tllist_tllist$ )
(declare-fun fun_app$bk (D_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun$ D_d_fun$ )D_b_d_tllist_b_d_tllist_tllist_fun$ )
(declare-fun fun_app$bl (D_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun$ D_b_d_tllist_b_d_tllist_tllist_fun$ )D_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun$ )
(declare-fun fun_app$bm (D_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun$ D_bool_fun$ )D_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun$ )
(declare-fun fun_app$bn (D_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun$ D_b_d_tllist_fun$ )D_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun$ )
(declare-fun fun_app$bo (D_b_d_tllist_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_fun$ D_b_d_tllist_fun$ )D_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun$ )
(declare-fun fun_app$bp (D_bool_fun_d_b_d_tllist_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_fun_fun$ D_bool_fun$ )D_b_d_tllist_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_fun$ )
(declare-fun fun_app$bq (C_a_c_tllist_bool_fun_fun$ C$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$br (D_b_d_tllist_bool_fun_fun$ D$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$bs (Unit_d_fun$ Unit$ )D$ )
(declare-fun fun_app$bt (Unit_c_fun$ Unit$ )C$ )
(declare-fun fun_app$bu (D_a_bool_fun_fun$ D$ )A_bool_fun$ )
(declare-fun fun_app$bv (D_b_bool_fun_fun$ D$ )B_bool_fun$ )
(declare-fun fun_app$bw (C_a_bool_fun_fun$ C$ )A_bool_fun$ )
(declare-fun fun_app$bx (C_b_bool_fun_fun$ C$ )B_bool_fun$ )
(declare-fun fun_app$by (D_b_d_tllist_fun_bool_fun$ D_b_d_tllist_fun$ )Bool )
(declare-fun fun_app$bz (C_a_c_tllist_fun_d_b_d_tllist_fun_bool_fun_fun$ C_a_c_tllist_fun$ )D_b_d_tllist_fun_bool_fun$ )
(declare-fun fun_app$ca (A_a_c_tllist_bool_fun_fun$ A$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$cb (B_b_d_tllist_bool_fun_fun$ B$ )B_d_tllist_bool_fun$ )
(declare-fun case_tllist$ ()C_a_c_tllist_fun_a_a_c_tllist_a_c_tllist_fun_fun_a_c_tllist_a_c_tllist_fun_fun_fun$ )
(declare-fun pred_tllist$ (A_bool_fun$ C_bool_fun$ A_c_tllist$ )Bool )
(declare-fun set2_tllist$ (B_a_tllist$ )A_set$ )
(declare-fun tllist_all2$ (A_b_bool_fun_fun$ C_d_bool_fun_fun$ )A_c_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun case_tllist$a ()D_b_d_tllist_fun_b_b_d_tllist_b_d_tllist_fun_fun_b_d_tllist_b_d_tllist_fun_fun_fun$ )
(declare-fun corec_tllist$ ()C_bool_fun_c_c_fun_c_a_fun_c_bool_fun_c_a_c_tllist_fun_c_c_fun_c_a_c_tllist_fun_fun_fun_fun_fun_fun_fun$ )
(declare-fun pred_tllist$a (B_bool_fun$ D_bool_fun$ B_d_tllist$ )Bool )
(declare-fun set2_tllist$a (A_d_tllist$ )D_set$ )
(declare-fun set2_tllist$b (A_b_tllist$ )B_set$ )
(declare-fun set2_tllist$c (A_a_tllist$ )A_set$ )
(declare-fun set2_tllist$d (A_c_tllist$ )C_set$ )
(declare-fun set2_tllist$e (B_d_tllist$ )D_set$ )
(declare-fun set2_tllist$f (D_d_tllist$ )D_set$ )
(declare-fun set2_tllist$g (D_c_tllist$ )C_set$ )
(declare-fun set2_tllist$h (D_a_tllist$ )A_set$ )
(declare-fun set2_tllist$i (D_b_tllist$ )B_set$ )
(declare-fun tllist_all2$a (A_a_bool_fun_fun$ B_a_bool_fun_fun$ A_b_tllist$ A_a_tllist$ )Bool )
(declare-fun tllist_all2$b (A_a_bool_fun_fun$ A_d_bool_fun_fun$ A_a_tllist$ A_d_tllist$ )Bool )
(declare-fun tllist_all2$c (A_a_bool_fun_fun$ A_c_bool_fun_fun$ A_a_tllist$ A_c_tllist$ )Bool )
(declare-fun tllist_all2$d (A_a_bool_fun_fun$ A_b_bool_fun_fun$ A_a_tllist$ A_b_tllist$ )Bool )
(declare-fun tllist_all2$e (A_a_bool_fun_fun$ A_a_bool_fun_fun$ )A_a_tllist_a_a_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$f (A_a_bool_fun_fun$ C_c_bool_fun_fun$ )A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$g (B_a_bool_fun_fun$ D_c_bool_fun_fun$ )B_d_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$h (B_b_bool_fun_fun$ D_d_bool_fun_fun$ )B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$i (B_llist_a_bool_fun_fun$ D_c_bool_fun_fun$ B_llist_d_tllist$ A_c_tllist$ )Bool )
(declare-fun tllist_all2$j (A_b_llist_bool_fun_fun$ C_d_bool_fun_fun$ A_c_tllist$ B_llist_d_tllist$ )Bool )
(declare-fun tllist_all2$k (D_d_bool_fun_fun$ D_d_bool_fun_fun$ D_d_tllist$ D_d_tllist$ )Bool )
(declare-fun tllist_all2$l (D_d_bool_fun_fun$ D_c_bool_fun_fun$ D_d_tllist$ D_c_tllist$ )Bool )
(declare-fun tllist_all2$m (D_d_bool_fun_fun$ D_a_bool_fun_fun$ D_d_tllist$ D_a_tllist$ )Bool )
(declare-fun tllist_all2$n (D_d_bool_fun_fun$ D_b_bool_fun_fun$ D_d_tllist$ D_b_tllist$ )Bool )
(declare-fun tllist_all2$o (D_d_bool_fun_fun$ C_d_bool_fun_fun$ D_c_tllist$ D_d_tllist$ )Bool )
(declare-fun tllist_all2$p (D_d_bool_fun_fun$ C_c_bool_fun_fun$ D_c_tllist$ D_c_tllist$ )Bool )
(declare-fun tllist_all2$q (D_d_bool_fun_fun$ C_a_bool_fun_fun$ D_c_tllist$ D_a_tllist$ )Bool )
(declare-fun tllist_all2$r (D_d_bool_fun_fun$ C_b_bool_fun_fun$ D_c_tllist$ D_b_tllist$ )Bool )
(declare-fun tllist_all2$s (D_d_bool_fun_fun$ A_d_bool_fun_fun$ D_a_tllist$ D_d_tllist$ )Bool )
(declare-fun tllist_all2$t (A_c_tllist_b_d_tllist_bool_fun_fun$ A_c_tllist_b_d_tllist_bool_fun_fun$ )A_c_tllist_a_c_tllist_tllist_b_d_tllist_b_d_tllist_tllist_bool_fun_fun$ )
(declare-fun corec_tllist$a ()D_bool_fun_d_d_fun_d_b_fun_d_bool_fun_d_b_d_tllist_fun_d_d_fun_d_b_d_tllist_fun_fun_fun_fun_fun_fun_fun$ )
(declare-fun corec_tllist$b ()C_bool_fun_c_a_c_tllist_fun_c_a_c_tllist_fun_c_bool_fun_c_a_c_tllist_a_c_tllist_tllist_fun_c_c_fun_c_a_c_tllist_a_c_tllist_tllist_fun_fun_fun_fun_fun_fun_fun$ )
(declare-fun corec_tllist$c ()D_bool_fun_d_b_d_tllist_fun_d_b_d_tllist_fun_d_bool_fun_d_b_d_tllist_b_d_tllist_tllist_fun_d_d_fun_d_b_d_tllist_b_d_tllist_tllist_fun_fun_fun_fun_fun_fun_fun$ )
(assert (! (forall ((?v0 D$ ))(! (= (fun_app$ uuh$ ?v0 )(tNil$a ?v0 )):pattern ((fun_app$ uuh$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$a uug$ ?v0 )(tNil$ ?v0 )):pattern ((fun_app$a uug$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 D_set$ )(?v1 D$ ))(! (= (fun_app$b (uui$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$b (uui$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 C_set$ )(?v1 C$ ))(! (= (fun_app$c (uuj$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$c (uuj$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B$ ))(! (= (fun_app$d (uul$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$d (uul$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A$ ))(! (= (fun_app$e (uuk$ ?v0 )?v1 )(member$c ?v1 ?v0 )):pattern ((fun_app$e (uuk$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ ))(! (= (fun_app$f (fun_app$g uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uud$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ ))(! (= (fun_app$h (fun_app$i uuf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uuf$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_a_tllist$ )(?v1 A_a_tllist$ ))(! (= (fun_app$j (fun_app$k uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uua$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(! (= (fun_app$l (fun_app$m uum$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uum$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (fun_app$b (fun_app$n uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$n uuc$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$c (fun_app$o uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$c (fun_app$o uue$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$d (fun_app$p uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$p uub$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$e (fun_app$q uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$e (fun_app$q uu$ ?v0 )?v1 )))):named a13 ))
(assert (! (not (= (fun_app$f (fun_app$r (tllist_all2$ p$ q$ )(tCons$ x$ ts$ ))ts$a )(exists ((?v0 B$ )(?v1 B_d_tllist$ ))(and (= ts$a (tCons$a ?v0 ?v1 ))(and (fun_app$d (fun_app$s p$ x$ )?v0 )(fun_app$f (fun_app$r (tllist_all2$ p$ q$ )ts$ )?v1 )))))):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ )(?v2 A$ )(?v3 A_c_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a15 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ )(?v2 B$ )(?v3 B_d_tllist$ ))(= (= (tCons$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a16 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 A$ )(?v3 A_b_tllist$ )(?v4 A$ )(?v5 A_a_tllist$ ))(! (= (tllist_all2$a ?v0 ?v1 (tCons$b ?v2 ?v3 )(tCons$c ?v4 ?v5 ))(and (fun_app$e (fun_app$q ?v0 ?v2 )?v4 )(tllist_all2$a ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$a ?v0 ?v1 (tCons$b ?v2 ?v3 )(tCons$c ?v4 ?v5 ))))):named a17 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 A$ )(?v5 A_d_tllist$ ))(! (= (tllist_all2$b ?v0 ?v1 (tCons$c ?v2 ?v3 )(tCons$d ?v4 ?v5 ))(and (fun_app$e (fun_app$q ?v0 ?v2 )?v4 )(tllist_all2$b ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$b ?v0 ?v1 (tCons$c ?v2 ?v3 )(tCons$d ?v4 ?v5 ))))):named a18 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 A$ )(?v5 A_c_tllist$ ))(! (= (tllist_all2$c ?v0 ?v1 (tCons$c ?v2 ?v3 )(tCons$ ?v4 ?v5 ))(and (fun_app$e (fun_app$q ?v0 ?v2 )?v4 )(tllist_all2$c ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$c ?v0 ?v1 (tCons$c ?v2 ?v3 )(tCons$ ?v4 ?v5 ))))):named a19 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 A$ )(?v5 A_b_tllist$ ))(! (= (tllist_all2$d ?v0 ?v1 (tCons$c ?v2 ?v3 )(tCons$b ?v4 ?v5 ))(and (fun_app$e (fun_app$q ?v0 ?v2 )?v4 )(tllist_all2$d ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$d ?v0 ?v1 (tCons$c ?v2 ?v3 )(tCons$b ?v4 ?v5 ))))):named a20 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 A$ )(?v5 A_a_tllist$ ))(! (= (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1 )(tCons$c ?v2 ?v3 ))(tCons$c ?v4 ?v5 ))(and (fun_app$e (fun_app$q ?v0 ?v2 )?v4 )(fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1 )(tCons$c ?v2 ?v3 ))(tCons$c ?v4 ?v5 ))))):named a21 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 A$ )(?v5 A_c_tllist$ ))(! (= (fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))(and (fun_app$e (fun_app$q ?v0 ?v2 )?v4 )(fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))))):named a22 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 A$ )(?v5 A_c_tllist$ ))(! (= (fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))(and (fun_app$e (fun_app$u ?v0 ?v2 )?v4 )(fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))))):named a23 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 B$ )(?v5 B_d_tllist$ ))(! (= (fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))(and (fun_app$d (fun_app$p ?v0 ?v2 )?v4 )(fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))))):named a24 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 B$ )(?v5 B_d_tllist$ ))(! (= (fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))(and (fun_app$d (fun_app$s ?v0 ?v2 )?v4 )(fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))))):named a25 ))
(assert (! (= (tllist_all2$e uu$ uu$ )uua$ ):named a26 ))
(assert (! (= (tllist_all2$h uub$ uuc$ )uud$ ):named a27 ))
(assert (! (= (tllist_all2$f uu$ uue$ )uuf$ ):named a28 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 B_a_bool_fun_fun$ )(?v4 A_b_tllist$ )(?v5 A_a_tllist$ ))(=> (and (fun_app$e (fun_app$q ?v0 ?v1 )?v2 )(tllist_all2$a ?v0 ?v3 ?v4 ?v5 ))(tllist_all2$a ?v0 ?v3 (tCons$b ?v1 ?v4 )(tCons$c ?v2 ?v5 )))):named a29 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 A_d_bool_fun_fun$ )(?v4 A_a_tllist$ )(?v5 A_d_tllist$ ))(=> (and (fun_app$e (fun_app$q ?v0 ?v1 )?v2 )(tllist_all2$b ?v0 ?v3 ?v4 ?v5 ))(tllist_all2$b ?v0 ?v3 (tCons$c ?v1 ?v4 )(tCons$d ?v2 ?v5 )))):named a30 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 A_c_bool_fun_fun$ )(?v4 A_a_tllist$ )(?v5 A_c_tllist$ ))(=> (and (fun_app$e (fun_app$q ?v0 ?v1 )?v2 )(tllist_all2$c ?v0 ?v3 ?v4 ?v5 ))(tllist_all2$c ?v0 ?v3 (tCons$c ?v1 ?v4 )(tCons$ ?v2 ?v5 )))):named a31 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 A_b_bool_fun_fun$ )(?v4 A_a_tllist$ )(?v5 A_b_tllist$ ))(=> (and (fun_app$e (fun_app$q ?v0 ?v1 )?v2 )(tllist_all2$d ?v0 ?v3 ?v4 ?v5 ))(tllist_all2$d ?v0 ?v3 (tCons$c ?v1 ?v4 )(tCons$b ?v2 ?v5 )))):named a32 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_a_tllist$ )(?v5 A_a_tllist$ ))(=> (and (fun_app$e (fun_app$q ?v0 ?v1 )?v2 )(fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v3 )?v4 )?v5 ))(fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v3 )(tCons$c ?v1 ?v4 ))(tCons$c ?v2 ?v5 )))):named a33 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 C_c_bool_fun_fun$ )(?v4 A_c_tllist$ )(?v5 A_c_tllist$ ))(=> (and (fun_app$e (fun_app$q ?v0 ?v1 )?v2 )(fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v3 )?v4 )?v5 ))(fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v3 )(tCons$ ?v1 ?v4 ))(tCons$ ?v2 ?v5 )))):named a34 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B$ )(?v2 A$ )(?v3 D_c_bool_fun_fun$ )(?v4 B_d_tllist$ )(?v5 A_c_tllist$ ))(=> (and (fun_app$e (fun_app$u ?v0 ?v1 )?v2 )(fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v3 )?v4 )?v5 ))(fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v3 )(tCons$a ?v1 ?v4 ))(tCons$ ?v2 ?v5 )))):named a35 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B$ )(?v3 D_d_bool_fun_fun$ )(?v4 B_d_tllist$ )(?v5 B_d_tllist$ ))(=> (and (fun_app$d (fun_app$p ?v0 ?v1 )?v2 )(fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v3 )?v4 )?v5 ))(fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v3 )(tCons$a ?v1 ?v4 ))(tCons$a ?v2 ?v5 )))):named a36 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A$ )(?v2 B$ )(?v3 C_d_bool_fun_fun$ )(?v4 A_c_tllist$ )(?v5 B_d_tllist$ ))(=> (and (fun_app$d (fun_app$s ?v0 ?v1 )?v2 )(fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v3 )?v4 )?v5 ))(fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v3 )(tCons$ ?v1 ?v4 ))(tCons$a ?v2 ?v5 )))):named a37 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 C_bool_fun$ )(?v2 A$ )(?v3 A_c_tllist$ ))(! (= (pred_tllist$ ?v0 ?v1 (tCons$ ?v2 ?v3 ))(and (fun_app$e ?v0 ?v2 )(pred_tllist$ ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$ ?v0 ?v1 (tCons$ ?v2 ?v3 ))))):named a38 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 D_bool_fun$ )(?v2 B$ )(?v3 B_d_tllist$ ))(! (= (pred_tllist$a ?v0 ?v1 (tCons$a ?v2 ?v3 ))(and (fun_app$d ?v0 ?v2 )(pred_tllist$a ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$a ?v0 ?v1 (tCons$a ?v2 ?v3 ))))):named a39 ))
(assert (! (forall ((?v0 Unit_c_fun$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 A_c_tllist$ ))(! (= (fun_app$v (fun_app$w (tfilter$ ?v0 )?v1 )(tCons$ ?v2 ?v3 ))(ite (fun_app$e ?v1 ?v2 )(tCons$ ?v2 (fun_app$v (fun_app$w (tfilter$ ?v0 )?v1 )?v3 ))(fun_app$v (fun_app$w (tfilter$ ?v0 )?v1 )?v3 ))):pattern ((fun_app$v (fun_app$w (tfilter$ ?v0 )?v1 )(tCons$ ?v2 ?v3 ))))):named a40 ))
(assert (! (forall ((?v0 Unit_d_fun$ )(?v1 B_bool_fun$ )(?v2 B$ )(?v3 B_d_tllist$ ))(! (= (fun_app$x (fun_app$y (tfilter$a ?v0 )?v1 )(tCons$a ?v2 ?v3 ))(ite (fun_app$d ?v1 ?v2 )(tCons$a ?v2 (fun_app$x (fun_app$y (tfilter$a ?v0 )?v1 )?v3 ))(fun_app$x (fun_app$y (tfilter$a ?v0 )?v1 )?v3 ))):pattern ((fun_app$x (fun_app$y (tfilter$a ?v0 )?v1 )(tCons$a ?v2 ?v3 ))))):named a41 ))
(assert (! (forall ((?v0 C$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 A_c_tllist$ ))(! (= (fun_app$v (fun_app$w (tfilter$b ?v0 )?v1 )(tCons$ ?v2 ?v3 ))(ite (fun_app$e ?v1 ?v2 )(tCons$ ?v2 (fun_app$v (fun_app$w (tfilter$b ?v0 )?v1 )?v3 ))(fun_app$v (fun_app$w (tfilter$b ?v0 )?v1 )?v3 ))):pattern ((fun_app$v (fun_app$w (tfilter$b ?v0 )?v1 )(tCons$ ?v2 ?v3 ))))):named a42 ))
(assert (! (forall ((?v0 D$ )(?v1 B_bool_fun$ )(?v2 B$ )(?v3 B_d_tllist$ ))(! (= (fun_app$x (fun_app$y (tfilter$c ?v0 )?v1 )(tCons$a ?v2 ?v3 ))(ite (fun_app$d ?v1 ?v2 )(tCons$a ?v2 (fun_app$x (fun_app$y (tfilter$c ?v0 )?v1 )?v3 ))(fun_app$x (fun_app$y (tfilter$c ?v0 )?v1 )?v3 ))):pattern ((fun_app$x (fun_app$y (tfilter$c ?v0 )?v1 )(tCons$a ?v2 ?v3 ))))):named a43 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ )(?v2 C_a_c_tllist_fun$ ))(! (= (fun_app$z (tappend$ (tCons$ ?v0 ?v1 ))?v2 )(tCons$ ?v0 (fun_app$z (tappend$ ?v1 )?v2 ))):pattern ((fun_app$z (tappend$ (tCons$ ?v0 ?v1 ))?v2 )))):named a44 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ )(?v2 D_b_d_tllist_fun$ ))(! (= (fun_app$aa (tappend$a (tCons$a ?v0 ?v1 ))?v2 )(tCons$a ?v0 (fun_app$aa (tappend$a ?v1 )?v2 ))):pattern ((fun_app$aa (tappend$a (tCons$a ?v0 ?v1 ))?v2 )))):named a45 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (and (fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v4 C$ )(?v5 C$ ))(=> (and (= ?v2 (tNil$ ?v4 ))(and (= ?v3 (tNil$ ?v5 ))(fun_app$c (fun_app$o ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A$ )(?v5 A_c_tllist$ )(?v6 A$ )(?v7 A_c_tllist$ ))(=> (and (= ?v2 (tCons$ ?v4 ?v5 ))(and (= ?v3 (tCons$ ?v6 ?v7 ))(and (fun_app$e (fun_app$q ?v0 ?v4 )?v6 )(fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v1 )?v5 )?v7 ))))false ))))false )):named a46 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (and (fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v4 D$ )(?v5 C$ ))(=> (and (= ?v2 (tNil$a ?v4 ))(and (= ?v3 (tNil$ ?v5 ))(fun_app$c (fun_app$ab ?v1 ?v4 )?v5 )))false ))(forall ((?v4 B$ )(?v5 B_d_tllist$ )(?v6 A$ )(?v7 A_c_tllist$ ))(=> (and (= ?v2 (tCons$a ?v4 ?v5 ))(and (= ?v3 (tCons$ ?v6 ?v7 ))(and (fun_app$e (fun_app$u ?v0 ?v4 )?v6 )(fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v1 )?v5 )?v7 ))))false ))))false )):named a47 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (and (fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v4 D$ )(?v5 D$ ))(=> (and (= ?v2 (tNil$a ?v4 ))(and (= ?v3 (tNil$a ?v5 ))(fun_app$b (fun_app$n ?v1 ?v4 )?v5 )))false ))(forall ((?v4 B$ )(?v5 B_d_tllist$ )(?v6 B$ )(?v7 B_d_tllist$ ))(=> (and (= ?v2 (tCons$a ?v4 ?v5 ))(and (= ?v3 (tCons$a ?v6 ?v7 ))(and (fun_app$d (fun_app$p ?v0 ?v4 )?v6 )(fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v1 )?v5 )?v7 ))))false ))))false )):named a48 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (and (fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v4 C$ )(?v5 D$ ))(=> (and (= ?v2 (tNil$ ?v4 ))(and (= ?v3 (tNil$a ?v5 ))(fun_app$b (fun_app$ac ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A$ )(?v5 A_c_tllist$ )(?v6 B$ )(?v7 B_d_tllist$ ))(=> (and (= ?v2 (tCons$ ?v4 ?v5 ))(and (= ?v3 (tCons$a ?v6 ?v7 ))(and (fun_app$d (fun_app$s ?v0 ?v4 )?v6 )(fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )?v5 )?v7 ))))false ))))false )):named a49 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 A_a_tllist$ ))(=> (and (tllist_all2$a ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 B$ )(?v5 A$ ))(=> (and (= ?v2 (tNil$b ?v4 ))(and (= ?v3 (tNil$c ?v5 ))(fun_app$e (fun_app$u ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A$ )(?v5 A_b_tllist$ )(?v6 A$ )(?v7 A_a_tllist$ ))(=> (and (= ?v2 (tCons$b ?v4 ?v5 ))(and (= ?v3 (tCons$c ?v6 ?v7 ))(and (fun_app$e (fun_app$q ?v0 ?v4 )?v6 )(tllist_all2$a ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a50 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_d_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 A_d_tllist$ ))(=> (and (tllist_all2$b ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 A$ )(?v5 D$ ))(=> (and (= ?v2 (tNil$c ?v4 ))(and (= ?v3 (tNil$d ?v5 ))(fun_app$b (fun_app$ad ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A$ )(?v5 A_a_tllist$ )(?v6 A$ )(?v7 A_d_tllist$ ))(=> (and (= ?v2 (tCons$c ?v4 ?v5 ))(and (= ?v3 (tCons$d ?v6 ?v7 ))(and (fun_app$e (fun_app$q ?v0 ?v4 )?v6 )(tllist_all2$b ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a51 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 A_c_tllist$ ))(=> (and (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 A$ )(?v5 C$ ))(=> (and (= ?v2 (tNil$c ?v4 ))(and (= ?v3 (tNil$ ?v5 ))(fun_app$c (fun_app$ae ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A$ )(?v5 A_a_tllist$ )(?v6 A$ )(?v7 A_c_tllist$ ))(=> (and (= ?v2 (tCons$c ?v4 ?v5 ))(and (= ?v3 (tCons$ ?v6 ?v7 ))(and (fun_app$e (fun_app$q ?v0 ?v4 )?v6 )(tllist_all2$c ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a52 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 A_b_tllist$ ))(=> (and (tllist_all2$d ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 A$ )(?v5 B$ ))(=> (and (= ?v2 (tNil$c ?v4 ))(and (= ?v3 (tNil$b ?v5 ))(fun_app$d (fun_app$s ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A$ )(?v5 A_a_tllist$ )(?v6 A$ )(?v7 A_b_tllist$ ))(=> (and (= ?v2 (tCons$c ?v4 ?v5 ))(and (= ?v3 (tCons$b ?v6 ?v7 ))(and (fun_app$e (fun_app$q ?v0 ?v4 )?v6 )(tllist_all2$d ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a53 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 A_a_tllist$ ))(=> (and (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v4 A$ )(?v5 A$ ))(=> (and (= ?v2 (tNil$c ?v4 ))(and (= ?v3 (tNil$c ?v5 ))(fun_app$e (fun_app$q ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A$ )(?v5 A_a_tllist$ )(?v6 A$ )(?v7 A_a_tllist$ ))(=> (and (= ?v2 (tCons$c ?v4 ?v5 ))(and (= ?v3 (tCons$c ?v6 ?v7 ))(and (fun_app$e (fun_app$q ?v0 ?v4 )?v6 )(fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1 )?v5 )?v7 ))))false ))))false )):named a54 ))
(assert (! (forall ((?v0 B_llist_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_llist_d_tllist$ )(?v3 A_c_tllist$ ))(=> (and (tllist_all2$i ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 D$ )(?v5 C$ ))(=> (and (= ?v2 (tNil$e ?v4 ))(and (= ?v3 (tNil$ ?v5 ))(fun_app$c (fun_app$ab ?v1 ?v4 )?v5 )))false ))(forall ((?v4 B_llist$ )(?v5 B_llist_d_tllist$ )(?v6 A$ )(?v7 A_c_tllist$ ))(=> (and (= ?v2 (tCons$e ?v4 ?v5 ))(and (= ?v3 (tCons$ ?v6 ?v7 ))(and (fun_app$e (fun_app$af ?v0 ?v4 )?v6 )(tllist_all2$i ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a55 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 D$ ))(not (fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tNil$a ?v4 )))):named a56 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 D$ ))(not (fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tNil$a ?v4 )))):named a57 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 C$ ))(not (fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tNil$ ?v4 )))):named a58 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 C$ ))(not (fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tNil$ ?v4 )))):named a59 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 A$ )(?v3 A_b_tllist$ )(?v4 A$ ))(not (tllist_all2$a ?v0 ?v1 (tCons$b ?v2 ?v3 )(tNil$c ?v4 )))):named a60 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 D$ ))(not (tllist_all2$b ?v0 ?v1 (tCons$c ?v2 ?v3 )(tNil$d ?v4 )))):named a61 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 C$ ))(not (tllist_all2$c ?v0 ?v1 (tCons$c ?v2 ?v3 )(tNil$ ?v4 )))):named a62 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 B$ ))(not (tllist_all2$d ?v0 ?v1 (tCons$c ?v2 ?v3 )(tNil$b ?v4 )))):named a63 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 A$ ))(not (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1 )(tCons$c ?v2 ?v3 ))(tNil$c ?v4 )))):named a64 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 D$ ))(not (tllist_all2$j ?v0 ?v1 (tCons$ ?v2 ?v3 )(tNil$e ?v4 )))):named a65 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 B$ )(?v4 B_d_tllist$ ))(not (fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )(tNil$ ?v2 ))(tCons$a ?v3 ?v4 )))):named a66 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 B$ )(?v4 B_d_tllist$ ))(not (fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v1 )(tNil$a ?v2 ))(tCons$a ?v3 ?v4 )))):named a67 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 A$ )(?v4 A_c_tllist$ ))(not (fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v1 )(tNil$a ?v2 ))(tCons$ ?v3 ?v4 )))):named a68 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 A$ )(?v4 A_c_tllist$ ))(not (fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v1 )(tNil$ ?v2 ))(tCons$ ?v3 ?v4 )))):named a69 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B$ )(?v3 A$ )(?v4 A_a_tllist$ ))(not (tllist_all2$a ?v0 ?v1 (tNil$b ?v2 )(tCons$c ?v3 ?v4 )))):named a70 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_d_bool_fun_fun$ )(?v2 A$ )(?v3 A$ )(?v4 A_d_tllist$ ))(not (tllist_all2$b ?v0 ?v1 (tNil$c ?v2 )(tCons$d ?v3 ?v4 )))):named a71 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ )(?v2 A$ )(?v3 A$ )(?v4 A_c_tllist$ ))(not (tllist_all2$c ?v0 ?v1 (tNil$c ?v2 )(tCons$ ?v3 ?v4 )))):named a72 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 A$ )(?v4 A_b_tllist$ ))(not (tllist_all2$d ?v0 ?v1 (tNil$c ?v2 )(tCons$b ?v3 ?v4 )))):named a73 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ )(?v4 A_a_tllist$ ))(not (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1 )(tNil$c ?v2 ))(tCons$c ?v3 ?v4 )))):named a74 ))
(assert (! (forall ((?v0 B_llist_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 A$ )(?v4 A_c_tllist$ ))(not (tllist_all2$i ?v0 ?v1 (tNil$e ?v2 )(tCons$ ?v3 ?v4 )))):named a75 ))
(assert (! (forall ((?v0 C_a_c_tllist_fun$ )(?v1 A_a_c_tllist_a_c_tllist_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ ))(! (= (fun_app$v (fun_app$ag (fun_app$ah case_tllist$ ?v0 )?v1 )(tCons$ ?v2 ?v3 ))(fun_app$v (fun_app$ai ?v1 ?v2 )?v3 )):pattern ((fun_app$v (fun_app$ag (fun_app$ah case_tllist$ ?v0 )?v1 )(tCons$ ?v2 ?v3 ))))):named a76 ))
(assert (! (forall ((?v0 D_b_d_tllist_fun$ )(?v1 B_b_d_tllist_b_d_tllist_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ ))(! (= (fun_app$x (fun_app$aj (fun_app$ak case_tllist$a ?v0 )?v1 )(tCons$a ?v2 ?v3 ))(fun_app$x (fun_app$al ?v1 ?v2 )?v3 )):pattern ((fun_app$x (fun_app$aj (fun_app$ak case_tllist$a ?v0 )?v1 )(tCons$a ?v2 ?v3 ))))):named a77 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 C$ )(?v2 C_c_fun$ )(?v3 C_a_fun$ )(?v4 C_bool_fun$ )(?v5 C_a_c_tllist_fun$ )(?v6 C_c_fun$ ))(=> (not (fun_app$c ?v0 ?v1 ))(= (fun_app$a (fun_app$am (fun_app$an (fun_app$ao (fun_app$ap (fun_app$aq (fun_app$ar corec_tllist$ ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 )(tCons$ (fun_app$as ?v3 ?v1 )(ite (fun_app$c ?v4 ?v1 )(fun_app$a ?v5 ?v1 )(fun_app$a (fun_app$am (fun_app$an (fun_app$ao (fun_app$ap (fun_app$aq (fun_app$ar corec_tllist$ ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )(fun_app$at ?v6 ?v1 ))))))):named a78 ))
(assert (! (forall ((?v0 D_bool_fun$ )(?v1 D$ )(?v2 D_d_fun$ )(?v3 D_b_fun$ )(?v4 D_bool_fun$ )(?v5 D_b_d_tllist_fun$ )(?v6 D_d_fun$ ))(=> (not (fun_app$b ?v0 ?v1 ))(= (fun_app$ (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax (fun_app$ay (fun_app$az corec_tllist$a ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 )(tCons$a (fun_app$ba ?v3 ?v1 )(ite (fun_app$b ?v4 ?v1 )(fun_app$ ?v5 ?v1 )(fun_app$ (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax (fun_app$ay (fun_app$az corec_tllist$a ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )(fun_app$bb ?v6 ?v1 ))))))):named a79 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 C$ )(?v2 C_a_c_tllist_fun$ )(?v3 C_a_c_tllist_fun$ )(?v4 C_bool_fun$ )(?v5 C_a_c_tllist_a_c_tllist_tllist_fun$ )(?v6 C_c_fun$ ))(=> (not (fun_app$c ?v0 ?v1 ))(= (fun_app$bc (fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_tllist$b ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 )(tCons$f (fun_app$a ?v3 ?v1 )(ite (fun_app$c ?v4 ?v1 )(fun_app$bc ?v5 ?v1 )(fun_app$bc (fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_tllist$b ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )(fun_app$at ?v6 ?v1 ))))))):named a80 ))
(assert (! (forall ((?v0 D_bool_fun$ )(?v1 D$ )(?v2 D_b_d_tllist_fun$ )(?v3 D_b_d_tllist_fun$ )(?v4 D_bool_fun$ )(?v5 D_b_d_tllist_b_d_tllist_tllist_fun$ )(?v6 D_d_fun$ ))(=> (not (fun_app$b ?v0 ?v1 ))(= (fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo (fun_app$bp corec_tllist$c ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )?v1 )(tCons$g (fun_app$ ?v3 ?v1 )(ite (fun_app$b ?v4 ?v1 )(fun_app$bj ?v5 ?v1 )(fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo (fun_app$bp corec_tllist$c ?v0 )?v2 )?v3 )?v4 )?v5 )?v6 )(fun_app$bb ?v6 ?v1 ))))))):named a81 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(! (= (set2_tllist$ (tCons$h ?v0 ?v1 ))(set2_tllist$ ?v1 )):pattern ((tCons$h ?v0 ?v1 )))):named a82 ))
(assert (! (forall ((?v0 A$ )(?v1 A_d_tllist$ ))(! (= (set2_tllist$a (tCons$d ?v0 ?v1 ))(set2_tllist$a ?v1 )):pattern ((tCons$d ?v0 ?v1 )))):named a83 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(! (= (set2_tllist$b (tCons$b ?v0 ?v1 ))(set2_tllist$b ?v1 )):pattern ((tCons$b ?v0 ?v1 )))):named a84 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ ))(! (= (set2_tllist$c (tCons$c ?v0 ?v1 ))(set2_tllist$c ?v1 )):pattern ((tCons$c ?v0 ?v1 )))):named a85 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ ))(! (= (set2_tllist$d (tCons$ ?v0 ?v1 ))(set2_tllist$d ?v1 )):pattern ((tCons$ ?v0 ?v1 )))):named a86 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ ))(! (= (set2_tllist$e (tCons$a ?v0 ?v1 ))(set2_tllist$e ?v1 )):pattern ((tCons$a ?v0 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 C$ )(?v1 A_c_tllist$ )(?v2 A$ ))(=> (member$a ?v0 (set2_tllist$d ?v1 ))(member$a ?v0 (set2_tllist$d (tCons$ ?v2 ?v1 ))))):named a88 ))
(assert (! (forall ((?v0 D$ )(?v1 B_d_tllist$ )(?v2 B$ ))(=> (member$ ?v0 (set2_tllist$e ?v1 ))(member$ ?v0 (set2_tllist$e (tCons$a ?v2 ?v1 ))))):named a89 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(= (= (tNil$ ?v0 )(tNil$ ?v1 ))(= ?v0 ?v1 ))):named a90 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(= (= (tNil$a ?v0 )(tNil$a ?v1 ))(= ?v0 ?v1 ))):named a91 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 D$ ))(! (= (fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))(fun_app$b (fun_app$n ?v1 ?v2 )?v3 )):pattern ((fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))))):named a92 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 C$ ))(! (= (fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v1 )(tNil$a ?v2 ))(tNil$ ?v3 ))(fun_app$c (fun_app$ab ?v1 ?v2 )?v3 )):pattern ((fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v1 )(tNil$a ?v2 ))(tNil$ ?v3 ))))):named a93 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 C$ ))(! (= (fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))(fun_app$c (fun_app$o ?v1 ?v2 )?v3 )):pattern ((fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))))):named a94 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )(tNil$ ?v2 ))(tNil$a ?v3 ))(fun_app$b (fun_app$ac ?v1 ?v2 )?v3 )):pattern ((fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )(tNil$ ?v2 ))(tNil$a ?v3 ))))):named a95 ))
(assert (! (forall ((?v0 C$ )(?v1 C_a_c_tllist_fun$ ))(! (= (fun_app$z (tappend$ (tNil$ ?v0 ))?v1 )(fun_app$a ?v1 ?v0 )):pattern ((fun_app$z (tappend$ (tNil$ ?v0 ))?v1 )))):named a96 ))
(assert (! (forall ((?v0 D$ )(?v1 D_b_d_tllist_fun$ ))(! (= (fun_app$aa (tappend$a (tNil$a ?v0 ))?v1 )(fun_app$ ?v1 ?v0 )):pattern ((fun_app$aa (tappend$a (tNil$a ?v0 ))?v1 )))):named a97 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(! (= (fun_app$z (tappend$ ?v0 )uug$ )?v0 ):pattern ((tappend$ ?v0 )))):named a98 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(! (= (fun_app$aa (tappend$a ?v0 )uuh$ )?v0 ):pattern ((tappend$a ?v0 )))):named a99 ))
(assert (! (forall ((?v0 C$ )(?v1 A_bool_fun$ )(?v2 C$ ))(! (= (fun_app$v (fun_app$w (tfilter$b ?v0 )?v1 )(tNil$ ?v2 ))(tNil$ ?v2 )):pattern ((fun_app$v (fun_app$w (tfilter$b ?v0 )?v1 )(tNil$ ?v2 ))))):named a100 ))
(assert (! (forall ((?v0 D$ )(?v1 B_bool_fun$ )(?v2 D$ ))(! (= (fun_app$x (fun_app$y (tfilter$c ?v0 )?v1 )(tNil$a ?v2 ))(tNil$a ?v2 )):pattern ((fun_app$x (fun_app$y (tfilter$c ?v0 )?v1 )(tNil$a ?v2 ))))):named a101 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 C_bool_fun$ )(?v2 C$ ))(! (= (pred_tllist$ ?v0 ?v1 (tNil$ ?v2 ))(fun_app$c ?v1 ?v2 )):pattern ((pred_tllist$ ?v0 ?v1 (tNil$ ?v2 ))))):named a102 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 D_bool_fun$ )(?v2 D$ ))(! (= (pred_tllist$a ?v0 ?v1 (tNil$a ?v2 ))(fun_app$b ?v1 ?v2 )):pattern ((pred_tllist$a ?v0 ?v1 (tNil$a ?v2 ))))):named a103 ))
(assert (! (forall ((?v0 Unit_c_fun$ )(?v1 A_bool_fun$ )(?v2 C$ ))(! (= (fun_app$v (fun_app$w (tfilter$ ?v0 )?v1 )(tNil$ ?v2 ))(tNil$ ?v2 )):pattern ((fun_app$v (fun_app$w (tfilter$ ?v0 )?v1 )(tNil$ ?v2 ))))):named a104 ))
(assert (! (forall ((?v0 Unit_d_fun$ )(?v1 B_bool_fun$ )(?v2 D$ ))(! (= (fun_app$x (fun_app$y (tfilter$a ?v0 )?v1 )(tNil$a ?v2 ))(tNil$a ?v2 )):pattern ((fun_app$x (fun_app$y (tfilter$a ?v0 )?v1 )(tNil$a ?v2 ))))):named a105 ))
(assert (! (forall ((?v0 D$ ))(member$ ?v0 (set2_tllist$e (tNil$a ?v0 )))):named a106 ))
(assert (! (forall ((?v0 C$ ))(member$a ?v0 (set2_tllist$d (tNil$ ?v0 )))):named a107 ))
(assert (! (forall ((?v0 C$ )(?v1 A_c_tllist$ )(?v2 C_a_c_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (set2_tllist$d ?v1 ))(and (forall ((?v3 C$ ))(fun_app$h (fun_app$bq ?v2 ?v3 )(tNil$ ?v3 )))(forall ((?v3 A$ )(?v4 A_c_tllist$ )(?v5 C$ ))(=> (and (member$a ?v5 (set2_tllist$d ?v4 ))(fun_app$h (fun_app$bq ?v2 ?v5 )?v4 ))(fun_app$h (fun_app$bq ?v2 ?v5 )(tCons$ ?v3 ?v4 ))))))(fun_app$h (fun_app$bq ?v2 ?v0 )?v1 ))):named a108 ))
(assert (! (forall ((?v0 D$ )(?v1 B_d_tllist$ )(?v2 D_b_d_tllist_bool_fun_fun$ ))(=> (and (member$ ?v0 (set2_tllist$e ?v1 ))(and (forall ((?v3 D$ ))(fun_app$f (fun_app$br ?v2 ?v3 )(tNil$a ?v3 )))(forall ((?v3 B$ )(?v4 B_d_tllist$ )(?v5 D$ ))(=> (and (member$ ?v5 (set2_tllist$e ?v4 ))(fun_app$f (fun_app$br ?v2 ?v5 )?v4 ))(fun_app$f (fun_app$br ?v2 ?v5 )(tCons$a ?v3 ?v4 ))))))(fun_app$f (fun_app$br ?v2 ?v0 )?v1 ))):named a109 ))
(assert (! (forall ((?v0 C$ )(?v1 A_c_tllist$ ))(=> (and (member$a ?v0 (set2_tllist$d ?v1 ))(and (=> (= ?v1 (tNil$ ?v0 ))false )(forall ((?v2 A$ )(?v3 A_c_tllist$ ))(=> (and (= ?v1 (tCons$ ?v2 ?v3 ))(member$a ?v0 (set2_tllist$d ?v3 )))false ))))false )):named a110 ))
(assert (! (forall ((?v0 D$ )(?v1 B_d_tllist$ ))(=> (and (member$ ?v0 (set2_tllist$e ?v1 ))(and (=> (= ?v1 (tNil$a ?v0 ))false )(forall ((?v2 B$ )(?v3 B_d_tllist$ ))(=> (and (= ?v1 (tCons$a ?v2 ?v3 ))(member$ ?v0 (set2_tllist$e ?v3 )))false ))))false )):named a111 ))
(assert (! (forall ((?v0 C$ )(?v1 A$ )(?v2 A_c_tllist$ ))(not (= (tNil$ ?v0 )(tCons$ ?v1 ?v2 )))):named a112 ))
(assert (! (forall ((?v0 D$ )(?v1 B$ )(?v2 B_d_tllist$ ))(not (= (tNil$a ?v0 )(tCons$a ?v1 ?v2 )))):named a113 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(=> (and (forall ((?v1 C$ ))(=> (= ?v0 (tNil$ ?v1 ))false ))(forall ((?v1 A$ )(?v2 A_c_tllist$ ))(=> (= ?v0 (tCons$ ?v1 ?v2 ))false )))false )):named a114 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(=> (and (forall ((?v1 D$ ))(=> (= ?v0 (tNil$a ?v1 ))false ))(forall ((?v1 B$ )(?v2 B_d_tllist$ ))(=> (= ?v0 (tCons$a ?v1 ?v2 ))false )))false )):named a115 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D$ )(?v2 D$ )(?v3 B_b_bool_fun_fun$ ))(=> (fun_app$b (fun_app$n ?v0 ?v1 )?v2 )(fun_app$f (fun_app$g (tllist_all2$h ?v3 ?v0 )(tNil$a ?v1 ))(tNil$a ?v2 )))):named a116 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D$ )(?v2 C$ )(?v3 B_a_bool_fun_fun$ ))(=> (fun_app$c (fun_app$ab ?v0 ?v1 )?v2 )(fun_app$h (fun_app$t (tllist_all2$g ?v3 ?v0 )(tNil$a ?v1 ))(tNil$ ?v2 )))):named a117 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C$ )(?v2 C$ )(?v3 A_a_bool_fun_fun$ ))(=> (fun_app$c (fun_app$o ?v0 ?v1 )?v2 )(fun_app$h (fun_app$i (tllist_all2$f ?v3 ?v0 )(tNil$ ?v1 ))(tNil$ ?v2 )))):named a118 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C$ )(?v2 D$ )(?v3 A_b_bool_fun_fun$ ))(=> (fun_app$b (fun_app$ac ?v0 ?v1 )?v2 )(fun_app$f (fun_app$r (tllist_all2$ ?v3 ?v0 )(tNil$ ?v1 ))(tNil$a ?v2 )))):named a119 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 D$ ))(= (fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v1 )?v2 )(tNil$a ?v3 ))(exists ((?v4 D$ ))(and (= ?v2 (tNil$a ?v4 ))(fun_app$b (fun_app$n ?v1 ?v4 )?v3 ))))):named a120 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 C$ ))(= (fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v1 )?v2 )(tNil$ ?v3 ))(exists ((?v4 D$ ))(and (= ?v2 (tNil$a ?v4 ))(fun_app$c (fun_app$ab ?v1 ?v4 )?v3 ))))):named a121 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 C$ ))(= (fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v1 )?v2 )(tNil$ ?v3 ))(exists ((?v4 C$ ))(and (= ?v2 (tNil$ ?v4 ))(fun_app$c (fun_app$o ?v1 ?v4 )?v3 ))))):named a122 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 D$ ))(= (fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )?v2 )(tNil$a ?v3 ))(exists ((?v4 C$ ))(and (= ?v2 (tNil$ ?v4 ))(fun_app$b (fun_app$ac ?v1 ?v4 )?v3 ))))):named a123 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 B_d_tllist$ ))(= (fun_app$f (fun_app$g (tllist_all2$h ?v0 ?v1 )(tNil$a ?v2 ))?v3 )(exists ((?v4 D$ ))(and (= ?v3 (tNil$a ?v4 ))(fun_app$b (fun_app$n ?v1 ?v2 )?v4 ))))):named a124 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 A_c_tllist$ ))(= (fun_app$h (fun_app$t (tllist_all2$g ?v0 ?v1 )(tNil$a ?v2 ))?v3 )(exists ((?v4 C$ ))(and (= ?v3 (tNil$ ?v4 ))(fun_app$c (fun_app$ab ?v1 ?v2 )?v4 ))))):named a125 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 A_c_tllist$ ))(= (fun_app$h (fun_app$i (tllist_all2$f ?v0 ?v1 )(tNil$ ?v2 ))?v3 )(exists ((?v4 C$ ))(and (= ?v3 (tNil$ ?v4 ))(fun_app$c (fun_app$o ?v1 ?v2 )?v4 ))))):named a126 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 B_d_tllist$ ))(= (fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )(tNil$ ?v2 ))?v3 )(exists ((?v4 D$ ))(and (= ?v3 (tNil$a ?v4 ))(fun_app$b (fun_app$ac ?v1 ?v2 )?v4 ))))):named a127 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (tconcat$ ?v0 (tNil$i ?v1 ))(tNil$ ?v1 )):pattern ((tconcat$ ?v0 (tNil$i ?v1 ))))):named a128 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (tconcat$a ?v0 (tNil$e ?v1 ))(tNil$a ?v1 )):pattern ((tconcat$a ?v0 (tNil$e ?v1 ))))):named a129 ))
(assert (! (forall ((?v0 Unit_d_fun$ ))(! (= (tfilter$a ?v0 )(tfilter$c (fun_app$bs ?v0 unity$ ))):pattern ((tfilter$a ?v0 )))):named a130 ))
(assert (! (forall ((?v0 Unit_c_fun$ ))(! (= (tfilter$ ?v0 )(tfilter$b (fun_app$bt ?v0 unity$ ))):pattern ((tfilter$ ?v0 )))):named a131 ))
(assert (! (forall ((?v0 Unit_c_fun$ )(?v1 C$ ))(! (= (tconcat$b ?v0 (tNil$i ?v1 ))(tNil$ ?v1 )):pattern ((tconcat$b ?v0 (tNil$i ?v1 ))))):named a132 ))
(assert (! (forall ((?v0 Unit_d_fun$ )(?v1 D$ ))(! (= (tconcat$c ?v0 (tNil$e ?v1 ))(tNil$a ?v1 )):pattern ((tconcat$c ?v0 (tNil$e ?v1 ))))):named a133 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ )(?v4 A_b_bool_fun_fun$ )(?v5 C_d_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$r (tllist_all2$ ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (and (member$c ?v6 (tset$ ?v2 ))(and (member$b ?v7 (tset$a ?v3 ))(fun_app$d (fun_app$s ?v0 ?v6 )?v7 )))(fun_app$d (fun_app$s ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 D$ ))(=> (and (member$a ?v6 (set2_tllist$d ?v2 ))(and (member$ ?v7 (set2_tllist$e ?v3 ))(fun_app$b (fun_app$ac ?v1 ?v6 )?v7 )))(fun_app$b (fun_app$ac ?v5 ?v6 )?v7 )))))(fun_app$f (fun_app$r (tllist_all2$ ?v4 ?v5 )?v2 )?v3 ))):named a134 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D_d_tllist$ )(?v3 D_d_tllist$ )(?v4 D_d_bool_fun_fun$ )(?v5 D_d_bool_fun_fun$ ))(=> (and (tllist_all2$k ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (tset$b ?v2 ))(and (member$ ?v7 (tset$b ?v3 ))(fun_app$b (fun_app$n ?v0 ?v6 )?v7 )))(fun_app$b (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (set2_tllist$f ?v2 ))(and (member$ ?v7 (set2_tllist$f ?v3 ))(fun_app$b (fun_app$n ?v1 ?v6 )?v7 )))(fun_app$b (fun_app$n ?v5 ?v6 )?v7 )))))(tllist_all2$k ?v4 ?v5 ?v2 ?v3 ))):named a135 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D_d_tllist$ )(?v3 D_c_tllist$ )(?v4 D_d_bool_fun_fun$ )(?v5 D_c_bool_fun_fun$ ))(=> (and (tllist_all2$l ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (tset$b ?v2 ))(and (member$ ?v7 (tset$c ?v3 ))(fun_app$b (fun_app$n ?v0 ?v6 )?v7 )))(fun_app$b (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 C$ ))(=> (and (member$ ?v6 (set2_tllist$f ?v2 ))(and (member$a ?v7 (set2_tllist$g ?v3 ))(fun_app$c (fun_app$ab ?v1 ?v6 )?v7 )))(fun_app$c (fun_app$ab ?v5 ?v6 )?v7 )))))(tllist_all2$l ?v4 ?v5 ?v2 ?v3 ))):named a136 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_a_bool_fun_fun$ )(?v2 D_d_tllist$ )(?v3 D_a_tllist$ )(?v4 D_d_bool_fun_fun$ )(?v5 D_a_bool_fun_fun$ ))(=> (and (tllist_all2$m ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (tset$b ?v2 ))(and (member$ ?v7 (tset$d ?v3 ))(fun_app$b (fun_app$n ?v0 ?v6 )?v7 )))(fun_app$b (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 A$ ))(=> (and (member$ ?v6 (set2_tllist$f ?v2 ))(and (member$c ?v7 (set2_tllist$h ?v3 ))(fun_app$e (fun_app$bu ?v1 ?v6 )?v7 )))(fun_app$e (fun_app$bu ?v5 ?v6 )?v7 )))))(tllist_all2$m ?v4 ?v5 ?v2 ?v3 ))):named a137 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 D_d_tllist$ )(?v3 D_b_tllist$ )(?v4 D_d_bool_fun_fun$ )(?v5 D_b_bool_fun_fun$ ))(=> (and (tllist_all2$n ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (tset$b ?v2 ))(and (member$ ?v7 (tset$e ?v3 ))(fun_app$b (fun_app$n ?v0 ?v6 )?v7 )))(fun_app$b (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 B$ ))(=> (and (member$ ?v6 (set2_tllist$f ?v2 ))(and (member$b ?v7 (set2_tllist$i ?v3 ))(fun_app$d (fun_app$bv ?v1 ?v6 )?v7 )))(fun_app$d (fun_app$bv ?v5 ?v6 )?v7 )))))(tllist_all2$n ?v4 ?v5 ?v2 ?v3 ))):named a138 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 D_d_tllist$ )(?v4 D_d_bool_fun_fun$ )(?v5 C_d_bool_fun_fun$ ))(=> (and (tllist_all2$o ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (tset$c ?v2 ))(and (member$ ?v7 (tset$b ?v3 ))(fun_app$b (fun_app$n ?v0 ?v6 )?v7 )))(fun_app$b (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 D$ ))(=> (and (member$a ?v6 (set2_tllist$g ?v2 ))(and (member$ ?v7 (set2_tllist$f ?v3 ))(fun_app$b (fun_app$ac ?v1 ?v6 )?v7 )))(fun_app$b (fun_app$ac ?v5 ?v6 )?v7 )))))(tllist_all2$o ?v4 ?v5 ?v2 ?v3 ))):named a139 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 D_c_tllist$ )(?v4 D_d_bool_fun_fun$ )(?v5 C_c_bool_fun_fun$ ))(=> (and (tllist_all2$p ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (tset$c ?v2 ))(and (member$ ?v7 (tset$c ?v3 ))(fun_app$b (fun_app$n ?v0 ?v6 )?v7 )))(fun_app$b (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 C$ ))(=> (and (member$a ?v6 (set2_tllist$g ?v2 ))(and (member$a ?v7 (set2_tllist$g ?v3 ))(fun_app$c (fun_app$o ?v1 ?v6 )?v7 )))(fun_app$c (fun_app$o ?v5 ?v6 )?v7 )))))(tllist_all2$p ?v4 ?v5 ?v2 ?v3 ))):named a140 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_a_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 D_a_tllist$ )(?v4 D_d_bool_fun_fun$ )(?v5 C_a_bool_fun_fun$ ))(=> (and (tllist_all2$q ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (tset$c ?v2 ))(and (member$ ?v7 (tset$d ?v3 ))(fun_app$b (fun_app$n ?v0 ?v6 )?v7 )))(fun_app$b (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 A$ ))(=> (and (member$a ?v6 (set2_tllist$g ?v2 ))(and (member$c ?v7 (set2_tllist$h ?v3 ))(fun_app$e (fun_app$bw ?v1 ?v6 )?v7 )))(fun_app$e (fun_app$bw ?v5 ?v6 )?v7 )))))(tllist_all2$q ?v4 ?v5 ?v2 ?v3 ))):named a141 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_b_bool_fun_fun$ )(?v2 D_c_tllist$ )(?v3 D_b_tllist$ )(?v4 D_d_bool_fun_fun$ )(?v5 C_b_bool_fun_fun$ ))(=> (and (tllist_all2$r ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (tset$c ?v2 ))(and (member$ ?v7 (tset$e ?v3 ))(fun_app$b (fun_app$n ?v0 ?v6 )?v7 )))(fun_app$b (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 B$ ))(=> (and (member$a ?v6 (set2_tllist$g ?v2 ))(and (member$b ?v7 (set2_tllist$i ?v3 ))(fun_app$d (fun_app$bx ?v1 ?v6 )?v7 )))(fun_app$d (fun_app$bx ?v5 ?v6 )?v7 )))))(tllist_all2$r ?v4 ?v5 ?v2 ?v3 ))):named a142 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 A_d_bool_fun_fun$ )(?v2 D_a_tllist$ )(?v3 D_d_tllist$ )(?v4 D_d_bool_fun_fun$ )(?v5 A_d_bool_fun_fun$ ))(=> (and (tllist_all2$s ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (tset$d ?v2 ))(and (member$ ?v7 (tset$b ?v3 ))(fun_app$b (fun_app$n ?v0 ?v6 )?v7 )))(fun_app$b (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 D$ ))(=> (and (member$c ?v6 (set2_tllist$h ?v2 ))(and (member$ ?v7 (set2_tllist$f ?v3 ))(fun_app$b (fun_app$ad ?v1 ?v6 )?v7 )))(fun_app$b (fun_app$ad ?v5 ?v6 )?v7 )))))(tllist_all2$s ?v4 ?v5 ?v2 ?v3 ))):named a143 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ ))(rel_fun$ ?v0 (tllist_all2$h ?v1 ?v0 )uuh$ uuh$ )):named a144 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ ))(rel_fun$a ?v0 (tllist_all2$g ?v1 ?v0 )uuh$ uug$ )):named a145 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ ))(rel_fun$b ?v0 (tllist_all2$f ?v1 ?v0 )uug$ uug$ )):named a146 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ ))(fun_app$by (fun_app$bz (rel_fun$c ?v0 (tllist_all2$ ?v1 ?v0 ))uug$ )uuh$ )):named a147 ))
(assert (! (forall ((?v0 D_set$ ))(= (collect$ (uui$ ?v0 ))?v0 )):named a148 ))
(assert (! (forall ((?v0 C_set$ ))(= (collect$a (uuj$ ?v0 ))?v0 )):named a149 ))
(assert (! (forall ((?v0 A_set$ ))(= (collect$b (uuk$ ?v0 ))?v0 )):named a150 ))
(assert (! (forall ((?v0 B_set$ ))(= (collect$c (uul$ ?v0 ))?v0 )):named a151 ))
(assert (! (forall ((?v0 D$ )(?v1 D_bool_fun$ ))(= (member$ ?v0 (collect$ ?v1 ))(fun_app$b ?v1 ?v0 ))):named a152 ))
(assert (! (forall ((?v0 C$ )(?v1 C_bool_fun$ ))(= (member$a ?v0 (collect$a ?v1 ))(fun_app$c ?v1 ?v0 ))):named a153 ))
(assert (! (forall ((?v0 A$ )(?v1 A_bool_fun$ ))(= (member$c ?v0 (collect$b ?v1 ))(fun_app$e ?v1 ?v0 ))):named a154 ))
(assert (! (forall ((?v0 B$ )(?v1 B_bool_fun$ ))(= (member$b ?v0 (collect$c ?v1 ))(fun_app$d ?v1 ?v0 ))):named a155 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ ))(! (= (terminal$ (tCons$ ?v0 ?v1 ))(terminal$ ?v1 )):pattern ((tCons$ ?v0 ?v1 )))):named a156 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ ))(! (= (terminal$a (tCons$a ?v0 ?v1 ))(terminal$a ?v1 )):pattern ((tCons$a ?v0 ?v1 )))):named a157 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ ))(! (= (thd$ (tCons$ ?v0 ?v1 ))?v0 ):pattern ((tCons$ ?v0 ?v1 )))):named a158 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ ))(! (= (thd$a (tCons$a ?v0 ?v1 ))?v0 ):pattern ((tCons$a ?v0 ?v1 )))):named a159 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(= (terminal$a (ttl$a ?v0 ))(terminal$a ?v0 ))):named a160 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(= (terminal$ (ttl$ ?v0 ))(terminal$ ?v0 ))):named a161 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_c_tllist_b_d_tllist_bool_fun_fun$ )(?v2 A_b_bool_fun_fun$ ))(rel_fun$d (rel_fun$c ?v0 ?v1 )(rel_fun$e (rel_fun$f ?v2 (rel_fun$g (tllist_all2$ ?v2 ?v0 )?v1 ))(rel_fun$g (tllist_all2$ ?v2 ?v0 )?v1 ))case_tllist$ case_tllist$a )):named a162 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_c_tllist_b_d_tllist_bool_fun_fun$ )(?v2 A_c_tllist_b_d_tllist_bool_fun_fun$ ))(rel_fun$h (rel_fun$i ?v0 uum$ )(rel_fun$j (rel_fun$c ?v0 ?v1 )(rel_fun$k (rel_fun$c ?v0 ?v2 )(rel_fun$l (rel_fun$i ?v0 uum$ )(rel_fun$m (rel_fun$n ?v0 (tllist_all2$t ?v2 ?v1 ))(rel_fun$o (rel_fun$p ?v0 ?v0 )(rel_fun$n ?v0 (tllist_all2$t ?v2 ?v1 )))))))corec_tllist$b corec_tllist$c )):named a163 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_b_bool_fun_fun$ ))(rel_fun$q (rel_fun$i ?v0 uum$ )(rel_fun$r (rel_fun$p ?v0 ?v1 )(rel_fun$s (rel_fun$t ?v0 ?v2 )(rel_fun$u (rel_fun$i ?v0 uum$ )(rel_fun$v (rel_fun$c ?v0 (tllist_all2$ ?v2 ?v1 ))(rel_fun$w (rel_fun$p ?v0 ?v0 )(rel_fun$c ?v0 (tllist_all2$ ?v2 ?v1 )))))))corec_tllist$ corec_tllist$a )):named a164 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ ))(=> (member$c ?v0 (tset$ (ttl$ ?v1 )))(member$c ?v0 (tset$ ?v1 )))):named a165 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ ))(=> (member$b ?v0 (tset$a (ttl$a ?v1 )))(member$b ?v0 (tset$a ?v1 )))):named a166 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(=> (and (=> (= ?v0 (tNil$ (terminal$ ?v0 )))false )(=> (= ?v0 (tCons$ (thd$ ?v0 )(ttl$ ?v0 )))false ))false )):named a167 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(=> (and (=> (= ?v0 (tNil$a (terminal$a ?v0 )))false )(=> (= ?v0 (tCons$a (thd$a ?v0 )(ttl$a ?v0 )))false ))false )):named a168 ))
(assert (! (forall ((?v0 D$ ))(! (= (terminal$a (tNil$a ?v0 ))?v0 ):pattern ((tNil$a ?v0 )))):named a169 ))
(assert (! (forall ((?v0 C$ ))(! (= (terminal$ (tNil$ ?v0 ))?v0 ):pattern ((tNil$ ?v0 )))):named a170 ))
(assert (! (forall ((?v0 C$ ))(! (= (ttl$ (tNil$ ?v0 ))(tNil$ ?v0 )):pattern ((tNil$ ?v0 )))):named a171 ))
(assert (! (forall ((?v0 D$ ))(! (= (ttl$a (tNil$a ?v0 ))(tNil$a ?v0 )):pattern ((tNil$a ?v0 )))):named a172 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ ))(! (= (ttl$ (tCons$ ?v0 ?v1 ))?v1 ):pattern ((tCons$ ?v0 ?v1 )))):named a173 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ ))(! (= (ttl$a (tCons$a ?v0 ?v1 ))?v1 ):pattern ((tCons$a ?v0 ?v1 )))):named a174 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ )(?v2 A_a_c_tllist_bool_fun_fun$ ))(=> (and (member$c ?v0 (tset$ ?v1 ))(and (forall ((?v3 A$ )(?v4 A_c_tllist$ ))(fun_app$h (fun_app$ca ?v2 ?v3 )(tCons$ ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_c_tllist$ )(?v5 A$ ))(=> (and (member$c ?v5 (tset$ ?v4 ))(fun_app$h (fun_app$ca ?v2 ?v5 )?v4 ))(fun_app$h (fun_app$ca ?v2 ?v5 )(tCons$ ?v3 ?v4 ))))))(fun_app$h (fun_app$ca ?v2 ?v0 )?v1 ))):named a175 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ )(?v2 B_b_d_tllist_bool_fun_fun$ ))(=> (and (member$b ?v0 (tset$a ?v1 ))(and (forall ((?v3 B$ )(?v4 B_d_tllist$ ))(fun_app$f (fun_app$cb ?v2 ?v3 )(tCons$a ?v3 ?v4 )))(forall ((?v3 B$ )(?v4 B_d_tllist$ )(?v5 B$ ))(=> (and (member$b ?v5 (tset$a ?v4 ))(fun_app$f (fun_app$cb ?v2 ?v5 )?v4 ))(fun_app$f (fun_app$cb ?v2 ?v5 )(tCons$a ?v3 ?v4 ))))))(fun_app$f (fun_app$cb ?v2 ?v0 )?v1 ))):named a176 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ ))(=> (and (member$c ?v0 (tset$ ?v1 ))(and (forall ((?v2 A_c_tllist$ ))(=> (= ?v1 (tCons$ ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_c_tllist$ ))(=> (and (= ?v1 (tCons$ ?v2 ?v3 ))(member$c ?v0 (tset$ ?v3 )))false ))))false )):named a177 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ ))(=> (and (member$b ?v0 (tset$a ?v1 ))(and (forall ((?v2 B_d_tllist$ ))(=> (= ?v1 (tCons$a ?v0 ?v2 ))false ))(forall ((?v2 B$ )(?v3 B_d_tllist$ ))(=> (and (= ?v1 (tCons$a ?v2 ?v3 ))(member$b ?v0 (tset$a ?v3 )))false ))))false )):named a178 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ )(?v2 A$ ))(=> (member$c ?v0 (tset$ ?v1 ))(member$c ?v0 (tset$ (tCons$ ?v2 ?v1 ))))):named a179 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ )(?v2 B$ ))(=> (member$b ?v0 (tset$a ?v1 ))(member$b ?v0 (tset$a (tCons$a ?v2 ?v1 ))))):named a180 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ ))(member$c ?v0 (tset$ (tCons$ ?v0 ?v1 )))):named a181 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ ))(member$b ?v0 (tset$a (tCons$a ?v0 ?v1 )))):named a182 ))
(check-sat )
(get-unsat-core )
