(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort A_c_fun$ 0 )
(declare-sort A_d_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort B_c_fun$ 0 )
(declare-sort B_d_fun$ 0 )
(declare-sort C_a_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort C_d_fun$ 0 )
(declare-sort D_c_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_b_fun_b_fun$ 0 )
(declare-sort B_b_b_fun_fun$ 0 )
(declare-sort B_b_fun_b_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort C_c_c_fun_fun$ 0 )
(declare-sort C_c_fun_c_fun$ 0 )
(declare-sort C_d_fun_d_fun$ 0 )
(declare-sort D_d_d_fun_fun$ 0 )
(declare-sort D_d_fun_d_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_b_fun_bool_fun$ 0 )
(declare-sort A_c_bool_fun_fun$ 0 )
(declare-sort A_d_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_b_fun_bool_fun$ 0 )
(declare-sort B_c_bool_fun_fun$ 0 )
(declare-sort B_d_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort C_a_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_c_fun_bool_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort C_d_fun_bool_fun$ 0 )
(declare-sort C_llist_bool_fun$ 0 )
(declare-sort D_a_bool_fun_fun$ 0 )
(declare-sort D_b_bool_fun_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort D_d_fun_bool_fun$ 0 )
(declare-sort D_llist_bool_fun$ 0 )
(declare-sort C_stream_bool_fun$ 0 )
(declare-sort D_stream_bool_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_b_fun_b_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_a_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_llist_b_llist_fun$ 0 )
(declare-sort B_a_fun_b_b_fun_fun$ 0 )
(declare-sort B_b_b_fun_b_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun$ 0 )
(declare-sort B_llist_b_llist_fun$ 0 )
(declare-sort C_c_c_fun_c_fun_fun$ 0 )
(declare-sort C_c_d_fun_d_fun_fun$ 0 )
(declare-sort C_c_fun_c_c_fun_fun$ 0 )
(declare-sort C_c_fun_c_d_fun_fun$ 0 )
(declare-sort C_d_fun_c_c_fun_fun$ 0 )
(declare-sort C_d_fun_c_d_fun_fun$ 0 )
(declare-sort C_llist_c_llist_fun$ 0 )
(declare-sort D_c_fun_d_d_fun_fun$ 0 )
(declare-sort D_d_d_fun_d_fun_fun$ 0 )
(declare-sort D_d_fun_d_d_fun_fun$ 0 )
(declare-sort D_llist_d_llist_fun$ 0 )
(declare-sort A_stream_a_llist_fun$ 0 )
(declare-sort B_stream_b_llist_fun$ 0 )
(declare-sort C_stream_c_llist_fun$ 0 )
(declare-sort D_stream_d_llist_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun$ 0 )
(declare-sort C_stream_c_stream_fun$ 0 )
(declare-sort C_stream_d_stream_fun$ 0 )
(declare-sort D_stream_d_stream_fun$ 0 )
(declare-sort Bool_a_a_a_fun_fun_fun$ 0 )
(declare-sort Bool_b_b_b_fun_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun$ 0 )
(declare-sort Bool_c_c_c_fun_fun_fun$ 0 )
(declare-sort Bool_d_d_d_fun_fun_fun$ 0 )
(declare-sort C_d_fun_d_fun_bool_fun$ 0 )
(declare-sort A_a_llist_a_llist_fun_fun$ 0 )
(declare-sort B_b_llist_b_llist_fun_fun$ 0 )
(declare-sort C_c_stream_c_stream_fun_fun$ 0 )
(declare-sort D_d_stream_d_stream_fun_fun$ 0 )
(declare-sort Nat_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort Nat_b_b_fun_b_b_fun_fun_fun$ 0 )
(declare-sort Nat_c_c_fun_c_c_fun_fun_fun$ 0 )
(declare-sort Nat_d_d_fun_d_d_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_b_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_c_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_c_c_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_a_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_d_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_b_b_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_c_d_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_bool_fun$ 0 )
(declare-sort B_b_fun_a_b_fun_bool_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_bool_fun_fun$ 0 )
(declare-sort B_b_fun_d_d_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort C_a_fun_c_c_fun_bool_fun_fun$ 0 )
(declare-sort C_b_fun_c_d_fun_bool_fun_fun$ 0 )
(declare-sort C_c_d_fun_d_fun_fun_bool_fun$ 0 )
(declare-sort C_c_fun_c_c_fun_bool_fun_fun$ 0 )
(declare-sort C_c_fun_c_d_fun_bool_fun_fun$ 0 )
(declare-sort C_d_fun_a_a_fun_bool_fun_fun$ 0 )
(declare-sort C_d_fun_a_b_fun_bool_fun_fun$ 0 )
(declare-sort C_d_fun_c_c_fun_bool_fun_fun$ 0 )
(declare-sort C_d_fun_c_d_fun_bool_fun_fun$ 0 )
(declare-sort C_d_fun_d_d_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_c_llist_bool_fun_fun$ 0 )
(declare-sort D_d_fun_a_b_fun_bool_fun_fun$ 0 )
(declare-sort D_d_fun_b_b_fun_bool_fun_fun$ 0 )
(declare-sort D_d_fun_c_d_fun_bool_fun_fun$ 0 )
(declare-sort D_d_fun_d_d_fun_bool_fun_fun$ 0 )
(declare-sort D_llist_d_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_stream_bool_fun_fun$ 0 )
(declare-sort A_llist_c_stream_bool_fun_fun$ 0 )
(declare-sort A_llist_d_stream_bool_fun_fun$ 0 )
(declare-sort B_llist_b_stream_bool_fun_fun$ 0 )
(declare-sort B_llist_c_stream_bool_fun_fun$ 0 )
(declare-sort B_llist_d_stream_bool_fun_fun$ 0 )
(declare-sort C_llist_c_stream_bool_fun_fun$ 0 )
(declare-sort D_llist_d_stream_bool_fun_fun$ 0 )
(declare-sort C_stream_c_stream_fun_bool_fun$ 0 )
(declare-sort C_stream_d_stream_fun_bool_fun$ 0 )
(declare-sort D_stream_d_stream_fun_bool_fun$ 0 )
(declare-sort A_b_fun_a_a_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_llist_b_llist_fun_fun$ 0 )
(declare-sort A_b_fun_c_a_fun_c_b_fun_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_b_llist_fun$ 0 )
(declare-sort B_b_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort C_d_fun_a_c_fun_a_d_fun_fun_fun$ 0 )
(declare-sort C_d_fun_c_c_fun_c_d_fun_fun_fun$ 0 )
(declare-sort D_d_fun_c_d_fun_c_d_fun_fun_fun$ 0 )
(declare-sort Nat_a_fun_nat_c_fun_bool_fun_fun$ 0 )
(declare-sort Nat_b_fun_nat_d_fun_bool_fun_fun$ 0 )
(declare-sort C_d_fun_c_stream_d_stream_fun_fun$ 0 )
(declare-sort C_stream_d_stream_fun_d_stream_fun$ 0 )
(declare-sort A_nat_a_a_fun_fun_nat_a_fun_fun_fun$ 0 )
(declare-sort B_nat_b_b_fun_fun_nat_b_fun_fun_fun$ 0 )
(declare-sort C_nat_c_c_fun_fun_nat_c_fun_fun_fun$ 0 )
(declare-sort D_nat_d_d_fun_fun_nat_d_fun_fun_fun$ 0 )
(declare-sort C_c_stream_c_stream_fun_fun_bool_fun$ 0 )
(declare-sort D_d_stream_d_stream_fun_fun_bool_fun$ 0 )
(declare-sort A_a_b_fun_b_fun_fun_a_b_fun_b_fun_fun$ 0 )
(declare-sort C_c_d_fun_d_fun_fun_c_d_fun_d_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_c_c_c_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_c_c_fun_c_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_llist_b_llist_fun_fun_bool_fun$ 0 )
(declare-sort A_b_fun_b_fun_c_d_fun_d_fun_bool_fun_fun$ 0 )
(declare-sort B_b_b_fun_fun_d_d_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort B_b_fun_b_fun_d_d_fun_d_fun_bool_fun_fun$ 0 )
(declare-sort C_d_fun_c_stream_d_stream_fun_fun_bool_fun$ 0 )
(declare-sort A_a_a_b_fun_b_fun_fun_a_b_fun_b_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_b_llist_fun_b_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_a_llist_b_llist_fun_fun$ 0 )
(declare-sort C_c_c_d_fun_d_fun_fun_c_d_fun_d_fun_fun_fun$ 0 )
(declare-sort Nat_a_a_fun_fun_nat_c_c_fun_fun_bool_fun_fun$ 0 )
(declare-sort Nat_b_b_fun_fun_nat_d_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_stream_c_stream_d_stream_fun_d_stream_fun_fun$ 0 )
(declare-sort A_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort B_b_llist_b_llist_fun_fun_b_llist_b_llist_fun_fun$ 0 )
(declare-sort A_a_b_fun_b_fun_fun_c_c_d_fun_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_c_c_fun_c_c_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_b_fun_fun_a_a_fun_a_b_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_b_fun_fun_a_c_fun_a_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_b_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_a_fun_a_b_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_c_d_fun_c_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_a_llist_b_llist_fun_bool_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun_d_d_fun_d_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_a_fun_c_b_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_c_fun_c_d_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_c_fun_c_d_fun_fun_c_d_fun_c_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_d_fun_c_d_fun_fun_a_a_fun_a_b_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_d_fun_c_d_fun_fun_a_b_fun_a_b_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_d_fun_c_d_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_d_fun_c_d_fun_fun_c_d_fun_c_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_c_stream_c_stream_fun_fun_c_stream_c_stream_fun_fun$ 0 )
(declare-sort D_d_stream_d_stream_fun_fun_d_stream_d_stream_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ 0 )
(declare-sort A_a_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_llist_b_llist_fun_fun_a_llist_b_llist_fun_fun$ 0 )
(declare-sort B_b_b_llist_b_llist_fun_fun_b_llist_b_llist_fun_fun_fun$ 0 )
(declare-sort C_c_c_stream_c_stream_fun_fun_c_stream_c_stream_fun_fun_fun$ 0 )
(declare-sort C_d_fun_c_stream_d_stream_fun_fun_c_stream_d_stream_fun_fun$ 0 )
(declare-sort D_d_d_stream_d_stream_fun_fun_d_stream_d_stream_fun_fun_fun$ 0 )
(declare-sort A_a_llist_a_llist_fun_fun_c_c_stream_c_stream_fun_fun_bool_fun_fun$ 0 )
(declare-sort B_b_llist_b_llist_fun_fun_d_d_stream_d_stream_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_llist_b_llist_fun_fun_a_llist_b_llist_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_a_llist_a_llist_fun_a_llist_b_llist_fun_fun_fun$ 0 )
(declare-sort B_llist_b_llist_fun_a_llist_b_llist_fun_a_llist_b_llist_fun_fun_fun$ 0 )
(declare-sort C_d_fun_c_d_fun_c_stream_d_stream_fun_fun_c_stream_d_stream_fun_fun_fun$ 0 )
(declare-sort Nat_a_a_fun_fun_nat_a_fun_fun_nat_c_c_fun_fun_nat_c_fun_fun_bool_fun_fun$ 0 )
(declare-sort Nat_b_b_fun_fun_nat_b_fun_fun_nat_d_d_fun_fun_nat_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_stream_d_stream_fun_c_stream_c_stream_fun_c_stream_d_stream_fun_fun_fun$ 0 )
(declare-sort D_stream_d_stream_fun_c_stream_d_stream_fun_c_stream_d_stream_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_llist_b_llist_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_b_llist_fun_c_stream_d_stream_fun_d_stream_fun_bool_fun_fun$ 0 )
(declare-sort A_a_b_fun_b_fun_fun_a_b_fun_b_fun_fun_c_c_d_fun_d_fun_fun_c_d_fun_d_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_fun$ 0 )
(declare-sort C_d_fun_c_stream_d_stream_fun_fun_c_d_fun_c_d_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_b_llist_fun_fun_c_stream_c_stream_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_a_llist_b_llist_fun_fun_c_stream_d_stream_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_fun$ 0 )
(declare-sort A_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun_c_c_stream_c_stream_fun_fun_c_stream_c_stream_fun_fun_bool_fun_fun$ 0 )
(declare-sort B_b_llist_b_llist_fun_fun_b_llist_b_llist_fun_fun_d_d_stream_d_stream_fun_fun_d_stream_d_stream_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_stream_d_stream_fun_c_stream_d_stream_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_c_d_fun_c_d_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_llist_b_llist_fun_fun_a_llist_b_llist_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_bool_fun_fun$ 0 )
(declare-sort B_llist$ 0)
(declare-sort A_llist$ 0)
(declare-sort D_stream$ 0)
(declare-sort C_stream$ 0)
(declare-sort D_llist$ 0)
(declare-sort C_llist$ 0)
(declare-sort A_stream$ 0)
(declare-sort B_stream$ 0)
(declare-fun lNil$ ()B_llist$)
(declare-fun lhd$ (B_llist$)B$)
(declare-fun ltl$ (B_llist$)B_llist$)
(declare-fun lCons$ (B$ B_llist$ )B_llist$)
(declare-fun lNil$a ()A_llist$)
(declare-fun lhd$a (A_llist$)A$)
(declare-fun ltl$a (A_llist$)A_llist$)
(declare-fun lCons$a (A$ A_llist$ )A_llist$)
(declare-fun shd$ (D_stream$)D$)
(declare-fun stl$ (D_stream$)D_stream$)
(declare-fun sCons$ (D$ D_stream$ )D_stream$)
(declare-fun shd$a (C_stream$)C$)
(declare-fun stl$a (C_stream$)C_stream$)
(declare-fun sCons$a (C$ C_stream$ )C_stream$)
(declare-fun lNil$b ()D_llist$)
(declare-fun lhd$b (D_llist$)D$)
(declare-fun ltl$b (D_llist$)D_llist$)
(declare-fun lCons$b (D$ D_llist$ )D_llist$)
(declare-fun lNil$c ()C_llist$)
(declare-fun lhd$c (C_llist$)C$)
(declare-fun ltl$c (C_llist$)C_llist$)
(declare-fun lCons$c (C$ C_llist$ )C_llist$)
(declare-fun shd$b (A_stream$)A$)
(declare-fun stl$b (A_stream$)A_stream$)
(declare-fun sCons$b (A$ A_stream$ )A_stream$)
(declare-fun shd$c (B_stream$)B$)
(declare-fun stl$c (B_stream$)B_stream$)
(declare-fun sCons$c (B$ B_stream$ )B_stream$)
(declare-fun a$ ()A_c_bool_fun_fun$ )
(declare-fun b$ ()B_d_bool_fun_fun$ )
(declare-fun id$ ()A_llist_a_llist_fun$ )
(declare-fun uu$ ()B_b_b_llist_b_llist_fun_fun_b_llist_b_llist_fun_fun_fun$ )
(declare-fun id$a ()B_llist_b_llist_fun$ )
(declare-fun id$b ()C_llist_c_llist_fun$ )
(declare-fun id$c ()D_llist_d_llist_fun$ )
(declare-fun id$d ()D_d_fun$ )
(declare-fun id$e ()B_b_fun$ )
(declare-fun id$f ()C_d_fun_c_d_fun_fun$ )
(declare-fun id$g ()A_b_fun_a_b_fun_fun$ )
(declare-fun uua$ ()D_d_d_stream_d_stream_fun_fun_d_stream_d_stream_fun_fun_fun$ )
(declare-fun uub$ ()B_b_b_fun_b_fun_fun$ )
(declare-fun uuc$ ()D_d_d_fun_d_fun_fun$ )
(declare-fun uud$ ()A_a_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun_fun$ )
(declare-fun uue$ ()C_c_c_stream_c_stream_fun_fun_c_stream_c_stream_fun_fun_fun$ )
(declare-fun uuf$ ()A_a_a_b_fun_b_fun_fun_a_b_fun_b_fun_fun_fun$ )
(declare-fun uug$ ()C_c_c_d_fun_d_fun_fun_c_d_fun_d_fun_fun_fun$ )
(declare-fun uuh$ ()A_a_a_fun_a_fun_fun$ )
(declare-fun uui$ ()C_c_c_fun_c_fun_fun$ )
(declare-fun uuj$ ()A_b_fun_a_b_fun_a_llist_b_llist_fun_fun_a_llist_b_llist_fun_fun_fun$ )
(declare-fun uuk$ ()C_d_fun_c_d_fun_c_stream_d_stream_fun_fun_c_stream_d_stream_fun_fun_fun$ )
(declare-fun uul$ ()A_a_b_fun_b_fun_fun$ )
(declare-fun uum$ ()C_c_d_fun_d_fun_fun$ )
(declare-fun uun$ ()A_llist_a_llist_b_llist_fun_b_llist_fun_fun$ )
(declare-fun uuo$ ()C_stream_c_stream_d_stream_fun_d_stream_fun_fun$ )
(declare-fun uup$ ()Bool_bool_bool_fun_fun$ )
(declare-fun uuq$ ()Bool_b_b_b_fun_fun_fun$ )
(declare-fun uur$ ()Bool_d_d_d_fun_fun_fun$ )
(declare-fun uus$ ()Bool_a_a_a_fun_fun_fun$ )
(declare-fun uut$ ()Bool_c_c_c_fun_fun_fun$ )
(declare-fun uuu$ ()B_b_llist_b_llist_fun_fun$ )
(declare-fun uuv$ ()C_c_stream_c_stream_fun_fun$ )
(declare-fun uuw$ ()A_a_llist_a_llist_fun_fun$ )
(declare-fun uux$ ()D_d_stream_d_stream_fun_fun$ )
(declare-fun uuy$ ()A_a_bool_fun_fun$ )
(declare-fun uuz$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uva$ ()B_b_bool_fun_fun$ )
(declare-fun uvb$ ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun uvc$ ()C_c_bool_fun_fun$ )
(declare-fun uvd$ ()C_llist_c_llist_bool_fun_fun$ )
(declare-fun uve$ ()D_d_bool_fun_fun$ )
(declare-fun uvf$ ()D_llist_d_llist_bool_fun_fun$ )
(declare-fun uvg$ ()Nat_nat_bool_fun_fun$ )
(declare-fun uvh$ ()A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_bool_fun_fun$ )
(declare-fun uvi$ ()A_b_fun_a_b_fun_bool_fun_fun$ )
(declare-fun uvj$ ()A_llist_b_llist_fun_a_llist_b_llist_fun_bool_fun_fun$ )
(declare-fun uvk$ ()D_d_fun_d_d_fun_bool_fun_fun$ )
(declare-fun uvl$ ()C_d_fun_c_d_fun_bool_fun_fun$ )
(declare-fun uvm$ ()B_b_fun_b_b_fun_bool_fun_fun$ )
(declare-fun comp$ ()A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_fun$ )
(declare-fun lmap$ ()A_b_fun_a_llist_b_llist_fun_fun$ )
(declare-fun smap$ ()C_d_fun_c_stream_d_stream_fun_fun$ )
(declare-fun comp$a ()D_d_fun_c_d_fun_c_d_fun_fun_fun$ )
(declare-fun comp$b ()C_d_fun_c_c_fun_c_d_fun_fun_fun$ )
(declare-fun comp$c ()B_b_fun_a_b_fun_a_b_fun_fun_fun$ )
(declare-fun comp$d ()A_b_fun_a_a_fun_a_b_fun_fun_fun$ )
(declare-fun comp$e ()A_b_fun_c_a_fun_c_b_fun_fun_fun$ )
(declare-fun comp$f ()C_d_fun_a_c_fun_a_d_fun_fun_fun$ )
(declare-fun comp$g ()B_llist_b_llist_fun_a_llist_b_llist_fun_a_llist_b_llist_fun_fun_fun$ )
(declare-fun comp$h ()D_stream_d_stream_fun_c_stream_d_stream_fun_c_stream_d_stream_fun_fun_fun$ )
(declare-fun comp$i ()A_llist_b_llist_fun_a_llist_a_llist_fun_a_llist_b_llist_fun_fun_fun$ )
(declare-fun comp$j ()C_stream_d_stream_fun_c_stream_c_stream_fun_c_stream_d_stream_fun_fun_fun$ )
(declare-fun comp$k ()C_d_fun_c_stream_d_stream_fun_fun_c_d_fun_c_d_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_fun$ )
(declare-fun comp$l ()A_llist_b_llist_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_fun$ )
(declare-fun comp$m ()C_stream_d_stream_fun_c_stream_d_stream_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_fun$ )
(declare-fun comp$n (A_b_fun_a_b_fun_fun$ )A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ )
(declare-fun comp$o (D_d_fun$ )D_d_fun_d_d_fun_fun$ )
(declare-fun comp$p (D_c_fun$ )C_d_fun_c_c_fun_fun$ )
(declare-fun comp$q (C_d_fun$ )D_c_fun_d_d_fun_fun$ )
(declare-fun comp$r (C_c_fun$ )C_c_fun_c_c_fun_fun$ )
(declare-fun comp$s (B_b_fun$ )B_b_fun_b_b_fun_fun$ )
(declare-fun comp$t (B_a_fun$ )A_b_fun_a_a_fun_fun$ )
(declare-fun comp$u (A_b_fun$ )B_a_fun_b_b_fun_fun$ )
(declare-fun comp$v (A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun lmap$a (C_d_fun$ C_llist$ )D_llist$ )
(declare-fun lmap$b (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun lmap$c (A_c_fun$ A_llist$ )C_llist$ )
(declare-fun lmap$d (A_d_fun$ A_llist$ )D_llist$ )
(declare-fun lmap$e (B_a_fun$ B_llist$ )A_llist$ )
(declare-fun lmap$f (B_b_fun$ B_llist$ )B_llist$ )
(declare-fun lmap$g (B_c_fun$ B_llist$ )C_llist$ )
(declare-fun lmap$h (B_d_fun$ B_llist$ )D_llist$ )
(declare-fun lmap$i (C_a_fun$ C_llist$ )A_llist$ )
(declare-fun smap$a (A_b_fun$ A_stream$ )B_stream$ )
(declare-fun smap$b (A_a_fun$ A_stream$ )A_stream$ )
(declare-fun smap$c (A_c_fun$ A_stream$ )C_stream$ )
(declare-fun smap$d (A_d_fun$ A_stream$ )D_stream$ )
(declare-fun smap$e (B_a_fun$ B_stream$ )A_stream$ )
(declare-fun smap$f (B_b_fun$ B_stream$ )B_stream$ )
(declare-fun smap$g (B_c_fun$ B_stream$ )C_stream$ )
(declare-fun smap$h (B_d_fun$ B_stream$ )D_stream$ )
(declare-fun smap$i (C_a_fun$ C_stream$ )A_stream$ )
(declare-fun compow$ ()Nat_b_b_fun_b_b_fun_fun_fun$ )
(declare-fun compow$a ()Nat_d_d_fun_d_d_fun_fun_fun$ )
(declare-fun compow$b ()Nat_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun compow$c ()Nat_c_c_fun_c_c_fun_fun_fun$ )
(declare-fun fun_app$ (B_llist_b_llist_fun$ B_llist$ )B_llist$ )
(declare-fun rec_nat$ ()B_nat_b_b_fun_fun_nat_b_fun_fun_fun$ )
(declare-fun rel_fun$ (A_b_fun_c_d_fun_bool_fun_fun$ A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )A_b_fun_a_llist_b_llist_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ )
(declare-fun fun_app$a (B_b_llist_b_llist_fun_fun$ B$ )B_llist_b_llist_fun$ )
(declare-fun fun_app$b (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$c (A_a_llist_a_llist_fun_fun$ A$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$d (D_stream_d_stream_fun$ D_stream$ )D_stream$ )
(declare-fun fun_app$e (D_d_stream_d_stream_fun_fun$ D$ )D_stream_d_stream_fun$ )
(declare-fun fun_app$f (C_stream_c_stream_fun$ C_stream$ )C_stream$ )
(declare-fun fun_app$g (C_c_stream_c_stream_fun_fun$ C$ )C_stream_c_stream_fun$ )
(declare-fun fun_app$h (D_llist_bool_fun$ D_llist$ )Bool )
(declare-fun fun_app$i (D_llist_d_llist_bool_fun_fun$ D_llist$ )D_llist_bool_fun$ )
(declare-fun fun_app$j (C_llist_bool_fun$ C_llist$ )Bool )
(declare-fun fun_app$k (C_llist_c_llist_bool_fun_fun$ C_llist$ )C_llist_bool_fun$ )
(declare-fun fun_app$l (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$m (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$n (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$o (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$p (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$q (Bool_bool_bool_fun_fun$ Bool )Bool_bool_fun$ )
(declare-fun fun_app$r (Nat_bool_fun$ Nat$ )Bool )
(declare-fun fun_app$s (Nat_nat_bool_fun_fun$ Nat$ )Nat_bool_fun$ )
(declare-fun fun_app$t (A_llist_b_llist_fun_bool_fun$ A_llist_b_llist_fun$ )Bool )
(declare-fun fun_app$u (A_llist_b_llist_fun_a_llist_b_llist_fun_bool_fun_fun$ A_llist_b_llist_fun$ )A_llist_b_llist_fun_bool_fun$ )
(declare-fun fun_app$v (A_b_fun_a_llist_b_llist_fun_fun_bool_fun$ A_b_fun_a_llist_b_llist_fun_fun$ )Bool )
(declare-fun fun_app$w (A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_bool_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun$ )A_b_fun_a_llist_b_llist_fun_fun_bool_fun$ )
(declare-fun fun_app$x (D_d_fun_bool_fun$ D_d_fun$ )Bool )
(declare-fun fun_app$y (D_d_fun_d_d_fun_bool_fun_fun$ D_d_fun$ )D_d_fun_bool_fun$ )
(declare-fun fun_app$z (C_d_fun_bool_fun$ C_d_fun$ )Bool )
(declare-fun rec_nat$a ()D_nat_d_d_fun_fun_nat_d_fun_fun_fun$ )
(declare-fun rec_nat$b ()A_nat_a_a_fun_fun_nat_a_fun_fun_fun$ )
(declare-fun rec_nat$c ()C_nat_c_c_fun_fun_nat_c_fun_fun_fun$ )
(declare-fun rel_fun$a (A_c_bool_fun_fun$ B_d_bool_fun_fun$ )A_b_fun_c_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$b (A_llist_c_stream_bool_fun_fun$ B_llist_d_stream_bool_fun_fun$ )A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )
(declare-fun rel_fun$c (B_d_bool_fun_fun$ B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ )B_b_llist_b_llist_fun_fun_d_d_stream_d_stream_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$d (B_d_bool_fun_fun$ B_d_bool_fun_fun$ )B_b_fun_d_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$e (A_c_bool_fun_fun$ A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ )A_a_llist_a_llist_fun_fun_c_c_stream_c_stream_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$f (A_c_bool_fun_fun$ A_b_fun_b_fun_c_d_fun_d_fun_bool_fun_fun$ )A_a_b_fun_b_fun_fun_c_c_d_fun_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$g (A_c_bool_fun_fun$ A_c_bool_fun_fun$ )A_a_fun_c_c_fun_bool_fun_fun$ )
(declare-fun rel_fun$h (B_d_bool_fun_fun$ B_b_llist_b_llist_fun_fun_b_llist_b_llist_fun_fun_d_d_stream_d_stream_fun_fun_d_stream_d_stream_fun_fun_bool_fun_fun$ B_b_b_llist_b_llist_fun_fun_b_llist_b_llist_fun_fun_fun$ D_d_d_stream_d_stream_fun_fun_d_stream_d_stream_fun_fun_fun$ )Bool )
(declare-fun rel_fun$i (B_b_llist_b_llist_fun_fun_d_d_stream_d_stream_fun_fun_bool_fun_fun$ B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ )B_b_llist_b_llist_fun_fun_b_llist_b_llist_fun_fun_d_d_stream_d_stream_fun_fun_d_stream_d_stream_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$j (B_d_bool_fun_fun$ B_b_fun_b_fun_d_d_fun_d_fun_bool_fun_fun$ B_b_b_fun_b_fun_fun$ D_d_d_fun_d_fun_fun$ )Bool )
(declare-fun rel_fun$k (B_b_fun_d_d_fun_bool_fun_fun$ B_d_bool_fun_fun$ )B_b_fun_b_fun_d_d_fun_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$l (A_c_bool_fun_fun$ A_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun_c_c_stream_c_stream_fun_fun_c_stream_c_stream_fun_fun_bool_fun_fun$ A_a_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun_fun$ C_c_c_stream_c_stream_fun_fun_c_stream_c_stream_fun_fun_fun$ )Bool )
(declare-fun rel_fun$m (A_a_llist_a_llist_fun_fun_c_c_stream_c_stream_fun_fun_bool_fun_fun$ A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ )A_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun_c_c_stream_c_stream_fun_fun_c_stream_c_stream_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$n (A_c_bool_fun_fun$ A_a_b_fun_b_fun_fun_a_b_fun_b_fun_fun_c_c_d_fun_d_fun_fun_c_d_fun_d_fun_fun_bool_fun_fun$ A_a_a_b_fun_b_fun_fun_a_b_fun_b_fun_fun_fun$ C_c_c_d_fun_d_fun_fun_c_d_fun_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$o (A_a_b_fun_b_fun_fun_c_c_d_fun_d_fun_fun_bool_fun_fun$ A_b_fun_b_fun_c_d_fun_d_fun_bool_fun_fun$ )A_a_b_fun_b_fun_fun_a_b_fun_b_fun_fun_c_c_d_fun_d_fun_fun_c_d_fun_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$p (A_c_bool_fun_fun$ A_a_fun_a_fun_c_c_fun_c_fun_bool_fun_fun$ A_a_a_fun_a_fun_fun$ C_c_c_fun_c_fun_fun$ )Bool )
(declare-fun rel_fun$q (A_a_fun_c_c_fun_bool_fun_fun$ A_c_bool_fun_fun$ )A_a_fun_a_fun_c_c_fun_c_fun_bool_fun_fun$ )
(declare-fun rel_fun$r (A_b_fun_c_d_fun_bool_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun_a_llist_b_llist_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ A_b_fun_a_b_fun_a_llist_b_llist_fun_fun_a_llist_b_llist_fun_fun_fun$ C_d_fun_c_d_fun_c_stream_d_stream_fun_fun_c_stream_d_stream_fun_fun_fun$ )Bool )
(declare-fun rel_fun$s (A_b_fun_a_llist_b_llist_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )A_b_fun_a_llist_b_llist_fun_fun_a_llist_b_llist_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$t (A_b_fun_c_d_fun_bool_fun_fun$ B_d_bool_fun_fun$ )A_b_fun_b_fun_c_d_fun_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$u (A_llist_c_stream_bool_fun_fun$ A_llist_b_llist_fun_b_llist_fun_c_stream_d_stream_fun_d_stream_fun_bool_fun_fun$ A_llist_a_llist_b_llist_fun_b_llist_fun_fun$ C_stream_c_stream_d_stream_fun_d_stream_fun_fun$ )Bool )
(declare-fun rel_fun$v (A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ B_llist_d_stream_bool_fun_fun$ )A_llist_b_llist_fun_b_llist_fun_c_stream_d_stream_fun_d_stream_fun_bool_fun_fun$ )
(declare-fun rel_fun$w (B_llist_d_stream_bool_fun_fun$ B_llist_d_stream_bool_fun_fun$ )B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ )
(declare-fun rel_fun$x (A_llist_c_stream_bool_fun_fun$ A_llist_c_stream_bool_fun_fun$ )A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ )
(declare-fun rel_fun$y (Bool_bool_bool_fun_fun$ B_b_b_fun_fun_d_d_d_fun_fun_bool_fun_fun$ Bool_b_b_b_fun_fun_fun$ Bool_d_d_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$z (B_d_bool_fun_fun$ B_b_fun_d_d_fun_bool_fun_fun$ )B_b_b_fun_fun_d_d_d_fun_fun_bool_fun_fun$ )
(declare-fun fun_app$aa (C_d_fun_c_d_fun_bool_fun_fun$ C_d_fun$ )C_d_fun_bool_fun$ )
(declare-fun fun_app$ab (B_b_fun_bool_fun$ B_b_fun$ )Bool )
(declare-fun fun_app$ac (B_b_fun_b_b_fun_bool_fun_fun$ B_b_fun$ )B_b_fun_bool_fun$ )
(declare-fun fun_app$ad (A_b_fun_bool_fun$ A_b_fun$ )Bool )
(declare-fun fun_app$ae (A_b_fun_a_b_fun_bool_fun_fun$ A_b_fun$ )A_b_fun_bool_fun$ )
(declare-fun fun_app$af (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$ag (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$ah (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$ai (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$aj (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$ak (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$al (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$am (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$an (A_llist_b_llist_fun_b_llist_fun$ A_llist_b_llist_fun$ )B_llist$ )
(declare-fun fun_app$ao (A_llist_a_llist_b_llist_fun_b_llist_fun_fun$ A_llist$ )A_llist_b_llist_fun_b_llist_fun$ )
(declare-fun fun_app$ap (A_llist_b_llist_fun$ A_llist$ )B_llist$ )
(declare-fun fun_app$aq (C_stream_d_stream_fun_d_stream_fun$ C_stream_d_stream_fun$ )D_stream$ )
(declare-fun fun_app$ar (C_stream_c_stream_d_stream_fun_d_stream_fun_fun$ C_stream$ )C_stream_d_stream_fun_d_stream_fun$ )
(declare-fun fun_app$as (C_stream_d_stream_fun$ C_stream$ )D_stream$ )
(declare-fun fun_app$at (C_d_fun_c_stream_d_stream_fun_fun_c_stream_d_stream_fun_fun$ C_d_fun_c_stream_d_stream_fun_fun$ )C_stream_d_stream_fun$ )
(declare-fun fun_app$au (C_d_fun_c_d_fun_c_stream_d_stream_fun_fun_c_stream_d_stream_fun_fun_fun$ C_d_fun$ )C_d_fun_c_stream_d_stream_fun_fun_c_stream_d_stream_fun_fun$ )
(declare-fun fun_app$av (C_d_fun_c_stream_d_stream_fun_fun$ C_d_fun$ )C_stream_d_stream_fun$ )
(declare-fun fun_app$aw (A_b_fun_a_llist_b_llist_fun_fun_a_llist_b_llist_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun$ )A_llist_b_llist_fun$ )
(declare-fun fun_app$ax (A_b_fun_a_b_fun_a_llist_b_llist_fun_fun_a_llist_b_llist_fun_fun_fun$ A_b_fun$ )A_b_fun_a_llist_b_llist_fun_fun_a_llist_b_llist_fun_fun$ )
(declare-fun fun_app$ay (A_b_fun_a_llist_b_llist_fun_fun$ A_b_fun$ )A_llist_b_llist_fun$ )
(declare-fun fun_app$az (D_d_stream_d_stream_fun_fun_d_stream_d_stream_fun_fun$ D_d_stream_d_stream_fun_fun$ )D_stream_d_stream_fun$ )
(declare-fun fun_app$ba (D_d_d_stream_d_stream_fun_fun_d_stream_d_stream_fun_fun_fun$ D$ )D_d_stream_d_stream_fun_fun_d_stream_d_stream_fun_fun$ )
(declare-fun fun_app$bb (D_d_fun_d_fun$ D_d_fun$ )D$ )
(declare-fun fun_app$bc (D_d_d_fun_d_fun_fun$ D$ )D_d_fun_d_fun$ )
(declare-fun fun_app$bd (D_d_fun$ D$ )D$ )
(declare-fun fun_app$be (C_c_stream_c_stream_fun_fun_c_stream_c_stream_fun_fun$ C_c_stream_c_stream_fun_fun$ )C_stream_c_stream_fun$ )
(declare-fun fun_app$bf (C_c_c_stream_c_stream_fun_fun_c_stream_c_stream_fun_fun_fun$ C$ )C_c_stream_c_stream_fun_fun_c_stream_c_stream_fun_fun$ )
(declare-fun fun_app$bg (C_c_d_fun_d_fun_fun_c_d_fun_d_fun_fun$ C_c_d_fun_d_fun_fun$ )C_d_fun_d_fun$ )
(declare-fun fun_app$bh (C_c_c_d_fun_d_fun_fun_c_d_fun_d_fun_fun_fun$ C$ )C_c_d_fun_d_fun_fun_c_d_fun_d_fun_fun$ )
(declare-fun fun_app$bi (C_c_d_fun_d_fun_fun$ C$ )C_d_fun_d_fun$ )
(declare-fun fun_app$bj (C_d_fun_d_fun$ C_d_fun$ )D$ )
(declare-fun fun_app$bk (C_d_fun$ C$ )D$ )
(declare-fun fun_app$bl (C_c_fun_c_fun$ C_c_fun$ )C$ )
(declare-fun fun_app$bm (C_c_c_fun_c_fun_fun$ C$ )C_c_fun_c_fun$ )
(declare-fun fun_app$bn (C_c_fun$ C$ )C$ )
(declare-fun fun_app$bo (B_b_llist_b_llist_fun_fun_b_llist_b_llist_fun_fun$ B_b_llist_b_llist_fun_fun$ )B_llist_b_llist_fun$ )
(declare-fun fun_app$bp (B_b_b_llist_b_llist_fun_fun_b_llist_b_llist_fun_fun_fun$ B$ )B_b_llist_b_llist_fun_fun_b_llist_b_llist_fun_fun$ )
(declare-fun fun_app$bq (B_b_fun_b_fun$ B_b_fun$ )B$ )
(declare-fun fun_app$br (B_b_b_fun_b_fun_fun$ B$ )B_b_fun_b_fun$ )
(declare-fun fun_app$bs (B_b_fun$ B$ )B$ )
(declare-fun fun_app$bt (A_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun$ A_a_llist_a_llist_fun_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$bu (A_a_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun_fun$ A$ )A_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$bv (A_a_b_fun_b_fun_fun_a_b_fun_b_fun_fun$ A_a_b_fun_b_fun_fun$ )A_b_fun_b_fun$ )
(declare-fun fun_app$bw (A_a_a_b_fun_b_fun_fun_a_b_fun_b_fun_fun_fun$ A$ )A_a_b_fun_b_fun_fun_a_b_fun_b_fun_fun$ )
(declare-fun fun_app$bx (A_a_b_fun_b_fun_fun$ A$ )A_b_fun_b_fun$ )
(declare-fun fun_app$by (A_b_fun_b_fun$ A_b_fun$ )B$ )
(declare-fun fun_app$bz (A_b_fun$ A$ )B$ )
(declare-fun fun_app$ca (A_a_fun_a_fun$ A_a_fun$ )A$ )
(declare-fun fun_app$cb (A_a_a_fun_a_fun_fun$ A$ )A_a_fun_a_fun$ )
(declare-fun fun_app$cc (A_a_fun$ A$ )A$ )
(declare-fun fun_app$cd (D_d_d_fun_fun$ D$ )D_d_fun$ )
(declare-fun fun_app$ce (Bool_d_d_d_fun_fun_fun$ Bool )D_d_d_fun_fun$ )
(declare-fun fun_app$cf (C_c_c_fun_fun$ C$ )C_c_fun$ )
(declare-fun fun_app$cg (Bool_c_c_c_fun_fun_fun$ Bool )C_c_c_fun_fun$ )
(declare-fun fun_app$ch (B_b_b_fun_fun$ B$ )B_b_fun$ )
(declare-fun fun_app$ci (Bool_b_b_b_fun_fun_fun$ Bool )B_b_b_fun_fun$ )
(declare-fun fun_app$cj (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$ck (Bool_a_a_a_fun_fun_fun$ Bool )A_a_a_fun_fun$ )
(declare-fun fun_app$cl (C_d_fun_c_stream_d_stream_fun_fun_bool_fun$ C_d_fun_c_stream_d_stream_fun_fun$ )Bool )
(declare-fun fun_app$cm (A_b_fun_a_llist_b_llist_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun$ )C_d_fun_c_stream_d_stream_fun_fun_bool_fun$ )
(declare-fun fun_app$cn (B_d_bool_fun_fun$ B$ )D_bool_fun$ )
(declare-fun fun_app$co (D_stream_d_stream_fun_bool_fun$ D_stream_d_stream_fun$ )Bool )
(declare-fun fun_app$cp (B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ B_llist_b_llist_fun$ )D_stream_d_stream_fun_bool_fun$ )
(declare-fun fun_app$cq (D_d_stream_d_stream_fun_fun_bool_fun$ D_d_stream_d_stream_fun_fun$ )Bool )
(declare-fun fun_app$cr (B_b_llist_b_llist_fun_fun_d_d_stream_d_stream_fun_fun_bool_fun_fun$ B_b_llist_b_llist_fun_fun$ )D_d_stream_d_stream_fun_fun_bool_fun$ )
(declare-fun fun_app$cs (B_b_fun_d_d_fun_bool_fun_fun$ B_b_fun$ )D_d_fun_bool_fun$ )
(declare-fun fun_app$ct (A_c_bool_fun_fun$ A$ )C_bool_fun$ )
(declare-fun fun_app$cu (C_stream_c_stream_fun_bool_fun$ C_stream_c_stream_fun$ )Bool )
(declare-fun fun_app$cv (A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ A_llist_a_llist_fun$ )C_stream_c_stream_fun_bool_fun$ )
(declare-fun fun_app$cw (C_c_stream_c_stream_fun_fun_bool_fun$ C_c_stream_c_stream_fun_fun$ )Bool )
(declare-fun fun_app$cx (A_a_llist_a_llist_fun_fun_c_c_stream_c_stream_fun_fun_bool_fun_fun$ A_a_llist_a_llist_fun_fun$ )C_c_stream_c_stream_fun_fun_bool_fun$ )
(declare-fun fun_app$cy (C_d_fun_d_fun_bool_fun$ C_d_fun_d_fun$ )Bool )
(declare-fun fun_app$cz (A_b_fun_b_fun_c_d_fun_d_fun_bool_fun_fun$ A_b_fun_b_fun$ )C_d_fun_d_fun_bool_fun$ )
(declare-fun fun_app$da (C_c_d_fun_d_fun_fun_bool_fun$ C_c_d_fun_d_fun_fun$ )Bool )
(declare-fun fun_app$db (A_a_b_fun_b_fun_fun_c_c_d_fun_d_fun_fun_bool_fun_fun$ A_a_b_fun_b_fun_fun$ )C_c_d_fun_d_fun_fun_bool_fun$ )
(declare-fun fun_app$dc (C_c_fun_bool_fun$ C_c_fun$ )Bool )
(declare-fun fun_app$dd (A_a_fun_c_c_fun_bool_fun_fun$ A_a_fun$ )C_c_fun_bool_fun$ )
(declare-fun fun_app$de (A_b_fun_c_d_fun_bool_fun_fun$ A_b_fun$ )C_d_fun_bool_fun$ )
(declare-fun fun_app$df (C_stream_d_stream_fun_bool_fun$ C_stream_d_stream_fun$ )Bool )
(declare-fun fun_app$dg (A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ A_llist_b_llist_fun$ )C_stream_d_stream_fun_bool_fun$ )
(declare-fun fun_app$dh (C_stream_bool_fun$ C_stream$ )Bool )
(declare-fun fun_app$di (A_llist_c_stream_bool_fun_fun$ A_llist$ )C_stream_bool_fun$ )
(declare-fun fun_app$dj (D_stream_bool_fun$ D_stream$ )Bool )
(declare-fun fun_app$dk (B_llist_d_stream_bool_fun_fun$ B_llist$ )D_stream_bool_fun$ )
(declare-fun fun_app$dl (C_stream_c_llist_fun$ C_stream$ )C_llist$ )
(declare-fun fun_app$dm (D_stream_d_llist_fun$ D_stream$ )D_llist$ )
(declare-fun fun_app$dn (A_stream_a_llist_fun$ A_stream$ )A_llist$ )
(declare-fun fun_app$do (B_stream_b_llist_fun$ B_stream$ )B_llist$ )
(declare-fun fun_app$dp (C_d_fun_c_d_fun_fun$ C_d_fun$ )C_d_fun$ )
(declare-fun fun_app$dq (D_d_fun_c_d_fun_c_d_fun_fun_fun$ D_d_fun$ )C_d_fun_c_d_fun_fun$ )
(declare-fun fun_app$dr (A_b_fun_a_b_fun_fun$ A_b_fun$ )A_b_fun$ )
(declare-fun fun_app$ds (B_b_fun_a_b_fun_a_b_fun_fun_fun$ B_b_fun$ )A_b_fun_a_b_fun_fun$ )
(declare-fun fun_app$dt (A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun$ )A_b_fun_a_llist_b_llist_fun_fun$ )
(declare-fun fun_app$du (A_llist_b_llist_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_fun$ A_llist_b_llist_fun_a_llist_b_llist_fun_fun$ )A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun$ )
(declare-fun fun_app$dv (A_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun$ A_b_fun_a_b_fun_fun$ )A_b_fun_a_llist_b_llist_fun_fun$ )
(declare-fun fun_app$dw (A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun$ )A_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun$ )
(declare-fun fun_app$dx (A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ A_b_fun_a_b_fun_fun$ )A_b_fun_a_b_fun_fun$ )
(declare-fun fun_app$dy (D_d_fun_d_d_fun_fun$ D_d_fun$ )D_d_fun$ )
(declare-fun fun_app$dz (C_c_fun_c_d_fun_fun$ C_c_fun$ )C_d_fun$ )
(declare-fun fun_app$ea (C_d_fun_c_c_fun_c_d_fun_fun_fun$ C_d_fun$ )C_c_fun_c_d_fun_fun$ )
(declare-fun fun_app$eb (C_d_fun_c_c_fun_fun$ C_d_fun$ )C_c_fun$ )
(declare-fun fun_app$ec (D_c_fun_d_d_fun_fun$ D_c_fun$ )D_d_fun$ )
(declare-fun fun_app$ed (C_c_fun_c_c_fun_fun$ C_c_fun$ )C_c_fun$ )
(declare-fun fun_app$ee (B_b_fun_b_b_fun_fun$ B_b_fun$ )B_b_fun$ )
(declare-fun fun_app$ef (A_a_fun_a_b_fun_fun$ A_a_fun$ )A_b_fun$ )
(declare-fun fun_app$eg (A_b_fun_a_a_fun_a_b_fun_fun_fun$ A_b_fun$ )A_a_fun_a_b_fun_fun$ )
(declare-fun fun_app$eh (A_b_fun_a_a_fun_fun$ A_b_fun$ )A_a_fun$ )
(declare-fun fun_app$ei (B_a_fun_b_b_fun_fun$ B_a_fun$ )B_b_fun$ )
(declare-fun fun_app$ej (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun rel_fun$aa (Bool_bool_bool_fun_fun$ A_a_a_fun_fun_c_c_c_fun_fun_bool_fun_fun$ Bool_a_a_a_fun_fun_fun$ Bool_c_c_c_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ab (A_c_bool_fun_fun$ A_a_fun_c_c_fun_bool_fun_fun$ )A_a_a_fun_fun_c_c_c_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ac (B_c_bool_fun_fun$ B_llist_b_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ B_b_llist_b_llist_fun_fun$ C_c_stream_c_stream_fun_fun$ )Bool )
(declare-fun rel_fun$ad (B_llist_c_stream_bool_fun_fun$ B_llist_c_stream_bool_fun_fun$ )B_llist_b_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ )
(declare-fun rel_fun$ae (A_d_bool_fun_fun$ A_llist_a_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ A_a_llist_a_llist_fun_fun$ D_d_stream_d_stream_fun_fun$ )Bool )
(declare-fun rel_fun$af (A_llist_d_stream_bool_fun_fun$ A_llist_d_stream_bool_fun_fun$ )A_llist_a_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ )
(declare-fun rel_fun$ag (A_llist_a_stream_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_fun$ A_stream_a_llist_fun$ )Bool )
(declare-fun rel_fun$ah (B_llist_b_stream_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ B_llist_b_llist_fun$ B_stream_b_llist_fun$ )Bool )
(declare-fun rel_fun$ai (C_llist_c_stream_bool_fun_fun$ C_llist_c_llist_bool_fun_fun$ C_llist_c_llist_fun$ C_stream_c_llist_fun$ )Bool )
(declare-fun rel_fun$aj (D_llist_d_stream_bool_fun_fun$ D_llist_d_llist_bool_fun_fun$ D_llist_d_llist_fun$ D_stream_d_llist_fun$ )Bool )
(declare-fun rel_fun$ak (Nat_nat_bool_fun_fun$ B_b_fun_b_b_fun_fun_d_d_fun_d_d_fun_fun_bool_fun_fun$ Nat_b_b_fun_b_b_fun_fun_fun$ Nat_d_d_fun_d_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$al (B_b_fun_d_d_fun_bool_fun_fun$ B_b_fun_d_d_fun_bool_fun_fun$ )B_b_fun_b_b_fun_fun_d_d_fun_d_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$am (Nat_nat_bool_fun_fun$ A_a_fun_a_a_fun_fun_c_c_fun_c_c_fun_fun_bool_fun_fun$ Nat_a_a_fun_a_a_fun_fun_fun$ Nat_c_c_fun_c_c_fun_fun_fun$ )Bool )
(declare-fun rel_fun$an (A_a_fun_c_c_fun_bool_fun_fun$ A_a_fun_c_c_fun_bool_fun_fun$ )A_a_fun_a_a_fun_fun_c_c_fun_c_c_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ao (A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_bool_fun_fun$ A_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_bool_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ap (A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_bool_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_bool_fun_fun$ )A_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$aq (A_b_fun_a_b_fun_bool_fun_fun$ A_b_fun_a_b_fun_bool_fun_fun$ )A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ar (A_b_fun_a_b_fun_bool_fun_fun$ A_llist_b_llist_fun_a_llist_b_llist_fun_bool_fun_fun$ )A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$as (D_d_fun_d_d_fun_bool_fun_fun$ C_d_fun_c_d_fun_fun_c_d_fun_c_d_fun_fun_bool_fun_fun$ D_d_fun_c_d_fun_c_d_fun_fun_fun$ D_d_fun_c_d_fun_c_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$at (C_d_fun_c_d_fun_bool_fun_fun$ C_d_fun_c_d_fun_bool_fun_fun$ )C_d_fun_c_d_fun_fun_c_d_fun_c_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$au (C_c_bool_fun_fun$ D_d_bool_fun_fun$ )C_d_fun_c_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$av (C_d_fun_c_d_fun_bool_fun_fun$ C_c_fun_c_d_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ C_d_fun_c_c_fun_c_d_fun_fun_fun$ C_d_fun_c_c_fun_c_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$aw (C_c_fun_c_c_fun_bool_fun_fun$ C_d_fun_c_d_fun_bool_fun_fun$ )C_c_fun_c_d_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ax (C_c_bool_fun_fun$ C_c_bool_fun_fun$ )C_c_fun_c_c_fun_bool_fun_fun$ )
(declare-fun rel_fun$ay (B_b_fun_b_b_fun_bool_fun_fun$ A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_bool_fun_fun$ B_b_fun_a_b_fun_a_b_fun_fun_fun$ B_b_fun_a_b_fun_a_b_fun_fun_fun$ )Bool )
(declare-fun rel_fun$az (A_a_bool_fun_fun$ B_b_bool_fun_fun$ )A_b_fun_a_b_fun_bool_fun_fun$ )
(declare-fun rel_fun$ba (A_b_fun_a_b_fun_bool_fun_fun$ A_a_fun_a_b_fun_fun_a_a_fun_a_b_fun_fun_bool_fun_fun$ A_b_fun_a_a_fun_a_b_fun_fun_fun$ A_b_fun_a_a_fun_a_b_fun_fun_fun$ )Bool )
(declare-fun rel_fun$bb (A_a_fun_a_a_fun_bool_fun_fun$ A_b_fun_a_b_fun_bool_fun_fun$ )A_a_fun_a_b_fun_fun_a_a_fun_a_b_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bc (A_a_bool_fun_fun$ A_a_bool_fun_fun$ )A_a_fun_a_a_fun_bool_fun_fun$ )
(declare-fun rel_fun$bd (D_d_bool_fun_fun$ D_d_bool_fun_fun$ )D_d_fun_d_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$be (D_d_fun_c_d_fun_bool_fun_fun$ C_d_fun_c_d_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ D_d_fun_c_d_fun_c_d_fun_fun_fun$ C_d_fun_c_c_fun_c_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$bf (D_c_bool_fun_fun$ D_d_bool_fun_fun$ )D_d_fun_c_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$bg (C_d_fun_c_c_fun_bool_fun_fun$ C_d_fun_c_d_fun_bool_fun_fun$ )C_d_fun_c_d_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bh (C_c_bool_fun_fun$ D_c_bool_fun_fun$ )C_d_fun_c_c_fun_bool_fun_fun$ )
(declare-fun rel_fun$bi (C_d_fun_d_d_fun_bool_fun_fun$ C_c_fun_c_d_fun_fun_c_d_fun_c_d_fun_fun_bool_fun_fun$ C_d_fun_c_c_fun_c_d_fun_fun_fun$ D_d_fun_c_d_fun_c_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$bj (C_d_bool_fun_fun$ D_d_bool_fun_fun$ )C_d_fun_d_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$bk (C_c_fun_c_d_fun_bool_fun_fun$ C_d_fun_c_d_fun_bool_fun_fun$ )C_c_fun_c_d_fun_fun_c_d_fun_c_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bl (C_c_bool_fun_fun$ C_d_bool_fun_fun$ )C_c_fun_c_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$bm (B_b_bool_fun_fun$ B_b_bool_fun_fun$ )B_b_fun_b_b_fun_bool_fun_fun$ )
(declare-fun rel_fun$bn (B_b_fun_a_b_fun_bool_fun_fun$ A_b_fun_a_b_fun_fun_a_a_fun_a_b_fun_fun_bool_fun_fun$ B_b_fun_a_b_fun_a_b_fun_fun_fun$ A_b_fun_a_a_fun_a_b_fun_fun_fun$ )Bool )
(declare-fun rel_fun$bo (B_a_bool_fun_fun$ B_b_bool_fun_fun$ )B_b_fun_a_b_fun_bool_fun_fun$ )
(declare-fun rel_fun$bp (A_b_fun_a_a_fun_bool_fun_fun$ A_b_fun_a_b_fun_bool_fun_fun$ )A_b_fun_a_b_fun_fun_a_a_fun_a_b_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bq (A_a_bool_fun_fun$ B_a_bool_fun_fun$ )A_b_fun_a_a_fun_bool_fun_fun$ )
(declare-fun rel_fun$br (A_b_fun_b_b_fun_bool_fun_fun$ A_a_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_bool_fun_fun$ A_b_fun_a_a_fun_a_b_fun_fun_fun$ B_b_fun_a_b_fun_a_b_fun_fun_fun$ )Bool )
(declare-fun rel_fun$bs (A_b_bool_fun_fun$ B_b_bool_fun_fun$ )A_b_fun_b_b_fun_bool_fun_fun$ )
(declare-fun rel_fun$bt (A_a_fun_a_b_fun_bool_fun_fun$ A_b_fun_a_b_fun_bool_fun_fun$ )A_a_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bu (A_a_bool_fun_fun$ A_b_bool_fun_fun$ )A_a_fun_a_b_fun_bool_fun_fun$ )
(declare-fun rel_fun$bv (A_b_fun_c_d_fun_bool_fun_fun$ C_a_fun_c_b_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ A_b_fun_c_a_fun_c_b_fun_fun_fun$ C_d_fun_c_c_fun_c_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$bw (C_a_fun_c_c_fun_bool_fun_fun$ C_b_fun_c_d_fun_bool_fun_fun$ )C_a_fun_c_b_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bx (C_c_bool_fun_fun$ A_c_bool_fun_fun$ )C_a_fun_c_c_fun_bool_fun_fun$ )
(declare-fun rel_fun$by (C_c_bool_fun_fun$ B_d_bool_fun_fun$ )C_b_fun_c_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$bz (A_b_fun_c_d_fun_bool_fun_fun$ A_a_fun_a_b_fun_fun_a_c_fun_a_d_fun_fun_bool_fun_fun$ A_b_fun_a_a_fun_a_b_fun_fun_fun$ C_d_fun_a_c_fun_a_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ca (A_a_fun_a_c_fun_bool_fun_fun$ A_b_fun_a_d_fun_bool_fun_fun$ )A_a_fun_a_b_fun_fun_a_c_fun_a_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cb (A_a_bool_fun_fun$ A_c_bool_fun_fun$ )A_a_fun_a_c_fun_bool_fun_fun$ )
(declare-fun rel_fun$cc (A_a_bool_fun_fun$ B_d_bool_fun_fun$ )A_b_fun_a_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$cd (B_b_fun_d_d_fun_bool_fun_fun$ A_b_fun_a_b_fun_fun_c_d_fun_c_d_fun_fun_bool_fun_fun$ B_b_fun_a_b_fun_a_b_fun_fun_fun$ D_d_fun_c_d_fun_c_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ce (A_b_fun_c_d_fun_bool_fun_fun$ A_b_fun_c_d_fun_bool_fun_fun$ )A_b_fun_a_b_fun_fun_c_d_fun_c_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cf (A_b_fun_c_d_fun_bool_fun_fun$ A_a_fun_a_b_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ A_b_fun_a_a_fun_a_b_fun_fun_fun$ C_d_fun_c_c_fun_c_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$cg (A_a_fun_c_c_fun_bool_fun_fun$ A_b_fun_c_d_fun_bool_fun_fun$ )A_a_fun_a_b_fun_fun_c_c_fun_c_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ch (B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ A_llist_b_llist_fun_a_llist_b_llist_fun_fun_c_stream_d_stream_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ B_llist_b_llist_fun_a_llist_b_llist_fun_a_llist_b_llist_fun_fun_fun$ D_stream_d_stream_fun_c_stream_d_stream_fun_c_stream_d_stream_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ci (A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )A_llist_b_llist_fun_a_llist_b_llist_fun_fun_c_stream_d_stream_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cj (A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ A_llist_a_llist_fun_a_llist_b_llist_fun_fun_c_stream_c_stream_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ A_llist_b_llist_fun_a_llist_a_llist_fun_a_llist_b_llist_fun_fun_fun$ C_stream_d_stream_fun_c_stream_c_stream_fun_c_stream_d_stream_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ck (A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )A_llist_a_llist_fun_a_llist_b_llist_fun_fun_c_stream_c_stream_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cl (A_b_fun_a_llist_b_llist_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ A_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_c_d_fun_c_d_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_bool_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_fun$ C_d_fun_c_stream_d_stream_fun_fun_c_d_fun_c_d_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_fun$ )Bool )
(declare-fun rel_fun$cm (A_b_fun_a_b_fun_fun_c_d_fun_c_d_fun_fun_bool_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ )A_b_fun_a_b_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_c_d_fun_c_d_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cn (A_llist_b_llist_fun_a_llist_b_llist_fun_fun_c_stream_d_stream_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_bool_fun_fun$ A_llist_b_llist_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_fun$ C_stream_d_stream_fun_c_stream_d_stream_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_fun$ )Bool )
(declare-fun rel_fun$co (A_b_fun_a_llist_b_llist_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ A_b_fun_a_llist_b_llist_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_bool_fun_fun$ )A_b_fun_a_llist_b_llist_fun_fun_a_b_fun_a_llist_b_llist_fun_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_c_d_fun_c_stream_d_stream_fun_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cp (D_d_fun_b_b_fun_bool_fun_fun$ C_d_fun_c_d_fun_fun_a_b_fun_a_b_fun_fun_bool_fun_fun$ D_d_fun_c_d_fun_c_d_fun_fun_fun$ B_b_fun_a_b_fun_a_b_fun_fun_fun$ )Bool )
(declare-fun rel_fun$cq (D_b_bool_fun_fun$ D_b_bool_fun_fun$ )D_d_fun_b_b_fun_bool_fun_fun$ )
(declare-fun rel_fun$cr (C_d_fun_a_b_fun_bool_fun_fun$ C_d_fun_a_b_fun_bool_fun_fun$ )C_d_fun_c_d_fun_fun_a_b_fun_a_b_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cs (C_a_bool_fun_fun$ D_b_bool_fun_fun$ )C_d_fun_a_b_fun_bool_fun_fun$ )
(declare-fun rel_fun$ct (D_d_fun_a_b_fun_bool_fun_fun$ C_d_fun_c_d_fun_fun_a_a_fun_a_b_fun_fun_bool_fun_fun$ D_d_fun_c_d_fun_c_d_fun_fun_fun$ A_b_fun_a_a_fun_a_b_fun_fun_fun$ )Bool )
(declare-fun rel_fun$cu (D_a_bool_fun_fun$ D_b_bool_fun_fun$ )D_d_fun_a_b_fun_bool_fun_fun$ )
(declare-fun rel_fun$cv (C_d_fun_a_a_fun_bool_fun_fun$ C_d_fun_a_b_fun_bool_fun_fun$ )C_d_fun_c_d_fun_fun_a_a_fun_a_b_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cw (C_a_bool_fun_fun$ D_a_bool_fun_fun$ )C_d_fun_a_a_fun_bool_fun_fun$ )
(declare-fun rel_fun$cx (B_d_bool_fun_fun$ Nat_b_b_fun_fun_nat_b_fun_fun_nat_d_d_fun_fun_nat_d_fun_fun_bool_fun_fun$ B_nat_b_b_fun_fun_nat_b_fun_fun_fun$ D_nat_d_d_fun_fun_nat_d_fun_fun_fun$ )Bool )
(declare-fun rel_fun$cy (Nat_b_b_fun_fun_nat_d_d_fun_fun_bool_fun_fun$ Nat_b_fun_nat_d_fun_bool_fun_fun$ )Nat_b_b_fun_fun_nat_b_fun_fun_nat_d_d_fun_fun_nat_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cz (Nat_nat_bool_fun_fun$ B_b_fun_d_d_fun_bool_fun_fun$ )Nat_b_b_fun_fun_nat_d_d_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$da (Nat_nat_bool_fun_fun$ B_d_bool_fun_fun$ )Nat_b_fun_nat_d_fun_bool_fun_fun$ )
(declare-fun rel_fun$db (A_c_bool_fun_fun$ Nat_a_a_fun_fun_nat_a_fun_fun_nat_c_c_fun_fun_nat_c_fun_fun_bool_fun_fun$ A_nat_a_a_fun_fun_nat_a_fun_fun_fun$ C_nat_c_c_fun_fun_nat_c_fun_fun_fun$ )Bool )
(declare-fun rel_fun$dc (Nat_a_a_fun_fun_nat_c_c_fun_fun_bool_fun_fun$ Nat_a_fun_nat_c_fun_bool_fun_fun$ )Nat_a_a_fun_fun_nat_a_fun_fun_nat_c_c_fun_fun_nat_c_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$dd (Nat_nat_bool_fun_fun$ A_a_fun_c_c_fun_bool_fun_fun$ )Nat_a_a_fun_fun_nat_c_c_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$de (Nat_nat_bool_fun_fun$ A_c_bool_fun_fun$ )Nat_a_fun_nat_c_fun_bool_fun_fun$ )
(declare-fun pcr_stream$ (A_c_bool_fun_fun$ )A_llist_c_stream_bool_fun_fun$ )
(declare-fun pcr_stream$a (B_d_bool_fun_fun$ )B_llist_d_stream_bool_fun_fun$ )
(declare-fun pcr_stream$b (B_c_bool_fun_fun$ )B_llist_c_stream_bool_fun_fun$ )
(declare-fun pcr_stream$c (A_d_bool_fun_fun$ )A_llist_d_stream_bool_fun_fun$ )
(declare-fun pcr_stream$d (A_a_bool_fun_fun$ )A_llist_a_stream_bool_fun_fun$ )
(declare-fun pcr_stream$e (B_b_bool_fun_fun$ )B_llist_b_stream_bool_fun_fun$ )
(declare-fun pcr_stream$f (C_c_bool_fun_fun$ )C_llist_c_stream_bool_fun_fun$ )
(declare-fun pcr_stream$g (D_d_bool_fun_fun$ )D_llist_d_stream_bool_fun_fun$ )
(declare-fun llist_of_stream$ ()C_stream_c_llist_fun$ )
(declare-fun stream_of_llist$ (A_llist$ )A_stream$ )
(declare-fun llist_of_stream$a ()D_stream_d_llist_fun$ )
(declare-fun llist_of_stream$b ()A_stream_a_llist_fun$ )
(declare-fun llist_of_stream$c ()B_stream_b_llist_fun$ )
(declare-fun stream_of_llist$a (B_llist$ )B_stream$ )
(declare-fun stream_of_llist$b (C_llist$ )C_stream$ )
(declare-fun stream_of_llist$c (D_llist$ )D_stream$ )
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$a uuu$ ?v0 )?v1 )(lCons$ ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uuu$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(! (= (fun_app$b (fun_app$c uuw$ ?v0 )?v1 )(lCons$a ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uuw$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 D$ )(?v1 D_stream$ ))(! (= (fun_app$d (fun_app$e uux$ ?v0 )?v1 )(sCons$ ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uux$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ ))(! (= (fun_app$f (fun_app$g uuv$ ?v0 )?v1 )(sCons$a ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uuv$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 D_llist$ )(?v1 D_llist$ ))(! (= (fun_app$h (fun_app$i uvf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uvf$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist$ ))(! (= (fun_app$j (fun_app$k uvd$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uvd$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$l (fun_app$m uvb$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uvb$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$n (fun_app$o uuz$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$n (fun_app$o uuz$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(! (= (fun_app$p (fun_app$q uup$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$p (fun_app$q uup$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$r (fun_app$s uvg$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$r (fun_app$s uvg$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_b_llist_fun$ )(?v1 A_llist_b_llist_fun$ ))(! (= (fun_app$t (fun_app$u uvj$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$t (fun_app$u uvj$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_b_fun_a_llist_b_llist_fun_fun$ )(?v1 A_b_fun_a_llist_b_llist_fun_fun$ ))(! (= (fun_app$v (fun_app$w uvh$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$v (fun_app$w uvh$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ ))(! (= (fun_app$x (fun_app$y uvk$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$x (fun_app$y uvk$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C_d_fun$ ))(! (= (fun_app$z (fun_app$aa uvl$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$z (fun_app$aa uvl$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ ))(! (= (fun_app$ab (fun_app$ac uvm$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ab (fun_app$ac uvm$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ ))(! (= (fun_app$ad (fun_app$ae uvi$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ad (fun_app$ae uvi$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (fun_app$af (fun_app$ag uve$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$af (fun_app$ag uve$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$ah (fun_app$ai uvc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ah (fun_app$ai uvc$ ?v0 )?v1 )))):named a17 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$aj (fun_app$ak uva$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$aj (fun_app$ak uva$ ?v0 )?v1 )))):named a18 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$al (fun_app$am uuy$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$al (fun_app$am uuy$ ?v0 )?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_b_llist_fun$ ))(! (= (fun_app$an (fun_app$ao uun$ ?v0 )?v1 )(fun_app$ap ?v1 ?v0 )):pattern ((fun_app$an (fun_app$ao uun$ ?v0 )?v1 )))):named a20 ))
(assert (! (forall ((?v0 C_stream$ )(?v1 C_stream_d_stream_fun$ ))(! (= (fun_app$aq (fun_app$ar uuo$ ?v0 )?v1 )(fun_app$as ?v1 ?v0 )):pattern ((fun_app$aq (fun_app$ar uuo$ ?v0 )?v1 )))):named a21 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C_d_fun_c_stream_d_stream_fun_fun$ ))(! (= (fun_app$at (fun_app$au uuk$ ?v0 )?v1 )(fun_app$av ?v1 ?v0 )):pattern ((fun_app$at (fun_app$au uuk$ ?v0 )?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun_a_llist_b_llist_fun_fun$ ))(! (= (fun_app$aw (fun_app$ax uuj$ ?v0 )?v1 )(fun_app$ay ?v1 ?v0 )):pattern ((fun_app$aw (fun_app$ax uuj$ ?v0 )?v1 )))):named a23 ))
(assert (! (forall ((?v0 D$ )(?v1 D_d_stream_d_stream_fun_fun$ ))(! (= (fun_app$az (fun_app$ba uua$ ?v0 )?v1 )(fun_app$e ?v1 ?v0 )):pattern ((fun_app$az (fun_app$ba uua$ ?v0 )?v1 )))):named a24 ))
(assert (! (forall ((?v0 D$ )(?v1 D_d_fun$ ))(! (= (fun_app$bb (fun_app$bc uuc$ ?v0 )?v1 )(fun_app$bd ?v1 ?v0 )):pattern ((fun_app$bb (fun_app$bc uuc$ ?v0 )?v1 )))):named a25 ))
(assert (! (forall ((?v0 C$ )(?v1 C_c_stream_c_stream_fun_fun$ ))(! (= (fun_app$be (fun_app$bf uue$ ?v0 )?v1 )(fun_app$g ?v1 ?v0 )):pattern ((fun_app$be (fun_app$bf uue$ ?v0 )?v1 )))):named a26 ))
(assert (! (forall ((?v0 C$ )(?v1 C_c_d_fun_d_fun_fun$ ))(! (= (fun_app$bg (fun_app$bh uug$ ?v0 )?v1 )(fun_app$bi ?v1 ?v0 )):pattern ((fun_app$bg (fun_app$bh uug$ ?v0 )?v1 )))):named a27 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_fun$ ))(! (= (fun_app$bj (fun_app$bi uum$ ?v0 )?v1 )(fun_app$bk ?v1 ?v0 )):pattern ((fun_app$bj (fun_app$bi uum$ ?v0 )?v1 )))):named a28 ))
(assert (! (forall ((?v0 C$ )(?v1 C_c_fun$ ))(! (= (fun_app$bl (fun_app$bm uui$ ?v0 )?v1 )(fun_app$bn ?v1 ?v0 )):pattern ((fun_app$bl (fun_app$bm uui$ ?v0 )?v1 )))):named a29 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_llist_b_llist_fun_fun$ ))(! (= (fun_app$bo (fun_app$bp uu$ ?v0 )?v1 )(fun_app$a ?v1 ?v0 )):pattern ((fun_app$bo (fun_app$bp uu$ ?v0 )?v1 )))):named a30 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_fun$ ))(! (= (fun_app$bq (fun_app$br uub$ ?v0 )?v1 )(fun_app$bs ?v1 ?v0 )):pattern ((fun_app$bq (fun_app$br uub$ ?v0 )?v1 )))):named a31 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_llist_a_llist_fun_fun$ ))(! (= (fun_app$bt (fun_app$bu uud$ ?v0 )?v1 )(fun_app$c ?v1 ?v0 )):pattern ((fun_app$bt (fun_app$bu uud$ ?v0 )?v1 )))):named a32 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_b_fun_b_fun_fun$ ))(! (= (fun_app$bv (fun_app$bw uuf$ ?v0 )?v1 )(fun_app$bx ?v1 ?v0 )):pattern ((fun_app$bv (fun_app$bw uuf$ ?v0 )?v1 )))):named a33 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_fun$ ))(! (= (fun_app$by (fun_app$bx uul$ ?v0 )?v1 )(fun_app$bz ?v1 ?v0 )):pattern ((fun_app$by (fun_app$bx uul$ ?v0 )?v1 )))):named a34 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ ))(! (= (fun_app$ca (fun_app$cb uuh$ ?v0 )?v1 )(fun_app$cc ?v1 ?v0 )):pattern ((fun_app$ca (fun_app$cb uuh$ ?v0 )?v1 )))):named a35 ))
(assert (! (forall ((?v0 Bool )(?v1 D$ )(?v2 D$ ))(! (= (fun_app$bd (fun_app$cd (fun_app$ce uur$ ?v0 )?v1 )?v2 )(ite ?v0 ?v1 ?v2 )):pattern ((fun_app$bd (fun_app$cd (fun_app$ce uur$ ?v0 )?v1 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 Bool )(?v1 C$ )(?v2 C$ ))(! (= (fun_app$bn (fun_app$cf (fun_app$cg uut$ ?v0 )?v1 )?v2 )(ite ?v0 ?v1 ?v2 )):pattern ((fun_app$bn (fun_app$cf (fun_app$cg uut$ ?v0 )?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 Bool )(?v1 B$ )(?v2 B$ ))(! (= (fun_app$bs (fun_app$ch (fun_app$ci uuq$ ?v0 )?v1 )?v2 )(ite ?v0 ?v1 ?v2 )):pattern ((fun_app$bs (fun_app$ch (fun_app$ci uuq$ ?v0 )?v1 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 Bool )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$cc (fun_app$cj (fun_app$ck uus$ ?v0 )?v1 )?v2 )(ite ?v0 ?v1 ?v2 )):pattern ((fun_app$cc (fun_app$cj (fun_app$ck uus$ ?v0 )?v1 )?v2 )))):named a39 ))
(assert (! (not (fun_app$cl (fun_app$cm (rel_fun$ (rel_fun$a a$ b$ )(rel_fun$b (pcr_stream$ a$ )(pcr_stream$a b$ )))lmap$ )smap$ )):named a40 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ )(?v2 B_b_llist_b_llist_fun_fun$ )(?v3 D_d_stream_d_stream_fun_fun$ ))(=> (forall ((?v4 B$ )(?v5 D$ ))(=> (fun_app$af (fun_app$cn ?v0 ?v4 )?v5 )(fun_app$co (fun_app$cp ?v1 (fun_app$a ?v2 ?v4 ))(fun_app$e ?v3 ?v5 ))))(fun_app$cq (fun_app$cr (rel_fun$c ?v0 ?v1 )?v2 )?v3 ))):named a41 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 B_b_fun$ )(?v3 D_d_fun$ ))(=> (forall ((?v4 B$ )(?v5 D$ ))(=> (fun_app$af (fun_app$cn ?v0 ?v4 )?v5 )(fun_app$af (fun_app$cn ?v1 (fun_app$bs ?v2 ?v4 ))(fun_app$bd ?v3 ?v5 ))))(fun_app$x (fun_app$cs (rel_fun$d ?v0 ?v1 )?v2 )?v3 ))):named a42 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ )(?v2 A_a_llist_a_llist_fun_fun$ )(?v3 C_c_stream_c_stream_fun_fun$ ))(=> (forall ((?v4 A$ )(?v5 C$ ))(=> (fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 )(fun_app$cu (fun_app$cv ?v1 (fun_app$c ?v2 ?v4 ))(fun_app$g ?v3 ?v5 ))))(fun_app$cw (fun_app$cx (rel_fun$e ?v0 ?v1 )?v2 )?v3 ))):named a43 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_b_fun_b_fun_c_d_fun_d_fun_bool_fun_fun$ )(?v2 A_a_b_fun_b_fun_fun$ )(?v3 C_c_d_fun_d_fun_fun$ ))(=> (forall ((?v4 A$ )(?v5 C$ ))(=> (fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 )(fun_app$cy (fun_app$cz ?v1 (fun_app$bx ?v2 ?v4 ))(fun_app$bi ?v3 ?v5 ))))(fun_app$da (fun_app$db (rel_fun$f ?v0 ?v1 )?v2 )?v3 ))):named a44 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ ))(=> (forall ((?v4 A$ )(?v5 C$ ))(=> (fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 )(fun_app$ah (fun_app$ct ?v1 (fun_app$cc ?v2 ?v4 ))(fun_app$bn ?v3 ?v5 ))))(fun_app$dc (fun_app$dd (rel_fun$g ?v0 ?v1 )?v2 )?v3 ))):named a45 ))
(assert (! (forall ((?v0 A_b_fun_c_d_fun_bool_fun_fun$ )(?v1 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )(?v2 A_b_fun_a_llist_b_llist_fun_fun$ )(?v3 C_d_fun_c_stream_d_stream_fun_fun$ ))(=> (forall ((?v4 A_b_fun$ )(?v5 C_d_fun$ ))(=> (fun_app$z (fun_app$de ?v0 ?v4 )?v5 )(fun_app$df (fun_app$dg ?v1 (fun_app$ay ?v2 ?v4 ))(fun_app$av ?v3 ?v5 ))))(fun_app$cl (fun_app$cm (rel_fun$ ?v0 ?v1 )?v2 )?v3 ))):named a46 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_b_fun$ )(?v3 C_d_fun$ ))(=> (forall ((?v4 A$ )(?v5 C$ ))(=> (fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 )(fun_app$af (fun_app$cn ?v1 (fun_app$bz ?v2 ?v4 ))(fun_app$bk ?v3 ?v5 ))))(fun_app$z (fun_app$de (rel_fun$a ?v0 ?v1 )?v2 )?v3 ))):named a47 ))
(assert (! (forall ((?v0 A_llist_c_stream_bool_fun_fun$ )(?v1 B_llist_d_stream_bool_fun_fun$ )(?v2 A_llist_b_llist_fun$ )(?v3 C_stream_d_stream_fun$ ))(=> (forall ((?v4 A_llist$ )(?v5 C_stream$ ))(=> (fun_app$dh (fun_app$di ?v0 ?v4 )?v5 )(fun_app$dj (fun_app$dk ?v1 (fun_app$ap ?v2 ?v4 ))(fun_app$as ?v3 ?v5 ))))(fun_app$df (fun_app$dg (rel_fun$b ?v0 ?v1 )?v2 )?v3 ))):named a48 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ ))(rel_fun$h ?v0 (rel_fun$i (rel_fun$c ?v0 ?v1 )?v1 )uu$ uua$ )):named a49 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ ))(rel_fun$j ?v0 (rel_fun$k (rel_fun$d ?v0 ?v1 )?v1 )uub$ uuc$ )):named a50 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ ))(rel_fun$l ?v0 (rel_fun$m (rel_fun$e ?v0 ?v1 )?v1 )uud$ uue$ )):named a51 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_b_fun_b_fun_c_d_fun_d_fun_bool_fun_fun$ ))(rel_fun$n ?v0 (rel_fun$o (rel_fun$f ?v0 ?v1 )?v1 )uuf$ uug$ )):named a52 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ ))(rel_fun$p ?v0 (rel_fun$q (rel_fun$g ?v0 ?v1 )?v1 )uuh$ uui$ )):named a53 ))
(assert (! (forall ((?v0 A_b_fun_c_d_fun_bool_fun_fun$ )(?v1 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ ))(rel_fun$r ?v0 (rel_fun$s (rel_fun$ ?v0 ?v1 )?v1 )uuj$ uuk$ )):named a54 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ ))(fun_app$da (fun_app$db (rel_fun$f ?v0 (rel_fun$t (rel_fun$a ?v0 ?v1 )?v1 ))uul$ )uum$ )):named a55 ))
(assert (! (forall ((?v0 A_llist_c_stream_bool_fun_fun$ )(?v1 B_llist_d_stream_bool_fun_fun$ ))(rel_fun$u ?v0 (rel_fun$v (rel_fun$b ?v0 ?v1 )?v1 )uun$ uuo$ )):named a56 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ ))(rel_fun$h ?v0 (rel_fun$i (rel_fun$c ?v0 ?v1 )?v1 )uu$ uua$ )):named a57 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ ))(rel_fun$j ?v0 (rel_fun$k (rel_fun$d ?v0 ?v1 )?v1 )uub$ uuc$ )):named a58 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ ))(rel_fun$l ?v0 (rel_fun$m (rel_fun$e ?v0 ?v1 )?v1 )uud$ uue$ )):named a59 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_b_fun_b_fun_c_d_fun_d_fun_bool_fun_fun$ ))(rel_fun$n ?v0 (rel_fun$o (rel_fun$f ?v0 ?v1 )?v1 )uuf$ uug$ )):named a60 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ ))(rel_fun$p ?v0 (rel_fun$q (rel_fun$g ?v0 ?v1 )?v1 )uuh$ uui$ )):named a61 ))
(assert (! (forall ((?v0 A_b_fun_c_d_fun_bool_fun_fun$ )(?v1 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ ))(rel_fun$r ?v0 (rel_fun$s (rel_fun$ ?v0 ?v1 )?v1 )uuj$ uuk$ )):named a62 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ ))(fun_app$da (fun_app$db (rel_fun$f ?v0 (rel_fun$t (rel_fun$a ?v0 ?v1 )?v1 ))uul$ )uum$ )):named a63 ))
(assert (! (forall ((?v0 A_llist_c_stream_bool_fun_fun$ )(?v1 B_llist_d_stream_bool_fun_fun$ ))(rel_fun$u ?v0 (rel_fun$v (rel_fun$b ?v0 ?v1 )?v1 )uun$ uuo$ )):named a64 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_llist_d_stream_bool_fun_fun$ )(?v2 B_llist_d_stream_bool_fun_fun$ )(?v3 B_b_llist_b_llist_fun_fun$ )(?v4 D_d_stream_d_stream_fun_fun$ ))(= (fun_app$cq (fun_app$cr (rel_fun$c ?v0 (rel_fun$w ?v1 ?v2 ))?v3 )?v4 )(forall ((?v5 B$ )(?v6 D$ ))(=> (fun_app$af (fun_app$cn ?v0 ?v5 )?v6 )(fun_app$co (fun_app$cp (rel_fun$w ?v1 ?v2 )(fun_app$a ?v3 ?v5 ))(fun_app$e ?v4 ?v6 )))))):named a65 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist_c_stream_bool_fun_fun$ )(?v2 A_llist_c_stream_bool_fun_fun$ )(?v3 A_a_llist_a_llist_fun_fun$ )(?v4 C_c_stream_c_stream_fun_fun$ ))(= (fun_app$cw (fun_app$cx (rel_fun$e ?v0 (rel_fun$x ?v1 ?v2 ))?v3 )?v4 )(forall ((?v5 A$ )(?v6 C$ ))(=> (fun_app$ah (fun_app$ct ?v0 ?v5 )?v6 )(fun_app$cu (fun_app$cv (rel_fun$x ?v1 ?v2 )(fun_app$c ?v3 ?v5 ))(fun_app$g ?v4 ?v6 )))))):named a66 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_b_fun_c_d_fun_bool_fun_fun$ )(?v2 B_d_bool_fun_fun$ )(?v3 A_a_b_fun_b_fun_fun$ )(?v4 C_c_d_fun_d_fun_fun$ ))(= (fun_app$da (fun_app$db (rel_fun$f ?v0 (rel_fun$t ?v1 ?v2 ))?v3 )?v4 )(forall ((?v5 A$ )(?v6 C$ ))(=> (fun_app$ah (fun_app$ct ?v0 ?v5 )?v6 )(fun_app$cy (fun_app$cz (rel_fun$t ?v1 ?v2 )(fun_app$bx ?v3 ?v5 ))(fun_app$bi ?v4 ?v6 )))))):named a67 ))
(assert (! (forall ((?v0 A_b_fun_c_d_fun_bool_fun_fun$ )(?v1 A_llist_c_stream_bool_fun_fun$ )(?v2 B_llist_d_stream_bool_fun_fun$ )(?v3 A_b_fun_a_llist_b_llist_fun_fun$ )(?v4 C_d_fun_c_stream_d_stream_fun_fun$ ))(= (fun_app$cl (fun_app$cm (rel_fun$ ?v0 (rel_fun$b ?v1 ?v2 ))?v3 )?v4 )(forall ((?v5 A_b_fun$ )(?v6 C_d_fun$ ))(=> (fun_app$z (fun_app$de ?v0 ?v5 )?v6 )(fun_app$df (fun_app$dg (rel_fun$b ?v1 ?v2 )(fun_app$ay ?v3 ?v5 ))(fun_app$av ?v4 ?v6 )))))):named a68 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ ))(rel_fun$y uup$ (rel_fun$z ?v0 (rel_fun$d ?v0 ?v0 ))uuq$ uur$ )):named a69 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ ))(rel_fun$aa uup$ (rel_fun$ab ?v0 (rel_fun$g ?v0 ?v0 ))uus$ uut$ )):named a70 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C_stream$ ))(= (lmap$a ?v0 (fun_app$dl llist_of_stream$ ?v1 ))(fun_app$dm llist_of_stream$a (fun_app$as (fun_app$av smap$ ?v0 )?v1 )))):named a71 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_stream$ ))(= (fun_app$ap (fun_app$ay lmap$ ?v0 )(fun_app$dn llist_of_stream$b ?v1 ))(fun_app$do llist_of_stream$c (smap$a ?v0 ?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (lmap$b ?v0 (fun_app$dn llist_of_stream$b ?v1 ))(fun_app$dn llist_of_stream$b (smap$b ?v0 ?v1 )))):named a73 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 A_stream$ ))(= (lmap$c ?v0 (fun_app$dn llist_of_stream$b ?v1 ))(fun_app$dl llist_of_stream$ (smap$c ?v0 ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A_d_fun$ )(?v1 A_stream$ ))(= (lmap$d ?v0 (fun_app$dn llist_of_stream$b ?v1 ))(fun_app$dm llist_of_stream$a (smap$d ?v0 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_stream$ ))(= (lmap$e ?v0 (fun_app$do llist_of_stream$c ?v1 ))(fun_app$dn llist_of_stream$b (smap$e ?v0 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_stream$ ))(= (lmap$f ?v0 (fun_app$do llist_of_stream$c ?v1 ))(fun_app$do llist_of_stream$c (smap$f ?v0 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 B_c_fun$ )(?v1 B_stream$ ))(= (lmap$g ?v0 (fun_app$do llist_of_stream$c ?v1 ))(fun_app$dl llist_of_stream$ (smap$g ?v0 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 B_d_fun$ )(?v1 B_stream$ ))(= (lmap$h ?v0 (fun_app$do llist_of_stream$c ?v1 ))(fun_app$dm llist_of_stream$a (smap$h ?v0 ?v1 )))):named a79 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C_stream$ ))(= (lmap$i ?v0 (fun_app$dl llist_of_stream$ ?v1 ))(fun_app$dn llist_of_stream$b (smap$i ?v0 ?v1 )))):named a80 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ )(?v2 B_b_llist_b_llist_fun_fun$ )(?v3 D_d_stream_d_stream_fun_fun$ )(?v4 B$ )(?v5 D$ ))(=> (and (fun_app$cq (fun_app$cr (rel_fun$c ?v0 ?v1 )?v2 )?v3 )(and (fun_app$af (fun_app$cn ?v0 ?v4 )?v5 )(=> (fun_app$co (fun_app$cp ?v1 (fun_app$a ?v2 ?v4 ))(fun_app$e ?v3 ?v5 ))false )))false )):named a81 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 B_b_fun$ )(?v3 D_d_fun$ )(?v4 B$ )(?v5 D$ ))(=> (and (fun_app$x (fun_app$cs (rel_fun$d ?v0 ?v1 )?v2 )?v3 )(and (fun_app$af (fun_app$cn ?v0 ?v4 )?v5 )(=> (fun_app$af (fun_app$cn ?v1 (fun_app$bs ?v2 ?v4 ))(fun_app$bd ?v3 ?v5 ))false )))false )):named a82 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ )(?v2 A_a_llist_a_llist_fun_fun$ )(?v3 C_c_stream_c_stream_fun_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$cw (fun_app$cx (rel_fun$e ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 )(=> (fun_app$cu (fun_app$cv ?v1 (fun_app$c ?v2 ?v4 ))(fun_app$g ?v3 ?v5 ))false )))false )):named a83 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_b_fun_b_fun_c_d_fun_d_fun_bool_fun_fun$ )(?v2 A_a_b_fun_b_fun_fun$ )(?v3 C_c_d_fun_d_fun_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$da (fun_app$db (rel_fun$f ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 )(=> (fun_app$cy (fun_app$cz ?v1 (fun_app$bx ?v2 ?v4 ))(fun_app$bi ?v3 ?v5 ))false )))false )):named a84 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$dc (fun_app$dd (rel_fun$g ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 )(=> (fun_app$ah (fun_app$ct ?v1 (fun_app$cc ?v2 ?v4 ))(fun_app$bn ?v3 ?v5 ))false )))false )):named a85 ))
(assert (! (forall ((?v0 A_b_fun_c_d_fun_bool_fun_fun$ )(?v1 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )(?v2 A_b_fun_a_llist_b_llist_fun_fun$ )(?v3 C_d_fun_c_stream_d_stream_fun_fun$ )(?v4 A_b_fun$ )(?v5 C_d_fun$ ))(=> (and (fun_app$cl (fun_app$cm (rel_fun$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$z (fun_app$de ?v0 ?v4 )?v5 )(=> (fun_app$df (fun_app$dg ?v1 (fun_app$ay ?v2 ?v4 ))(fun_app$av ?v3 ?v5 ))false )))false )):named a86 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_b_fun$ )(?v3 C_d_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$z (fun_app$de (rel_fun$a ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 )(=> (fun_app$af (fun_app$cn ?v1 (fun_app$bz ?v2 ?v4 ))(fun_app$bk ?v3 ?v5 ))false )))false )):named a87 ))
(assert (! (forall ((?v0 A_llist_c_stream_bool_fun_fun$ )(?v1 B_llist_d_stream_bool_fun_fun$ )(?v2 A_llist_b_llist_fun$ )(?v3 C_stream_d_stream_fun$ )(?v4 A_llist$ )(?v5 C_stream$ ))(=> (and (fun_app$df (fun_app$dg (rel_fun$b ?v0 ?v1 )?v2 )?v3 )(and (fun_app$dh (fun_app$di ?v0 ?v4 )?v5 )(=> (fun_app$dj (fun_app$dk ?v1 (fun_app$ap ?v2 ?v4 ))(fun_app$as ?v3 ?v5 ))false )))false )):named a88 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ )(?v2 B_b_llist_b_llist_fun_fun$ )(?v3 D_d_stream_d_stream_fun_fun$ )(?v4 B$ )(?v5 D$ ))(=> (and (fun_app$cq (fun_app$cr (rel_fun$c ?v0 ?v1 )?v2 )?v3 )(fun_app$af (fun_app$cn ?v0 ?v4 )?v5 ))(fun_app$co (fun_app$cp ?v1 (fun_app$a ?v2 ?v4 ))(fun_app$e ?v3 ?v5 )))):named a89 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 B_b_fun$ )(?v3 D_d_fun$ )(?v4 B$ )(?v5 D$ ))(=> (and (fun_app$x (fun_app$cs (rel_fun$d ?v0 ?v1 )?v2 )?v3 )(fun_app$af (fun_app$cn ?v0 ?v4 )?v5 ))(fun_app$af (fun_app$cn ?v1 (fun_app$bs ?v2 ?v4 ))(fun_app$bd ?v3 ?v5 )))):named a90 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ )(?v2 A_a_llist_a_llist_fun_fun$ )(?v3 C_c_stream_c_stream_fun_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$cw (fun_app$cx (rel_fun$e ?v0 ?v1 )?v2 )?v3 )(fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 ))(fun_app$cu (fun_app$cv ?v1 (fun_app$c ?v2 ?v4 ))(fun_app$g ?v3 ?v5 )))):named a91 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_b_fun_b_fun_c_d_fun_d_fun_bool_fun_fun$ )(?v2 A_a_b_fun_b_fun_fun$ )(?v3 C_c_d_fun_d_fun_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$da (fun_app$db (rel_fun$f ?v0 ?v1 )?v2 )?v3 )(fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 ))(fun_app$cy (fun_app$cz ?v1 (fun_app$bx ?v2 ?v4 ))(fun_app$bi ?v3 ?v5 )))):named a92 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$dc (fun_app$dd (rel_fun$g ?v0 ?v1 )?v2 )?v3 )(fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 ))(fun_app$ah (fun_app$ct ?v1 (fun_app$cc ?v2 ?v4 ))(fun_app$bn ?v3 ?v5 )))):named a93 ))
(assert (! (forall ((?v0 A_b_fun_c_d_fun_bool_fun_fun$ )(?v1 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )(?v2 A_b_fun_a_llist_b_llist_fun_fun$ )(?v3 C_d_fun_c_stream_d_stream_fun_fun$ )(?v4 A_b_fun$ )(?v5 C_d_fun$ ))(=> (and (fun_app$cl (fun_app$cm (rel_fun$ ?v0 ?v1 )?v2 )?v3 )(fun_app$z (fun_app$de ?v0 ?v4 )?v5 ))(fun_app$df (fun_app$dg ?v1 (fun_app$ay ?v2 ?v4 ))(fun_app$av ?v3 ?v5 )))):named a94 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_b_fun$ )(?v3 C_d_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$z (fun_app$de (rel_fun$a ?v0 ?v1 )?v2 )?v3 )(fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 ))(fun_app$af (fun_app$cn ?v1 (fun_app$bz ?v2 ?v4 ))(fun_app$bk ?v3 ?v5 )))):named a95 ))
(assert (! (forall ((?v0 A_llist_c_stream_bool_fun_fun$ )(?v1 B_llist_d_stream_bool_fun_fun$ )(?v2 A_llist_b_llist_fun$ )(?v3 C_stream_d_stream_fun$ )(?v4 A_llist$ )(?v5 C_stream$ ))(=> (and (fun_app$df (fun_app$dg (rel_fun$b ?v0 ?v1 )?v2 )?v3 )(fun_app$dh (fun_app$di ?v0 ?v4 )?v5 ))(fun_app$dj (fun_app$dk ?v1 (fun_app$ap ?v2 ?v4 ))(fun_app$as ?v3 ?v5 )))):named a96 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_llist_b_llist_fun_d_stream_d_stream_fun_bool_fun_fun$ )(?v2 B_b_llist_b_llist_fun_fun$ )(?v3 D_d_stream_d_stream_fun_fun$ )(?v4 B$ )(?v5 D$ ))(=> (and (fun_app$cq (fun_app$cr (rel_fun$c ?v0 ?v1 )?v2 )?v3 )(fun_app$af (fun_app$cn ?v0 ?v4 )?v5 ))(fun_app$co (fun_app$cp ?v1 (fun_app$a ?v2 ?v4 ))(fun_app$e ?v3 ?v5 )))):named a97 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 B_b_fun$ )(?v3 D_d_fun$ )(?v4 B$ )(?v5 D$ ))(=> (and (fun_app$x (fun_app$cs (rel_fun$d ?v0 ?v1 )?v2 )?v3 )(fun_app$af (fun_app$cn ?v0 ?v4 )?v5 ))(fun_app$af (fun_app$cn ?v1 (fun_app$bs ?v2 ?v4 ))(fun_app$bd ?v3 ?v5 )))):named a98 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist_a_llist_fun_c_stream_c_stream_fun_bool_fun_fun$ )(?v2 A_a_llist_a_llist_fun_fun$ )(?v3 C_c_stream_c_stream_fun_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$cw (fun_app$cx (rel_fun$e ?v0 ?v1 )?v2 )?v3 )(fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 ))(fun_app$cu (fun_app$cv ?v1 (fun_app$c ?v2 ?v4 ))(fun_app$g ?v3 ?v5 )))):named a99 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_b_fun_b_fun_c_d_fun_d_fun_bool_fun_fun$ )(?v2 A_a_b_fun_b_fun_fun$ )(?v3 C_c_d_fun_d_fun_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$da (fun_app$db (rel_fun$f ?v0 ?v1 )?v2 )?v3 )(fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 ))(fun_app$cy (fun_app$cz ?v1 (fun_app$bx ?v2 ?v4 ))(fun_app$bi ?v3 ?v5 )))):named a100 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$dc (fun_app$dd (rel_fun$g ?v0 ?v1 )?v2 )?v3 )(fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 ))(fun_app$ah (fun_app$ct ?v1 (fun_app$cc ?v2 ?v4 ))(fun_app$bn ?v3 ?v5 )))):named a101 ))
(assert (! (forall ((?v0 A_b_fun_c_d_fun_bool_fun_fun$ )(?v1 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )(?v2 A_b_fun_a_llist_b_llist_fun_fun$ )(?v3 C_d_fun_c_stream_d_stream_fun_fun$ )(?v4 A_b_fun$ )(?v5 C_d_fun$ ))(=> (and (fun_app$cl (fun_app$cm (rel_fun$ ?v0 ?v1 )?v2 )?v3 )(fun_app$z (fun_app$de ?v0 ?v4 )?v5 ))(fun_app$df (fun_app$dg ?v1 (fun_app$ay ?v2 ?v4 ))(fun_app$av ?v3 ?v5 )))):named a102 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_b_fun$ )(?v3 C_d_fun$ )(?v4 A$ )(?v5 C$ ))(=> (and (fun_app$z (fun_app$de (rel_fun$a ?v0 ?v1 )?v2 )?v3 )(fun_app$ah (fun_app$ct ?v0 ?v4 )?v5 ))(fun_app$af (fun_app$cn ?v1 (fun_app$bz ?v2 ?v4 ))(fun_app$bk ?v3 ?v5 )))):named a103 ))
(assert (! (forall ((?v0 A_llist_c_stream_bool_fun_fun$ )(?v1 B_llist_d_stream_bool_fun_fun$ )(?v2 A_llist_b_llist_fun$ )(?v3 C_stream_d_stream_fun$ )(?v4 A_llist$ )(?v5 C_stream$ ))(=> (and (fun_app$df (fun_app$dg (rel_fun$b ?v0 ?v1 )?v2 )?v3 )(fun_app$dh (fun_app$di ?v0 ?v4 )?v5 ))(fun_app$dj (fun_app$dk ?v1 (fun_app$ap ?v2 ?v4 ))(fun_app$as ?v3 ?v5 )))):named a104 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (= (fun_app$dn llist_of_stream$b ?v0 )(fun_app$dn llist_of_stream$b ?v1 ))(= ?v0 ?v1 ))):named a105 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (= (fun_app$do llist_of_stream$c ?v0 )(fun_app$do llist_of_stream$c ?v1 ))(= ?v0 ?v1 ))):named a106 ))
(assert (! (forall ((?v0 C_stream$ )(?v1 C_stream$ ))(= (= (fun_app$dl llist_of_stream$ ?v0 )(fun_app$dl llist_of_stream$ ?v1 ))(= ?v0 ?v1 ))):named a107 ))
(assert (! (forall ((?v0 D_stream$ )(?v1 D_stream$ ))(= (= (fun_app$dm llist_of_stream$a ?v0 )(fun_app$dm llist_of_stream$a ?v1 ))(= ?v0 ?v1 ))):named a108 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ ))(rel_fun$ac ?v0 (rel_fun$ad (pcr_stream$b ?v0 )(pcr_stream$b ?v0 ))uuu$ uuv$ )):named a109 ))
(assert (! (forall ((?v0 A_d_bool_fun_fun$ ))(rel_fun$ae ?v0 (rel_fun$af (pcr_stream$c ?v0 )(pcr_stream$c ?v0 ))uuw$ uux$ )):named a110 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ ))(fun_app$cw (fun_app$cx (rel_fun$e ?v0 (rel_fun$x (pcr_stream$ ?v0 )(pcr_stream$ ?v0 )))uuw$ )uuv$ )):named a111 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ ))(fun_app$cq (fun_app$cr (rel_fun$c ?v0 (rel_fun$w (pcr_stream$a ?v0 )(pcr_stream$a ?v0 )))uuu$ )uux$ )):named a112 ))
(assert (! (forall ((?v0 A_stream$ ))(= (stream_of_llist$ (fun_app$dn llist_of_stream$b ?v0 ))?v0 )):named a113 ))
(assert (! (forall ((?v0 B_stream$ ))(= (stream_of_llist$a (fun_app$do llist_of_stream$c ?v0 ))?v0 )):named a114 ))
(assert (! (forall ((?v0 C_stream$ ))(= (stream_of_llist$b (fun_app$dl llist_of_stream$ ?v0 ))?v0 )):named a115 ))
(assert (! (forall ((?v0 D_stream$ ))(= (stream_of_llist$c (fun_app$dm llist_of_stream$a ?v0 ))?v0 )):named a116 ))
(assert (! (forall ((?v0 A_stream$ ))(= (stream_of_llist$ (fun_app$dn llist_of_stream$b ?v0 ))?v0 )):named a117 ))
(assert (! (forall ((?v0 B_stream$ ))(= (stream_of_llist$a (fun_app$do llist_of_stream$c ?v0 ))?v0 )):named a118 ))
(assert (! (forall ((?v0 C_stream$ ))(= (stream_of_llist$b (fun_app$dl llist_of_stream$ ?v0 ))?v0 )):named a119 ))
(assert (! (forall ((?v0 D_stream$ ))(= (stream_of_llist$c (fun_app$dm llist_of_stream$a ?v0 ))?v0 )):named a120 ))
(assert (! (rel_fun$ag (pcr_stream$d uuy$ )uuz$ id$ llist_of_stream$b ):named a121 ))
(assert (! (rel_fun$ah (pcr_stream$e uva$ )uvb$ id$a llist_of_stream$c ):named a122 ))
(assert (! (rel_fun$ai (pcr_stream$f uvc$ )uvd$ id$b llist_of_stream$ ):named a123 ))
(assert (! (rel_fun$aj (pcr_stream$g uve$ )uvf$ id$c llist_of_stream$a ):named a124 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ ))(rel_fun$ak uvg$ (rel_fun$al (rel_fun$d ?v0 ?v0 )(rel_fun$d ?v0 ?v0 ))compow$ compow$a )):named a125 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ ))(rel_fun$am uvg$ (rel_fun$an (rel_fun$g ?v0 ?v0 )(rel_fun$g ?v0 ?v0 ))compow$b compow$c )):named a126 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_bool_fun_fun$ ))(rel_fun$ao uvh$ (rel_fun$ap (rel_fun$aq ?v0 uvi$ )(rel_fun$ar ?v0 uvj$ ))comp$ comp$ )):named a127 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ ))(rel_fun$as uvk$ (rel_fun$at (rel_fun$au ?v0 uve$ )(rel_fun$au ?v0 uve$ ))comp$a comp$a )):named a128 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ ))(rel_fun$av uvl$ (rel_fun$aw (rel_fun$ax ?v0 uvc$ )(rel_fun$au ?v0 uve$ ))comp$b comp$b )):named a129 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(rel_fun$ay uvm$ (rel_fun$aq (rel_fun$az ?v0 uva$ )(rel_fun$az ?v0 uva$ ))comp$c comp$c )):named a130 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(rel_fun$ba uvi$ (rel_fun$bb (rel_fun$bc ?v0 uuy$ )(rel_fun$az ?v0 uva$ ))comp$d comp$d )):named a131 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ ))(rel_fun$as (rel_fun$bd ?v0 ?v1 )(rel_fun$at (rel_fun$au uvc$ ?v0 )(rel_fun$au uvc$ ?v1 ))comp$a comp$a )):named a132 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ ))(rel_fun$be (rel_fun$bf ?v0 ?v1 )(rel_fun$bg (rel_fun$bh uvc$ ?v0 )(rel_fun$au uvc$ ?v1 ))comp$a comp$b )):named a133 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ ))(rel_fun$bi (rel_fun$bj ?v0 ?v1 )(rel_fun$bk (rel_fun$bl uvc$ ?v0 )(rel_fun$au uvc$ ?v1 ))comp$b comp$a )):named a134 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ ))(rel_fun$av (rel_fun$au ?v0 ?v1 )(rel_fun$aw (rel_fun$ax uvc$ ?v0 )(rel_fun$au uvc$ ?v1 ))comp$b comp$b )):named a135 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ ))(rel_fun$ay (rel_fun$bm ?v0 ?v1 )(rel_fun$aq (rel_fun$az uuy$ ?v0 )(rel_fun$az uuy$ ?v1 ))comp$c comp$c )):named a136 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ ))(rel_fun$bn (rel_fun$bo ?v0 ?v1 )(rel_fun$bp (rel_fun$bq uuy$ ?v0 )(rel_fun$az uuy$ ?v1 ))comp$c comp$d )):named a137 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ ))(rel_fun$br (rel_fun$bs ?v0 ?v1 )(rel_fun$bt (rel_fun$bu uuy$ ?v0 )(rel_fun$az uuy$ ?v1 ))comp$d comp$c )):named a138 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ ))(rel_fun$ba (rel_fun$az ?v0 ?v1 )(rel_fun$bb (rel_fun$bc uuy$ ?v0 )(rel_fun$az uuy$ ?v1 ))comp$d comp$d )):named a139 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ ))(rel_fun$bv (rel_fun$a ?v0 ?v1 )(rel_fun$bw (rel_fun$bx uvc$ ?v0 )(rel_fun$by uvc$ ?v1 ))comp$e comp$b )):named a140 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ ))(rel_fun$bz (rel_fun$a ?v0 ?v1 )(rel_fun$ca (rel_fun$cb uuy$ ?v0 )(rel_fun$cc uuy$ ?v1 ))comp$d comp$f )):named a141 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_c_bool_fun_fun$ ))(rel_fun$cd (rel_fun$d ?v0 ?v1 )(rel_fun$ce (rel_fun$a ?v2 ?v0 )(rel_fun$a ?v2 ?v1 ))comp$c comp$a )):named a142 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_c_bool_fun_fun$ ))(rel_fun$cf (rel_fun$a ?v0 ?v1 )(rel_fun$cg (rel_fun$g ?v2 ?v0 )(rel_fun$a ?v2 ?v1 ))comp$d comp$b )):named a143 ))
(assert (! (forall ((?v0 B_llist_d_stream_bool_fun_fun$ )(?v1 B_llist_d_stream_bool_fun_fun$ )(?v2 A_llist_c_stream_bool_fun_fun$ ))(rel_fun$ch (rel_fun$w ?v0 ?v1 )(rel_fun$ci (rel_fun$b ?v2 ?v0 )(rel_fun$b ?v2 ?v1 ))comp$g comp$h )):named a144 ))
(assert (! (forall ((?v0 A_llist_c_stream_bool_fun_fun$ )(?v1 B_llist_d_stream_bool_fun_fun$ )(?v2 A_llist_c_stream_bool_fun_fun$ ))(rel_fun$cj (rel_fun$b ?v0 ?v1 )(rel_fun$ck (rel_fun$x ?v2 ?v0 )(rel_fun$b ?v2 ?v1 ))comp$i comp$j )):named a145 ))
(assert (! (forall ((?v0 A_b_fun_c_d_fun_bool_fun_fun$ )(?v1 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )(?v2 A_b_fun_c_d_fun_bool_fun_fun$ ))(rel_fun$cl (rel_fun$ ?v0 ?v1 )(rel_fun$cm (rel_fun$ce ?v2 ?v0 )(rel_fun$ ?v2 ?v1 ))comp$ comp$k )):named a146 ))
(assert (! (forall ((?v0 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )(?v1 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )(?v2 A_b_fun_c_d_fun_bool_fun_fun$ ))(rel_fun$cn (rel_fun$ci ?v0 ?v1 )(rel_fun$co (rel_fun$ ?v2 ?v0 )(rel_fun$ ?v2 ?v1 ))comp$l comp$m )):named a147 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 C_c_bool_fun_fun$ ))(rel_fun$as (rel_fun$bd ?v0 ?v1 )(rel_fun$at (rel_fun$au ?v2 ?v0 )(rel_fun$au ?v2 ?v1 ))comp$a comp$a )):named a148 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 C_c_bool_fun_fun$ ))(rel_fun$be (rel_fun$bf ?v0 ?v1 )(rel_fun$bg (rel_fun$bh ?v2 ?v0 )(rel_fun$au ?v2 ?v1 ))comp$a comp$b )):named a149 ))
(assert (! (forall ((?v0 D_b_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 C_a_bool_fun_fun$ ))(rel_fun$cp (rel_fun$cq ?v0 ?v1 )(rel_fun$cr (rel_fun$cs ?v2 ?v0 )(rel_fun$cs ?v2 ?v1 ))comp$a comp$c )):named a150 ))
(assert (! (forall ((?v0 D_a_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 C_a_bool_fun_fun$ ))(rel_fun$ct (rel_fun$cu ?v0 ?v1 )(rel_fun$cv (rel_fun$cw ?v2 ?v0 )(rel_fun$cs ?v2 ?v1 ))comp$a comp$d )):named a151 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_c_bool_fun_fun$ ))(rel_fun$cd (rel_fun$d ?v0 ?v1 )(rel_fun$ce (rel_fun$a ?v2 ?v0 )(rel_fun$a ?v2 ?v1 ))comp$c comp$a )):named a152 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_c_bool_fun_fun$ ))(rel_fun$cf (rel_fun$a ?v0 ?v1 )(rel_fun$cg (rel_fun$g ?v2 ?v0 )(rel_fun$a ?v2 ?v1 ))comp$d comp$b )):named a153 ))
(assert (! (forall ((?v0 B_llist_d_stream_bool_fun_fun$ )(?v1 B_llist_d_stream_bool_fun_fun$ )(?v2 A_llist_c_stream_bool_fun_fun$ ))(rel_fun$ch (rel_fun$w ?v0 ?v1 )(rel_fun$ci (rel_fun$b ?v2 ?v0 )(rel_fun$b ?v2 ?v1 ))comp$g comp$h )):named a154 ))
(assert (! (forall ((?v0 A_llist_c_stream_bool_fun_fun$ )(?v1 B_llist_d_stream_bool_fun_fun$ )(?v2 A_llist_c_stream_bool_fun_fun$ ))(rel_fun$cj (rel_fun$b ?v0 ?v1 )(rel_fun$ck (rel_fun$x ?v2 ?v0 )(rel_fun$b ?v2 ?v1 ))comp$i comp$j )):named a155 ))
(assert (! (forall ((?v0 A_b_fun_c_d_fun_bool_fun_fun$ )(?v1 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )(?v2 A_b_fun_c_d_fun_bool_fun_fun$ ))(rel_fun$cl (rel_fun$ ?v0 ?v1 )(rel_fun$cm (rel_fun$ce ?v2 ?v0 )(rel_fun$ ?v2 ?v1 ))comp$ comp$k )):named a156 ))
(assert (! (forall ((?v0 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )(?v1 A_llist_b_llist_fun_c_stream_d_stream_fun_bool_fun_fun$ )(?v2 A_b_fun_c_d_fun_bool_fun_fun$ ))(rel_fun$cn (rel_fun$ci ?v0 ?v1 )(rel_fun$co (rel_fun$ ?v2 ?v0 )(rel_fun$ ?v2 ?v1 ))comp$l comp$m )):named a157 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 C_c_bool_fun_fun$ ))(rel_fun$as (rel_fun$bd ?v0 ?v1 )(rel_fun$at (rel_fun$au ?v2 ?v0 )(rel_fun$au ?v2 ?v1 ))comp$a comp$a )):named a158 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 C_c_bool_fun_fun$ ))(rel_fun$be (rel_fun$bf ?v0 ?v1 )(rel_fun$bg (rel_fun$bh ?v2 ?v0 )(rel_fun$au ?v2 ?v1 ))comp$a comp$b )):named a159 ))
(assert (! (forall ((?v0 D_b_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 C_a_bool_fun_fun$ ))(rel_fun$cp (rel_fun$cq ?v0 ?v1 )(rel_fun$cr (rel_fun$cs ?v2 ?v0 )(rel_fun$cs ?v2 ?v1 ))comp$a comp$c )):named a160 ))
(assert (! (forall ((?v0 D_a_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 C_a_bool_fun_fun$ ))(rel_fun$ct (rel_fun$cu ?v0 ?v1 )(rel_fun$cv (rel_fun$cw ?v2 ?v0 )(rel_fun$cs ?v2 ?v1 ))comp$a comp$d )):named a161 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ ))(rel_fun$cx ?v0 (rel_fun$cy (rel_fun$cz uvg$ (rel_fun$d ?v0 ?v0 ))(rel_fun$da uvg$ ?v0 ))rec_nat$ rec_nat$a )):named a162 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ ))(rel_fun$db ?v0 (rel_fun$dc (rel_fun$dd uvg$ (rel_fun$g ?v0 ?v0 ))(rel_fun$de uvg$ ?v0 ))rec_nat$b rec_nat$c )):named a163 ))
(assert (! (forall ((?v0 C_d_fun$ ))(= (fun_app$dp (fun_app$dq comp$a id$d )?v0 )?v0 )):named a164 ))
(assert (! (forall ((?v0 A_b_fun$ ))(= (fun_app$dr (fun_app$ds comp$c id$e )?v0 )?v0 )):named a165 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(= (lCons$a ?v0 (fun_app$dn llist_of_stream$b ?v1 ))(fun_app$dn llist_of_stream$b (sCons$b ?v0 ?v1 )))):named a166 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(= (lCons$ ?v0 (fun_app$do llist_of_stream$c ?v1 ))(fun_app$do llist_of_stream$c (sCons$c ?v0 ?v1 )))):named a167 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ ))(= (lCons$c ?v0 (fun_app$dl llist_of_stream$ ?v1 ))(fun_app$dl llist_of_stream$ (sCons$a ?v0 ?v1 )))):named a168 ))
(assert (! (forall ((?v0 D$ )(?v1 D_stream$ ))(= (lCons$b ?v0 (fun_app$dm llist_of_stream$a ?v1 ))(fun_app$dm llist_of_stream$a (sCons$ ?v0 ?v1 )))):named a169 ))
(assert (! (forall ((?v0 A_llist_b_llist_fun_a_llist_b_llist_fun_fun$ )(?v1 A_b_fun_a_llist_b_llist_fun_fun$ )(?v2 A_b_fun_a_b_fun_fun$ ))(= (fun_app$dt (fun_app$du comp$l ?v0 )(fun_app$dv (fun_app$dw comp$ ?v1 )?v2 ))(fun_app$dv (fun_app$dw comp$ (fun_app$dt (fun_app$du comp$l ?v0 )?v1 ))?v2 ))):named a170 ))
(assert (! (forall ((?v0 A_b_fun_a_llist_b_llist_fun_fun$ )(?v1 A_b_fun_a_b_fun_fun$ )(?v2 A_b_fun_a_b_fun_fun$ ))(= (fun_app$dv (fun_app$dw comp$ ?v0 )(fun_app$dx (comp$n ?v1 )?v2 ))(fun_app$dv (fun_app$dw comp$ (fun_app$dv (fun_app$dw comp$ ?v0 )?v1 ))?v2 ))):named a171 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 C_d_fun$ ))(= (fun_app$dp (fun_app$dq comp$a ?v0 )(fun_app$dp (fun_app$dq comp$a ?v1 )?v2 ))(fun_app$dp (fun_app$dq comp$a (fun_app$dy (comp$o ?v0 )?v1 ))?v2 ))):named a172 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 C_d_fun$ )(?v2 C_c_fun$ ))(= (fun_app$dp (fun_app$dq comp$a ?v0 )(fun_app$dz (fun_app$ea comp$b ?v1 )?v2 ))(fun_app$dz (fun_app$ea comp$b (fun_app$dp (fun_app$dq comp$a ?v0 )?v1 ))?v2 ))):named a173 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 D_c_fun$ )(?v2 C_d_fun$ ))(= (fun_app$dz (fun_app$ea comp$b ?v0 )(fun_app$eb (comp$p ?v1 )?v2 ))(fun_app$dp (fun_app$dq comp$a (fun_app$ec (comp$q ?v0 )?v1 ))?v2 ))):named a174 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C_c_fun$ )(?v2 C_c_fun$ ))(= (fun_app$dz (fun_app$ea comp$b ?v0 )(fun_app$ed (comp$r ?v1 )?v2 ))(fun_app$dz (fun_app$ea comp$b (fun_app$dz (fun_app$ea comp$b ?v0 )?v1 ))?v2 ))):named a175 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 A_b_fun$ ))(= (fun_app$dr (fun_app$ds comp$c ?v0 )(fun_app$dr (fun_app$ds comp$c ?v1 )?v2 ))(fun_app$dr (fun_app$ds comp$c (fun_app$ee (comp$s ?v0 )?v1 ))?v2 ))):named a176 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 A_b_fun$ )(?v2 A_a_fun$ ))(= (fun_app$dr (fun_app$ds comp$c ?v0 )(fun_app$ef (fun_app$eg comp$d ?v1 )?v2 ))(fun_app$ef (fun_app$eg comp$d (fun_app$dr (fun_app$ds comp$c ?v0 )?v1 ))?v2 ))):named a177 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 A_b_fun$ ))(= (fun_app$ef (fun_app$eg comp$d ?v0 )(fun_app$eh (comp$t ?v1 )?v2 ))(fun_app$dr (fun_app$ds comp$c (fun_app$ei (comp$u ?v0 )?v1 ))?v2 ))):named a178 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ ))(= (fun_app$ef (fun_app$eg comp$d ?v0 )(fun_app$ej (comp$v ?v1 )?v2 ))(fun_app$ef (fun_app$eg comp$d (fun_app$ef (fun_app$eg comp$d ?v0 )?v1 ))?v2 ))):named a179 ))
(assert (! (= (fun_app$dq comp$a id$d )id$f ):named a180 ))
(assert (! (= (fun_app$ds comp$c id$e )id$g ):named a181 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ )(?v2 D_c_fun$ )(?v3 C_d_fun$ )(?v4 C_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= (fun_app$ed (comp$r ?v0 )?v1 )(fun_app$eb (comp$p ?v2 )?v3 ))(= (fun_app$ec (comp$q ?v4 )?v2 )?v5 ))(= (fun_app$dz (fun_app$ea comp$b (fun_app$dz (fun_app$ea comp$b ?v4 )?v0 ))?v1 )(fun_app$dp (fun_app$dq comp$a ?v5 )?v3 )))):named a182 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 B_a_fun$ )(?v3 A_b_fun$ )(?v4 A_b_fun$ )(?v5 B_b_fun$ ))(=> (and (= (fun_app$ej (comp$v ?v0 )?v1 )(fun_app$eh (comp$t ?v2 )?v3 ))(= (fun_app$ei (comp$u ?v4 )?v2 )?v5 ))(= (fun_app$ef (fun_app$eg comp$d (fun_app$ef (fun_app$eg comp$d ?v4 )?v0 ))?v1 )(fun_app$dr (fun_app$ds comp$c ?v5 )?v3 )))):named a183 ))
(assert (! (forall ((?v0 D_c_fun$ )(?v1 C_d_fun$ )(?v2 C_c_fun$ )(?v3 C_c_fun$ )(?v4 C_d_fun$ )(?v5 C_d_fun$ ))(=> (and (= (fun_app$eb (comp$p ?v0 )?v1 )(fun_app$ed (comp$r ?v2 )?v3 ))(= (fun_app$dz (fun_app$ea comp$b ?v4 )?v2 )?v5 ))(= (fun_app$dp (fun_app$dq comp$a (fun_app$ec (comp$q ?v4 )?v0 ))?v1 )(fun_app$dz (fun_app$ea comp$b ?v5 )?v3 )))):named a184 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ )(?v2 C_c_fun$ )(?v3 C_c_fun$ )(?v4 C_d_fun$ )(?v5 C_d_fun$ ))(=> (and (= (fun_app$ed (comp$r ?v0 )?v1 )(fun_app$ed (comp$r ?v2 )?v3 ))(= (fun_app$dz (fun_app$ea comp$b ?v4 )?v2 )?v5 ))(= (fun_app$dz (fun_app$ea comp$b (fun_app$dz (fun_app$ea comp$b ?v4 )?v0 ))?v1 )(fun_app$dz (fun_app$ea comp$b ?v5 )?v3 )))):named a185 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_b_fun$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 A_b_fun$ )(?v5 A_b_fun$ ))(=> (and (= (fun_app$eh (comp$t ?v0 )?v1 )(fun_app$ej (comp$v ?v2 )?v3 ))(= (fun_app$ef (fun_app$eg comp$d ?v4 )?v2 )?v5 ))(= (fun_app$dr (fun_app$ds comp$c (fun_app$ei (comp$u ?v4 )?v0 ))?v1 )(fun_app$ef (fun_app$eg comp$d ?v5 )?v3 )))):named a186 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 A_b_fun$ )(?v5 A_b_fun$ ))(=> (and (= (fun_app$ej (comp$v ?v0 )?v1 )(fun_app$ej (comp$v ?v2 )?v3 ))(= (fun_app$ef (fun_app$eg comp$d ?v4 )?v2 )?v5 ))(= (fun_app$ef (fun_app$eg comp$d (fun_app$ef (fun_app$eg comp$d ?v4 )?v0 ))?v1 )(fun_app$ef (fun_app$eg comp$d ?v5 )?v3 )))):named a187 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 C_d_fun$ )(?v2 D_d_fun$ )(?v3 C_d_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= (fun_app$dp (fun_app$dq comp$a ?v0 )?v1 )(fun_app$dp (fun_app$dq comp$a ?v2 )?v3 ))(= (fun_app$dy (comp$o ?v4 )?v2 )?v5 ))(= (fun_app$dp (fun_app$dq comp$a (fun_app$dy (comp$o ?v4 )?v0 ))?v1 )(fun_app$dp (fun_app$dq comp$a ?v5 )?v3 )))):named a188 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 C_d_fun$ )(?v2 C_d_fun$ )(?v3 C_c_fun$ )(?v4 D_d_fun$ )(?v5 C_d_fun$ ))(=> (and (= (fun_app$dp (fun_app$dq comp$a ?v0 )?v1 )(fun_app$dz (fun_app$ea comp$b ?v2 )?v3 ))(= (fun_app$dp (fun_app$dq comp$a ?v4 )?v2 )?v5 ))(= (fun_app$dp (fun_app$dq comp$a (fun_app$dy (comp$o ?v4 )?v0 ))?v1 )(fun_app$dz (fun_app$ea comp$b ?v5 )?v3 )))):named a189 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C_c_fun$ )(?v2 D_d_fun$ )(?v3 C_d_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= (fun_app$dz (fun_app$ea comp$b ?v0 )?v1 )(fun_app$dp (fun_app$dq comp$a ?v2 )?v3 ))(= (fun_app$dy (comp$o ?v4 )?v2 )?v5 ))(= (fun_app$dz (fun_app$ea comp$b (fun_app$dp (fun_app$dq comp$a ?v4 )?v0 ))?v1 )(fun_app$dp (fun_app$dq comp$a ?v5 )?v3 )))):named a190 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C_c_fun$ )(?v2 C_d_fun$ )(?v3 C_c_fun$ )(?v4 D_d_fun$ )(?v5 C_d_fun$ ))(=> (and (= (fun_app$dz (fun_app$ea comp$b ?v0 )?v1 )(fun_app$dz (fun_app$ea comp$b ?v2 )?v3 ))(= (fun_app$dp (fun_app$dq comp$a ?v4 )?v2 )?v5 ))(= (fun_app$dz (fun_app$ea comp$b (fun_app$dp (fun_app$dq comp$a ?v4 )?v0 ))?v1 )(fun_app$dz (fun_app$ea comp$b ?v5 )?v3 )))):named a191 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 C_d_fun$ )(?v3 D_c_fun$ )(?v4 C_d_fun$ )(?v5 C_c_fun$ ))(=> (and (= (fun_app$dy (comp$o ?v0 )?v1 )(fun_app$ec (comp$q ?v2 )?v3 ))(= (fun_app$eb (comp$p ?v3 )?v4 )?v5 ))(= (fun_app$dp (fun_app$dq comp$a ?v0 )(fun_app$dp (fun_app$dq comp$a ?v1 )?v4 ))(fun_app$dz (fun_app$ea comp$b ?v2 )?v5 )))):named a192 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 A_b_fun$ )(?v3 B_a_fun$ )(?v4 A_b_fun$ )(?v5 A_a_fun$ ))(=> (and (= (fun_app$ee (comp$s ?v0 )?v1 )(fun_app$ei (comp$u ?v2 )?v3 ))(= (fun_app$eh (comp$t ?v3 )?v4 )?v5 ))(= (fun_app$dr (fun_app$ds comp$c ?v0 )(fun_app$dr (fun_app$ds comp$c ?v1 )?v4 ))(fun_app$ef (fun_app$eg comp$d ?v2 )?v5 )))):named a193 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 D_d_fun$ )(?v3 D_d_fun$ )(?v4 C_d_fun$ )(?v5 C_d_fun$ ))(=> (and (= (fun_app$dy (comp$o ?v0 )?v1 )(fun_app$dy (comp$o ?v2 )?v3 ))(= (fun_app$dp (fun_app$dq comp$a ?v3 )?v4 )?v5 ))(= (fun_app$dp (fun_app$dq comp$a ?v0 )(fun_app$dp (fun_app$dq comp$a ?v1 )?v4 ))(fun_app$dp (fun_app$dq comp$a ?v2 )?v5 )))):named a194 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 D_c_fun$ )(?v2 D_d_fun$ )(?v3 D_d_fun$ )(?v4 C_d_fun$ )(?v5 C_d_fun$ ))(=> (and (= (fun_app$ec (comp$q ?v0 )?v1 )(fun_app$dy (comp$o ?v2 )?v3 ))(= (fun_app$dp (fun_app$dq comp$a ?v3 )?v4 )?v5 ))(= (fun_app$dz (fun_app$ea comp$b ?v0 )(fun_app$eb (comp$p ?v1 )?v4 ))(fun_app$dp (fun_app$dq comp$a ?v2 )?v5 )))):named a195 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 A_b_fun$ )(?v5 A_b_fun$ ))(=> (and (= (fun_app$ee (comp$s ?v0 )?v1 )(fun_app$ee (comp$s ?v2 )?v3 ))(= (fun_app$dr (fun_app$ds comp$c ?v3 )?v4 )?v5 ))(= (fun_app$dr (fun_app$ds comp$c ?v0 )(fun_app$dr (fun_app$ds comp$c ?v1 )?v4 ))(fun_app$dr (fun_app$ds comp$c ?v2 )?v5 )))):named a196 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 A_b_fun$ )(?v5 A_b_fun$ ))(=> (and (= (fun_app$ei (comp$u ?v0 )?v1 )(fun_app$ee (comp$s ?v2 )?v3 ))(= (fun_app$dr (fun_app$ds comp$c ?v3 )?v4 )?v5 ))(= (fun_app$ef (fun_app$eg comp$d ?v0 )(fun_app$eh (comp$t ?v1 )?v4 ))(fun_app$dr (fun_app$ds comp$c ?v2 )?v5 )))):named a197 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 C_d_fun$ )(?v2 D_d_fun$ )(?v3 C_d_fun$ )(?v4 C_c_fun$ )(?v5 C_d_fun$ ))(=> (and (= (fun_app$dp (fun_app$dq comp$a ?v0 )?v1 )(fun_app$dp (fun_app$dq comp$a ?v2 )?v3 ))(= (fun_app$dz (fun_app$ea comp$b ?v3 )?v4 )?v5 ))(= (fun_app$dp (fun_app$dq comp$a ?v0 )(fun_app$dz (fun_app$ea comp$b ?v1 )?v4 ))(fun_app$dp (fun_app$dq comp$a ?v2 )?v5 )))):named a198 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 C_d_fun$ )(?v2 C_d_fun$ )(?v3 C_c_fun$ )(?v4 C_c_fun$ )(?v5 C_c_fun$ ))(=> (and (= (fun_app$dp (fun_app$dq comp$a ?v0 )?v1 )(fun_app$dz (fun_app$ea comp$b ?v2 )?v3 ))(= (fun_app$ed (comp$r ?v3 )?v4 )?v5 ))(= (fun_app$dp (fun_app$dq comp$a ?v0 )(fun_app$dz (fun_app$ea comp$b ?v1 )?v4 ))(fun_app$dz (fun_app$ea comp$b ?v2 )?v5 )))):named a199 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C_c_fun$ )(?v2 D_d_fun$ )(?v3 C_d_fun$ )(?v4 C_c_fun$ )(?v5 C_d_fun$ ))(=> (and (= (fun_app$dz (fun_app$ea comp$b ?v0 )?v1 )(fun_app$dp (fun_app$dq comp$a ?v2 )?v3 ))(= (fun_app$dz (fun_app$ea comp$b ?v3 )?v4 )?v5 ))(= (fun_app$dz (fun_app$ea comp$b ?v0 )(fun_app$ed (comp$r ?v1 )?v4 ))(fun_app$dp (fun_app$dq comp$a ?v2 )?v5 )))):named a200 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C_c_fun$ )(?v2 C_d_fun$ )(?v3 C_c_fun$ )(?v4 C_c_fun$ )(?v5 C_c_fun$ ))(=> (and (= (fun_app$dz (fun_app$ea comp$b ?v0 )?v1 )(fun_app$dz (fun_app$ea comp$b ?v2 )?v3 ))(= (fun_app$ed (comp$r ?v3 )?v4 )?v5 ))(= (fun_app$dz (fun_app$ea comp$b ?v0 )(fun_app$ed (comp$r ?v1 )?v4 ))(fun_app$dz (fun_app$ea comp$b ?v2 )?v5 )))):named a201 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$ )(?v1 A_b_fun_a_b_fun_fun$ )(?v2 A_b_fun_a_b_fun_fun$ )(?v3 A_b_fun_a_llist_b_llist_fun_fun$ ))(=> (= (fun_app$dx (comp$n ?v0 )?v1 )?v2 )(= (fun_app$dv (fun_app$dw comp$ (fun_app$dv (fun_app$dw comp$ ?v3 )?v0 ))?v1 )(fun_app$dv (fun_app$dw comp$ ?v3 )?v2 )))):named a202 ))
(assert (! (forall ((?v0 D_c_fun$ )(?v1 C_d_fun$ )(?v2 C_c_fun$ )(?v3 C_d_fun$ ))(=> (= (fun_app$eb (comp$p ?v0 )?v1 )?v2 )(= (fun_app$dp (fun_app$dq comp$a (fun_app$ec (comp$q ?v3 )?v0 ))?v1 )(fun_app$dz (fun_app$ea comp$b ?v3 )?v2 )))):named a203 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ )(?v2 C_c_fun$ )(?v3 C_d_fun$ ))(=> (= (fun_app$ed (comp$r ?v0 )?v1 )?v2 )(= (fun_app$dz (fun_app$ea comp$b (fun_app$dz (fun_app$ea comp$b ?v3 )?v0 ))?v1 )(fun_app$dz (fun_app$ea comp$b ?v3 )?v2 )))):named a204 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_b_fun$ )(?v2 A_a_fun$ )(?v3 A_b_fun$ ))(=> (= (fun_app$eh (comp$t ?v0 )?v1 )?v2 )(= (fun_app$dr (fun_app$ds comp$c (fun_app$ei (comp$u ?v3 )?v0 ))?v1 )(fun_app$ef (fun_app$eg comp$d ?v3 )?v2 )))):named a205 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 A_b_fun$ ))(=> (= (fun_app$ej (comp$v ?v0 )?v1 )?v2 )(= (fun_app$ef (fun_app$eg comp$d (fun_app$ef (fun_app$eg comp$d ?v3 )?v0 ))?v1 )(fun_app$ef (fun_app$eg comp$d ?v3 )?v2 )))):named a206 ))
(assert (! (forall ((?v0 A_b_fun_a_llist_b_llist_fun_fun$ )(?v1 A_b_fun_a_b_fun_fun$ )(?v2 A_b_fun_a_llist_b_llist_fun_fun$ )(?v3 A_llist_b_llist_fun_a_llist_b_llist_fun_fun$ ))(=> (= (fun_app$dv (fun_app$dw comp$ ?v0 )?v1 )?v2 )(= (fun_app$dv (fun_app$dw comp$ (fun_app$dt (fun_app$du comp$l ?v3 )?v0 ))?v1 )(fun_app$dt (fun_app$du comp$l ?v3 )?v2 )))):named a207 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 C_d_fun$ )(?v2 C_d_fun$ )(?v3 D_d_fun$ ))(=> (= (fun_app$dp (fun_app$dq comp$a ?v0 )?v1 )?v2 )(= (fun_app$dp (fun_app$dq comp$a (fun_app$dy (comp$o ?v3 )?v0 ))?v1 )(fun_app$dp (fun_app$dq comp$a ?v3 )?v2 )))):named a208 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C_c_fun$ )(?v2 C_d_fun$ )(?v3 D_d_fun$ ))(=> (= (fun_app$dz (fun_app$ea comp$b ?v0 )?v1 )?v2 )(= (fun_app$dz (fun_app$ea comp$b (fun_app$dp (fun_app$dq comp$a ?v3 )?v0 ))?v1 )(fun_app$dp (fun_app$dq comp$a ?v3 )?v2 )))):named a209 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$dr (fun_app$ds comp$c ?v0 )?v1 )?v2 )(= (fun_app$dr (fun_app$ds comp$c (fun_app$ee (comp$s ?v3 )?v0 ))?v1 )(fun_app$dr (fun_app$ds comp$c ?v3 )?v2 )))):named a210 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_a_fun$ )(?v2 A_b_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$ef (fun_app$eg comp$d ?v0 )?v1 )?v2 )(= (fun_app$ef (fun_app$eg comp$d (fun_app$dr (fun_app$ds comp$c ?v3 )?v0 ))?v1 )(fun_app$dr (fun_app$ds comp$c ?v3 )?v2 )))):named a211 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C_c_fun$ )(?v2 C_d_fun$ )(?v3 C_c_fun$ ))(=> (= (fun_app$dz (fun_app$ea comp$b ?v0 )?v1 )?v2 )(= (fun_app$dz (fun_app$ea comp$b ?v0 )(fun_app$ed (comp$r ?v1 )?v3 ))(fun_app$dz (fun_app$ea comp$b ?v2 )?v3 )))):named a212 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun$ )(?v3 A_a_fun$ ))(=> (= (fun_app$dr (fun_app$ds comp$c ?v0 )?v1 )?v2 )(= (fun_app$dr (fun_app$ds comp$c ?v0 )(fun_app$ef (fun_app$eg comp$d ?v1 )?v3 ))(fun_app$ef (fun_app$eg comp$d ?v2 )?v3 )))):named a213 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_a_fun$ )(?v2 A_b_fun$ )(?v3 A_a_fun$ ))(=> (= (fun_app$ef (fun_app$eg comp$d ?v0 )?v1 )?v2 )(= (fun_app$ef (fun_app$eg comp$d ?v0 )(fun_app$ej (comp$v ?v1 )?v3 ))(fun_app$ef (fun_app$eg comp$d ?v2 )?v3 )))):named a214 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C_stream$ )(?v2 D$ )(?v3 D_stream$ ))(= (= (fun_app$as (fun_app$av smap$ ?v0 )?v1 )(sCons$ ?v2 ?v3 ))(exists ((?v4 C$ )(?v5 C_stream$ ))(and (= ?v1 (sCons$a ?v4 ?v5 ))(and (= ?v2 (fun_app$bk ?v0 ?v4 ))(= ?v3 (fun_app$as (fun_app$av smap$ ?v0 )?v5 ))))))):named a215 ))
(assert (! (forall ((?v0 C_d_fun$ )(?v1 C$ )(?v2 C_stream$ ))(! (= (fun_app$as (fun_app$av smap$ ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ (fun_app$bk ?v0 ?v1 )(fun_app$as (fun_app$av smap$ ?v0 )?v2 ))):pattern ((fun_app$as (fun_app$av smap$ ?v0 )(sCons$a ?v1 ?v2 ))))):named a216 ))
(check-sat )
(get-unsat-core )
