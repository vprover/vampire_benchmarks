(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort Enat_set$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-sort A_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun p$ ()A_stream_bool_fun$ )
(declare-fun eSuc$ (Enat$ )Enat$ )
(declare-fun zero$ ()Enat$ )
(declare-fun omega$ ()A_stream$ )
(declare-fun member$ (Enat$ Enat_set$ )Bool )
(declare-fun sfirst$ (A_stream_bool_fun$ A_stream$ )Enat$ )
(declare-fun fun_app$ (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun of_bool$ (Bool )Enat$ )
(declare-fun enat_set$ ()Enat_set$ )
(declare-fun le_enatp$ (Enat$ Enat$ )Bool )
(declare-fun enat_setp$ (Enat$ )Bool )
(assert (! (not (= (sfirst$ p$ omega$ )zero$ )):named a0 ))
(assert (! (fun_app$ p$ omega$ ):named a1 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ ))(= (= (sfirst$ ?v0 ?v1 )zero$ )(fun_app$ ?v0 ?v1 ))):named a2 ))
(assert (! (forall ((?v0 Enat$ ))(=> (and (=> (= ?v0 zero$ )false )(=> (not (= ?v0 zero$ ))false ))false )):named a3 ))
(assert (! (forall ((?v0 Enat$ ))(= (= zero$ ?v0 )(= ?v0 zero$ ))):named a4 ))
(assert (! (= (of_bool$ false )zero$ ):named a5 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ ))(= (sfirst$ ?v0 ?v1 )(ite (fun_app$ ?v0 ?v1 )zero$ (eSuc$ (sfirst$ ?v0 (stl$ ?v1 )))))):named a6 ))
(assert (! (member$ zero$ enat_set$ ):named a7 ))
(assert (! (forall ((?v0 Enat$ ))(le_enatp$ zero$ ?v0 )):named a8 ))
(assert (! (enat_setp$ zero$ ):named a9 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (= (eSuc$ ?v0 )(eSuc$ ?v1 ))(= ?v0 ?v1 ))):named a10 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(= (= (of_bool$ ?v0 )(of_bool$ ?v1 ))(= ?v0 ?v1 ))):named a11 ))
(check-sat )
(get-unsat-core )
