(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort Enat_a_fun$ 0 )
(declare-sort Enat_b_fun$ 0 )
(declare-sort A_set_a_fun$ 0 )
(declare-sort B_set_b_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_b_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun$ 0 )
(declare-sort A_b_b_fun_fun$ 0 )
(declare-sort B_a_a_fun_fun$ 0 )
(declare-sort B_a_b_fun_fun$ 0 )
(declare-sort B_b_a_fun_fun$ 0 )
(declare-sort B_b_b_fun_fun$ 0 )
(declare-sort C_llist_b_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_enat_a_fun_fun$ 0 )
(declare-sort A_enat_b_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_enat_a_fun_fun$ 0 )
(declare-sort B_enat_b_fun_fun$ 0 )
(declare-sort Bool_a_a_fun_fun$ 0 )
(declare-sort Bool_a_b_fun_fun$ 0 )
(declare-sort Bool_b_a_fun_fun$ 0 )
(declare-sort Bool_b_b_fun_fun$ 0 )
(declare-sort Enat_a_a_fun_fun$ 0 )
(declare-sort Enat_a_b_fun_fun$ 0 )
(declare-sort Enat_b_a_fun_fun$ 0 )
(declare-sort Enat_b_b_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_a_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_b_fun_fun$ 0 )
(declare-sort B_b_fun_b_a_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun$ 0 )
(declare-sort C_c_llist_b_fun_fun$ 0 )
(declare-sort C_llist_a_b_fun_fun$ 0 )
(declare-sort A_a_fun_a_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun$ 0 )
(declare-sort B_a_fun_b_bool_fun_fun$ 0 )
(declare-sort B_b_fun_b_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort B_bool_fun_b_bool_fun_fun$ 0 )
(declare-sort A_a_fun_bool_a_a_fun_fun_fun$ 0 )
(declare-sort A_b_fun_bool_a_b_fun_fun_fun$ 0 )
(declare-sort B_a_fun_bool_b_a_fun_fun_fun$ 0 )
(declare-sort B_b_fun_bool_b_b_fun_fun_fun$ 0 )
(declare-sort A_enat_a_fun_fun_enat_a_a_fun_fun_fun$ 0 )
(declare-sort A_enat_b_fun_fun_enat_a_b_fun_fun_fun$ 0 )
(declare-sort B_enat_a_fun_fun_enat_b_a_fun_fun_fun$ 0 )
(declare-sort B_enat_b_fun_fun_enat_b_b_fun_fun_fun$ 0 )
(declare-sort C_llist$ 0)
(declare-fun lNil$ ()C_llist$)
(declare-fun lhd$ (C_llist$)C$)
(declare-fun ltl$ (C_llist$)C_llist$)
(declare-fun lCons$ (C$ C_llist$ )C_llist$)
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun f$ ()A_b_fun$ )
(declare-fun g$ (C$ )C_llist_a_b_fun_fun$ )
(declare-fun uu$ (A$ )C_c_llist_b_fun_fun$ )
(declare-fun xs$ ()C_llist$ )
(declare-fun uua$ ()A_b_fun$ )
(declare-fun uub$ (B_a_fun$ )B_a_fun_bool_b_a_fun_fun_fun$ )
(declare-fun uuc$ (A_a_fun$ )A_a_fun_bool_a_a_fun_fun_fun$ )
(declare-fun uud$ (B_b_fun$ )B_b_fun_bool_b_b_fun_fun_fun$ )
(declare-fun uue$ (A_b_fun$ )A_b_fun_bool_a_b_fun_fun_fun$ )
(declare-fun uuf$ ()A_a_fun$ )
(declare-fun uug$ ()B_b_fun$ )
(declare-fun uuh$ (B_enat_a_fun_fun$ )Enat_b_a_fun_fun$ )
(declare-fun uui$ (B_a_fun$ )B_enat_a_fun_fun_enat_b_a_fun_fun_fun$ )
(declare-fun uuj$ (A_enat_a_fun_fun$ )Enat_a_a_fun_fun$ )
(declare-fun uuk$ (A_a_fun$ )A_enat_a_fun_fun_enat_a_a_fun_fun_fun$ )
(declare-fun uul$ (B_enat_b_fun_fun$ )Enat_b_b_fun_fun$ )
(declare-fun uum$ (B_b_fun$ )B_enat_b_fun_fun_enat_b_b_fun_fun_fun$ )
(declare-fun uun$ (A_enat_b_fun_fun$ )Enat_a_b_fun_fun$ )
(declare-fun uuo$ (A_b_fun$ )A_enat_b_fun_fun_enat_a_b_fun_fun_fun$ )
(declare-fun uup$ (B_a_a_fun_fun$ )A_b_a_fun_fun$ )
(declare-fun uuq$ (B_a_a_fun_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun uur$ (B_b_a_fun_fun$ )B_b_a_fun_fun$ )
(declare-fun uus$ (B_b_a_fun_fun$ )B_b_fun_b_a_fun_fun$ )
(declare-fun uut$ (A_b_a_fun_fun$ )B_a_a_fun_fun$ )
(declare-fun uuu$ (A_b_a_fun_fun$ )A_b_fun_a_a_fun_fun$ )
(declare-fun uuv$ (A_a_a_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun uuw$ (A_a_a_fun_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun uux$ (B_a_b_fun_fun$ )A_b_b_fun_fun$ )
(declare-fun uuy$ (B_a_b_fun_fun$ )B_a_fun_b_b_fun_fun$ )
(declare-fun uuz$ (B_b_b_fun_fun$ )B_b_b_fun_fun$ )
(declare-fun uva$ (B_b_b_fun_fun$ )B_b_fun_b_b_fun_fun$ )
(declare-fun uvb$ (A_b_b_fun_fun$ )B_a_b_fun_fun$ )
(declare-fun uvc$ (A_b_b_fun_fun$ )A_b_fun_a_b_fun_fun$ )
(declare-fun uvd$ (A_a_b_fun_fun$ )A_a_b_fun_fun$ )
(declare-fun uve$ (A_a_b_fun_fun$ )A_a_fun_a_b_fun_fun$ )
(declare-fun uvf$ (A_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun uvg$ (B_a_fun$ )B_b_fun_b_a_fun_fun$ )
(declare-fun uvh$ (B_a_fun$ )A_b_fun_a_a_fun_fun$ )
(declare-fun uvi$ (A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun uvj$ (A_b_fun$ )B_a_fun_b_b_fun_fun$ )
(declare-fun uvk$ (B_b_fun$ )B_b_fun_b_b_fun_fun$ )
(declare-fun uvl$ (B_b_fun$ )A_b_fun_a_b_fun_fun$ )
(declare-fun uvm$ (A_b_fun$ )A_a_fun_a_b_fun_fun$ )
(declare-fun uvn$ (A$ )B_a_fun$ )
(declare-fun uvo$ (A$ )A_a_fun$ )
(declare-fun uvp$ (B$ )B_b_fun$ )
(declare-fun uvq$ (B$ )A_b_fun$ )
(declare-fun uvr$ (B_a_fun$ )B_a_fun_b_bool_fun_fun$ )
(declare-fun uvs$ (A_a_fun$ )A_a_fun_a_bool_fun_fun$ )
(declare-fun uvt$ (B_b_fun$ )B_b_fun_b_bool_fun_fun$ )
(declare-fun uvu$ (A_b_fun$ )A_b_fun_a_bool_fun_fun$ )
(declare-fun uvv$ (A_bool_fun$ )A_a_fun_a_bool_fun_fun$ )
(declare-fun uvw$ (A_bool_fun$ )B_a_fun_b_bool_fun_fun$ )
(declare-fun uvx$ (B_bool_fun$ )B_b_fun_b_bool_fun_fun$ )
(declare-fun uvy$ (B_bool_fun$ )A_b_fun_a_bool_fun_fun$ )
(declare-fun uvz$ (Bool )A_bool_fun_a_bool_fun_fun$ )
(declare-fun uwa$ (Bool )B_bool_fun_b_bool_fun_fun$ )
(declare-fun luba$ ()A_set_a_fun$ )
(declare-fun lubb$ ()B_set_b_fun$ )
(declare-fun orda$ ()A_a_bool_fun_fun$ )
(declare-fun ordb$ ()B_b_bool_fun_fun$ )
(declare-fun mcont$ (A_set_a_fun$ A_a_bool_fun_fun$ B_set_b_fun$ B_b_bool_fun_fun$ A_b_fun$ )Bool )
(declare-fun mcont$a (B_set_b_fun$ B_b_bool_fun_fun$ A_set_a_fun$ A_a_bool_fun_fun$ B_a_fun$ )Bool )
(declare-fun mcont$b (A_set_a_fun$ A_a_bool_fun_fun$ A_set_a_fun$ A_a_bool_fun_fun$ A_a_fun$ )Bool )
(declare-fun mcont$c (B_set_b_fun$ B_b_bool_fun_fun$ B_set_b_fun$ B_b_bool_fun_fun$ B_b_fun$ )Bool )
(declare-fun fun_app$ (A_b_fun$ A$ )B$ )
(declare-fun fun_app$a (C_llist_b_fun$ C_llist$ )B$ )
(declare-fun fun_app$b (C_c_llist_b_fun_fun$ C$ )C_llist_b_fun$ )
(declare-fun fun_app$c (C_llist_a_b_fun_fun$ C_llist$ )A_b_fun$ )
(declare-fun fun_app$d (B_b_fun$ B$ )B$ )
(declare-fun fun_app$e (B_b_fun_b_b_fun_fun$ B_b_fun$ )B_b_fun$ )
(declare-fun fun_app$f (B_b_b_fun_fun$ B$ )B_b_fun$ )
(declare-fun fun_app$g (B_a_fun$ B$ )A$ )
(declare-fun fun_app$h (B_b_fun_b_a_fun_fun$ B_b_fun$ )B_a_fun$ )
(declare-fun fun_app$i (B_b_a_fun_fun$ B$ )B_a_fun$ )
(declare-fun fun_app$j (B_a_fun_b_b_fun_fun$ B_a_fun$ )B_b_fun$ )
(declare-fun fun_app$k (B_a_b_fun_fun$ B$ )A_b_fun$ )
(declare-fun fun_app$l (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun$ )
(declare-fun fun_app$m (A_a_fun$ A$ )A$ )
(declare-fun fun_app$n (B_a_a_fun_fun$ B$ )A_a_fun$ )
(declare-fun fun_app$o (A_b_fun_a_b_fun_fun$ A_b_fun$ )A_b_fun$ )
(declare-fun fun_app$p (A_b_b_fun_fun$ A$ )B_b_fun$ )
(declare-fun fun_app$q (A_b_fun_a_a_fun_fun$ A_b_fun$ )A_a_fun$ )
(declare-fun fun_app$r (A_b_a_fun_fun$ A$ )B_a_fun$ )
(declare-fun fun_app$s (A_a_fun_a_b_fun_fun$ A_a_fun$ )A_b_fun$ )
(declare-fun fun_app$t (A_a_b_fun_fun$ A$ )A_b_fun$ )
(declare-fun fun_app$u (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$v (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$w (Enat_b_b_fun_fun$ Enat$ )B_b_fun$ )
(declare-fun fun_app$x (Enat_b_fun$ Enat$ )B$ )
(declare-fun fun_app$y (B_enat_b_fun_fun$ B$ )Enat_b_fun$ )
(declare-fun fun_app$z (Enat_b_a_fun_fun$ Enat$ )B_a_fun$ )
(declare-fun case_enat$ (B$ Enat_b_fun$ Enat$ )B$ )
(declare-fun fun_app$aa (Enat_a_fun$ Enat$ )A$ )
(declare-fun fun_app$ab (B_enat_a_fun_fun$ B$ )Enat_a_fun$ )
(declare-fun fun_app$ac (Enat_a_b_fun_fun$ Enat$ )A_b_fun$ )
(declare-fun fun_app$ad (A_enat_b_fun_fun$ A$ )Enat_b_fun$ )
(declare-fun fun_app$ae (Enat_a_a_fun_fun$ Enat$ )A_a_fun$ )
(declare-fun fun_app$af (A_enat_a_fun_fun$ A$ )Enat_a_fun$ )
(declare-fun fun_app$ag (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$ah (B_b_fun_b_bool_fun_fun$ B_b_fun$ )B_bool_fun$ )
(declare-fun fun_app$ai (B_a_fun_b_bool_fun_fun$ B_a_fun$ )B_bool_fun$ )
(declare-fun fun_app$aj (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$ak (A_b_fun_a_bool_fun_fun$ A_b_fun$ )A_bool_fun$ )
(declare-fun fun_app$al (A_a_fun_a_bool_fun_fun$ A_a_fun$ )A_bool_fun$ )
(declare-fun fun_app$am (B_bool_fun_b_bool_fun_fun$ B_bool_fun$ )B_bool_fun$ )
(declare-fun fun_app$an (A_bool_fun_a_bool_fun_fun$ A_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$ao (B_enat_b_fun_fun_enat_b_b_fun_fun_fun$ B_enat_b_fun_fun$ )Enat_b_b_fun_fun$ )
(declare-fun fun_app$ap (B_enat_a_fun_fun_enat_b_a_fun_fun_fun$ B_enat_a_fun_fun$ )Enat_b_a_fun_fun$ )
(declare-fun fun_app$aq (A_enat_b_fun_fun_enat_a_b_fun_fun_fun$ A_enat_b_fun_fun$ )Enat_a_b_fun_fun$ )
(declare-fun fun_app$ar (A_enat_a_fun_fun_enat_a_a_fun_fun_fun$ A_enat_a_fun_fun$ )Enat_a_a_fun_fun$ )
(declare-fun fun_app$as (Bool_b_b_fun_fun$ Bool )B_b_fun$ )
(declare-fun fun_app$at (B_b_fun_bool_b_b_fun_fun_fun$ B_b_fun$ )Bool_b_b_fun_fun$ )
(declare-fun fun_app$au (Bool_b_a_fun_fun$ Bool )B_a_fun$ )
(declare-fun fun_app$av (B_a_fun_bool_b_a_fun_fun_fun$ B_a_fun$ )Bool_b_a_fun_fun$ )
(declare-fun fun_app$aw (Bool_a_b_fun_fun$ Bool )A_b_fun$ )
(declare-fun fun_app$ax (A_b_fun_bool_a_b_fun_fun_fun$ A_b_fun$ )Bool_a_b_fun_fun$ )
(declare-fun fun_app$ay (Bool_a_a_fun_fun$ Bool )A_a_fun$ )
(declare-fun fun_app$az (A_a_fun_bool_a_a_fun_fun_fun$ A_a_fun$ )Bool_a_a_fun_fun$ )
(declare-fun fun_app$ba (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$bb (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun admissible$ (B_set_b_fun$ B_b_bool_fun_fun$ B_bool_fun$ )Bool )
(declare-fun case_enat$a (A$ Enat_a_fun$ Enat$ )A$ )
(declare-fun case_llist$ (B$ C_c_llist_b_fun_fun$ )C_llist_b_fun$ )
(declare-fun admissible$a (A_set_a_fun$ A_a_bool_fun_fun$ A_bool_fun$ )Bool )
(declare-fun partial_function_definitions$ (A_a_bool_fun_fun$ A_set_a_fun$ )Bool )
(declare-fun partial_function_definitions$a (B_b_bool_fun_fun$ B_set_b_fun$ )Bool )
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$ uua$ ?v0 )(fun_app$a (case_llist$ (fun_app$ f$ ?v0 )(uu$ ?v0 ))xs$ )):pattern ((fun_app$ uua$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A$ )(?v1 C$ )(?v2 C_llist$ ))(! (= (fun_app$a (fun_app$b (uu$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$c (g$ ?v1 )?v2 )?v0 )):pattern ((fun_app$a (fun_app$b (uu$ ?v0 )?v1 )?v2 )))):named a1 ))
(assert (! (forall ((?v0 B_b_b_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$d (fun_app$e (uva$ ?v0 )?v1 )?v2 )(fun_app$d (fun_app$f ?v0 ?v2 )(fun_app$d ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$e (uva$ ?v0 )?v1 )?v2 )))):named a2 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$g (fun_app$h (uus$ ?v0 )?v1 )?v2 )(fun_app$g (fun_app$i ?v0 ?v2 )(fun_app$d ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$h (uus$ ?v0 )?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 B_a_b_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$d (fun_app$j (uuy$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$k ?v0 ?v2 )(fun_app$g ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$j (uuy$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 B_a_a_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$g (fun_app$l (uuq$ ?v0 )?v1 )?v2 )(fun_app$m (fun_app$n ?v0 ?v2 )(fun_app$g ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$l (uuq$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_b_b_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$o (uvc$ ?v0 )?v1 )?v2 )(fun_app$d (fun_app$p ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$o (uvc$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$m (fun_app$q (uuu$ ?v0 )?v1 )?v2 )(fun_app$g (fun_app$r ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$q (uuu$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_a_b_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$s (uve$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$t ?v0 ?v2 )(fun_app$m ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$s (uve$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$m (fun_app$u (uuw$ ?v0 )?v1 )?v2 )(fun_app$m (fun_app$v ?v0 ?v2 )(fun_app$m ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$u (uuw$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 B_enat_b_fun_fun$ )(?v1 Enat$ )(?v2 B$ ))(! (= (fun_app$d (fun_app$w (uul$ ?v0 )?v1 )?v2 )(fun_app$x (fun_app$y ?v0 ?v2 )?v1 )):pattern ((fun_app$d (fun_app$w (uul$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 B_enat_a_fun_fun$ )(?v1 Enat$ )(?v2 B$ ))(! (= (fun_app$g (fun_app$z (uuh$ ?v0 )?v1 )?v2 )(fun_app$aa (fun_app$ab ?v0 ?v2 )?v1 )):pattern ((fun_app$g (fun_app$z (uuh$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 B_b_b_fun_fun$ )(?v1 B$ )(?v2 B$ ))(! (= (fun_app$d (fun_app$f (uuz$ ?v0 )?v1 )?v2 )(fun_app$d (fun_app$f ?v0 ?v2 )?v1 )):pattern ((fun_app$d (fun_app$f (uuz$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B$ )(?v2 B$ ))(! (= (fun_app$g (fun_app$i (uur$ ?v0 )?v1 )?v2 )(fun_app$g (fun_app$i ?v0 ?v2 )?v1 )):pattern ((fun_app$g (fun_app$i (uur$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 B_a_b_fun_fun$ )(?v1 A$ )(?v2 B$ ))(! (= (fun_app$d (fun_app$p (uux$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$k ?v0 ?v2 )?v1 )):pattern ((fun_app$d (fun_app$p (uux$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 B_a_a_fun_fun$ )(?v1 A$ )(?v2 B$ ))(! (= (fun_app$g (fun_app$r (uup$ ?v0 )?v1 )?v2 )(fun_app$m (fun_app$n ?v0 ?v2 )?v1 )):pattern ((fun_app$g (fun_app$r (uup$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_enat_b_fun_fun$ )(?v1 Enat$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$ac (uun$ ?v0 )?v1 )?v2 )(fun_app$x (fun_app$ad ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$ac (uun$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_enat_a_fun_fun$ )(?v1 Enat$ )(?v2 A$ ))(! (= (fun_app$m (fun_app$ae (uuj$ ?v0 )?v1 )?v2 )(fun_app$aa (fun_app$af ?v0 ?v2 )?v1 )):pattern ((fun_app$m (fun_app$ae (uuj$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_b_b_fun_fun$ )(?v1 B$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$k (uvb$ ?v0 )?v1 )?v2 )(fun_app$d (fun_app$p ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$k (uvb$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 B$ )(?v2 A$ ))(! (= (fun_app$m (fun_app$n (uut$ ?v0 )?v1 )?v2 )(fun_app$g (fun_app$r ?v0 ?v2 )?v1 )):pattern ((fun_app$m (fun_app$n (uut$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 A_a_b_fun_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$t (uvd$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$t ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$t (uvd$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$m (fun_app$v (uuv$ ?v0 )?v1 )?v2 )(fun_app$m (fun_app$v ?v0 ?v2 )?v1 )):pattern ((fun_app$m (fun_app$v (uuv$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$ag (fun_app$ah (uvt$ ?v0 )?v1 )?v2 )(= (fun_app$d ?v0 ?v2 )(fun_app$d ?v1 ?v2 ))):pattern ((fun_app$ag (fun_app$ah (uvt$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$ag (fun_app$ai (uvr$ ?v0 )?v1 )?v2 )(= (fun_app$g ?v0 ?v2 )(fun_app$g ?v1 ?v2 ))):pattern ((fun_app$ag (fun_app$ai (uvr$ ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$aj (fun_app$ak (uvu$ ?v0 )?v1 )?v2 )(= (fun_app$ ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$aj (fun_app$ak (uvu$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$aj (fun_app$al (uvs$ ?v0 )?v1 )?v2 )(= (fun_app$m ?v0 ?v2 )(fun_app$m ?v1 ?v2 ))):pattern ((fun_app$aj (fun_app$al (uvs$ ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 Bool )(?v1 B_bool_fun$ )(?v2 B$ ))(! (= (fun_app$ag (fun_app$am (uwa$ ?v0 )?v1 )?v2 )(=> ?v0 (fun_app$ag ?v1 ?v2 ))):pattern ((fun_app$ag (fun_app$am (uwa$ ?v0 )?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 Bool )(?v1 A_bool_fun$ )(?v2 A$ ))(! (= (fun_app$aj (fun_app$an (uvz$ ?v0 )?v1 )?v2 )(=> ?v0 (fun_app$aj ?v1 ?v2 ))):pattern ((fun_app$aj (fun_app$an (uvz$ ?v0 )?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$ag (fun_app$ah (uvx$ ?v0 )?v1 )?v2 )(fun_app$ag ?v0 (fun_app$d ?v1 ?v2 ))):pattern ((fun_app$ag (fun_app$ah (uvx$ ?v0 )?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$aj (fun_app$ak (uvy$ ?v0 )?v1 )?v2 )(fun_app$ag ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$aj (fun_app$ak (uvy$ ?v0 )?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$d (fun_app$e (uvk$ ?v0 )?v1 )?v2 )(fun_app$d ?v0 (fun_app$d ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$e (uvk$ ?v0 )?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$o (uvl$ ?v0 )?v1 )?v2 )(fun_app$d ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$o (uvl$ ?v0 )?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$g (fun_app$h (uvg$ ?v0 )?v1 )?v2 )(fun_app$g ?v0 (fun_app$d ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$h (uvg$ ?v0 )?v1 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$m (fun_app$q (uvh$ ?v0 )?v1 )?v2 )(fun_app$g ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$q (uvh$ ?v0 )?v1 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$ag (fun_app$ai (uvw$ ?v0 )?v1 )?v2 )(fun_app$aj ?v0 (fun_app$g ?v1 ?v2 ))):pattern ((fun_app$ag (fun_app$ai (uvw$ ?v0 )?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$aj (fun_app$al (uvv$ ?v0 )?v1 )?v2 )(fun_app$aj ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$aj (fun_app$al (uvv$ ?v0 )?v1 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$d (fun_app$j (uvj$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$g ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$j (uvj$ ?v0 )?v1 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$s (uvm$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$s (uvm$ ?v0 )?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$g (fun_app$l (uvf$ ?v0 )?v1 )?v2 )(fun_app$m ?v0 (fun_app$g ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$l (uvf$ ?v0 )?v1 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$m (fun_app$u (uvi$ ?v0 )?v1 )?v2 )(fun_app$m ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$u (uvi$ ?v0 )?v1 )?v2 )))):named a39 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_enat_b_fun_fun$ )(?v2 Enat$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$w (fun_app$ao (uum$ ?v0 )?v1 )?v2 )?v3 )(case_enat$ (fun_app$d ?v0 ?v3 )(fun_app$y ?v1 ?v3 )?v2 )):pattern ((fun_app$d (fun_app$w (fun_app$ao (uum$ ?v0 )?v1 )?v2 )?v3 )))):named a40 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_enat_a_fun_fun$ )(?v2 Enat$ )(?v3 B$ ))(! (= (fun_app$g (fun_app$z (fun_app$ap (uui$ ?v0 )?v1 )?v2 )?v3 )(case_enat$a (fun_app$g ?v0 ?v3 )(fun_app$ab ?v1 ?v3 )?v2 )):pattern ((fun_app$g (fun_app$z (fun_app$ap (uui$ ?v0 )?v1 )?v2 )?v3 )))):named a41 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_enat_b_fun_fun$ )(?v2 Enat$ )(?v3 A$ ))(! (= (fun_app$ (fun_app$ac (fun_app$aq (uuo$ ?v0 )?v1 )?v2 )?v3 )(case_enat$ (fun_app$ ?v0 ?v3 )(fun_app$ad ?v1 ?v3 )?v2 )):pattern ((fun_app$ (fun_app$ac (fun_app$aq (uuo$ ?v0 )?v1 )?v2 )?v3 )))):named a42 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_enat_a_fun_fun$ )(?v2 Enat$ )(?v3 A$ ))(! (= (fun_app$m (fun_app$ae (fun_app$ar (uuk$ ?v0 )?v1 )?v2 )?v3 )(case_enat$a (fun_app$m ?v0 ?v3 )(fun_app$af ?v1 ?v3 )?v2 )):pattern ((fun_app$m (fun_app$ae (fun_app$ar (uuk$ ?v0 )?v1 )?v2 )?v3 )))):named a43 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 Bool )(?v3 B$ ))(! (= (fun_app$d (fun_app$as (fun_app$at (uud$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$d ?v0 ?v3 )(fun_app$d ?v1 ?v3 ))):pattern ((fun_app$d (fun_app$as (fun_app$at (uud$ ?v0 )?v1 )?v2 )?v3 )))):named a44 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun$ )(?v2 Bool )(?v3 B$ ))(! (= (fun_app$g (fun_app$au (fun_app$av (uub$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$g ?v0 ?v3 )(fun_app$g ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$au (fun_app$av (uub$ ?v0 )?v1 )?v2 )?v3 )))):named a45 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ )(?v2 Bool )(?v3 A$ ))(! (= (fun_app$ (fun_app$aw (fun_app$ax (uue$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$ ?v0 ?v3 )(fun_app$ ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$aw (fun_app$ax (uue$ ?v0 )?v1 )?v2 )?v3 )))):named a46 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 Bool )(?v3 A$ ))(! (= (fun_app$m (fun_app$ay (fun_app$az (uuc$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$m ?v0 ?v3 )(fun_app$m ?v1 ?v3 ))):pattern ((fun_app$m (fun_app$ay (fun_app$az (uuc$ ?v0 )?v1 )?v2 )?v3 )))):named a47 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$d (uvp$ ?v0 )?v1 )?v0 ):pattern ((fun_app$d (uvp$ ?v0 )?v1 )))):named a48 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ ))(! (= (fun_app$ (uvq$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ (uvq$ ?v0 )?v1 )))):named a49 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ ))(! (= (fun_app$g (uvn$ ?v0 )?v1 )?v0 ):pattern ((fun_app$g (uvn$ ?v0 )?v1 )))):named a50 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$m (uvo$ ?v0 )?v1 )?v0 ):pattern ((fun_app$m (uvo$ ?v0 )?v1 )))):named a51 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$d uug$ ?v0 )?v0 ):pattern ((fun_app$d uug$ ?v0 )))):named a52 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$m uuf$ ?v0 )?v0 ):pattern ((fun_app$m uuf$ ?v0 )))):named a53 ))
(assert (! (not (mcont$ luba$ orda$ lubb$ ordb$ uua$ )):named a54 ))
(assert (! (mcont$ luba$ orda$ lubb$ ordb$ f$ ):named a55 ))
(assert (! (forall ((?v0 C$ )(?v1 C_llist$ ))(mcont$ luba$ orda$ lubb$ ordb$ (fun_app$c (g$ ?v0 )?v1 ))):named a56 ))
(assert (! (forall ((?v0 B_set_b_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 B_a_fun$ )(?v5 B_a_fun$ )(?v6 Bool ))(=> (and (mcont$a ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$a ?v0 ?v1 ?v2 ?v3 ?v5 ))(mcont$a ?v0 ?v1 ?v2 ?v3 (fun_app$au (fun_app$av (uub$ ?v4 )?v5 )?v6 )))):named a57 ))
(assert (! (forall ((?v0 A_set_a_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_a_fun$ )(?v5 A_a_fun$ )(?v6 Bool ))(=> (and (mcont$b ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$b ?v0 ?v1 ?v2 ?v3 ?v5 ))(mcont$b ?v0 ?v1 ?v2 ?v3 (fun_app$ay (fun_app$az (uuc$ ?v4 )?v5 )?v6 )))):named a58 ))
(assert (! (forall ((?v0 B_set_b_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ )(?v6 Bool ))(=> (and (mcont$c ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$c ?v0 ?v1 ?v2 ?v3 ?v5 ))(mcont$c ?v0 ?v1 ?v2 ?v3 (fun_app$as (fun_app$at (uud$ ?v4 )?v5 )?v6 )))):named a59 ))
(assert (! (forall ((?v0 A_set_a_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 A_b_fun$ )(?v5 A_b_fun$ )(?v6 Bool ))(=> (and (mcont$ ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$ ?v0 ?v1 ?v2 ?v3 ?v5 ))(mcont$ ?v0 ?v1 ?v2 ?v3 (fun_app$aw (fun_app$ax (uue$ ?v4 )?v5 )?v6 )))):named a60 ))
(assert (! (forall ((?v0 A_set_a_fun$ )(?v1 A_a_bool_fun_fun$ ))(mcont$b ?v0 ?v1 ?v0 ?v1 uuf$ )):named a61 ))
(assert (! (forall ((?v0 B_set_b_fun$ )(?v1 B_b_bool_fun_fun$ ))(mcont$c ?v0 ?v1 ?v0 ?v1 uug$ )):named a62 ))
(assert (! (forall ((?v0 B_set_b_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 B_a_fun$ )(?v5 B$ )(?v6 B$ ))(=> (and (mcont$a ?v0 ?v1 ?v2 ?v3 ?v4 )(fun_app$ag (fun_app$ba ?v1 ?v5 )?v6 ))(fun_app$aj (fun_app$bb ?v3 (fun_app$g ?v4 ?v5 ))(fun_app$g ?v4 ?v6 )))):named a63 ))
(assert (! (forall ((?v0 A_set_a_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_a_fun$ )(?v5 A$ )(?v6 A$ ))(=> (and (mcont$b ?v0 ?v1 ?v2 ?v3 ?v4 )(fun_app$aj (fun_app$bb ?v1 ?v5 )?v6 ))(fun_app$aj (fun_app$bb ?v3 (fun_app$m ?v4 ?v5 ))(fun_app$m ?v4 ?v6 )))):named a64 ))
(assert (! (forall ((?v0 B_set_b_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 B_b_fun$ )(?v5 B$ )(?v6 B$ ))(=> (and (mcont$c ?v0 ?v1 ?v2 ?v3 ?v4 )(fun_app$ag (fun_app$ba ?v1 ?v5 )?v6 ))(fun_app$ag (fun_app$ba ?v3 (fun_app$d ?v4 ?v5 ))(fun_app$d ?v4 ?v6 )))):named a65 ))
(assert (! (forall ((?v0 A_set_a_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 A_b_fun$ )(?v5 A$ )(?v6 A$ ))(=> (and (mcont$ ?v0 ?v1 ?v2 ?v3 ?v4 )(fun_app$aj (fun_app$bb ?v1 ?v5 )?v6 ))(fun_app$ag (fun_app$ba ?v3 (fun_app$ ?v4 ?v5 ))(fun_app$ ?v4 ?v6 )))):named a66 ))
(assert (! (forall ((?v0 B$ )(?v1 C_c_llist_b_fun_fun$ ))(! (= (fun_app$a (case_llist$ ?v0 ?v1 )lNil$ )?v0 ):pattern ((case_llist$ ?v0 ?v1 )))):named a67 ))
(assert (! (forall ((?v0 B$ )(?v1 C_c_llist_b_fun_fun$ )(?v2 C$ )(?v3 C_llist$ ))(! (= (fun_app$a (case_llist$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(fun_app$a (fun_app$b ?v1 ?v2 )?v3 )):pattern ((fun_app$a (case_llist$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))))):named a68 ))
(assert (! (forall ((?v0 B_set_b_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 B_a_fun$ )(?v5 B_enat_a_fun_fun$ )(?v6 Enat$ ))(=> (and (mcont$a ?v0 ?v1 ?v2 ?v3 ?v4 )(forall ((?v7 Enat$ ))(mcont$a ?v0 ?v1 ?v2 ?v3 (fun_app$z (uuh$ ?v5 )?v7 ))))(mcont$a ?v0 ?v1 ?v2 ?v3 (fun_app$z (fun_app$ap (uui$ ?v4 )?v5 )?v6 )))):named a69 ))
(assert (! (forall ((?v0 A_set_a_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_a_fun$ )(?v5 A_enat_a_fun_fun$ )(?v6 Enat$ ))(=> (and (mcont$b ?v0 ?v1 ?v2 ?v3 ?v4 )(forall ((?v7 Enat$ ))(mcont$b ?v0 ?v1 ?v2 ?v3 (fun_app$ae (uuj$ ?v5 )?v7 ))))(mcont$b ?v0 ?v1 ?v2 ?v3 (fun_app$ae (fun_app$ar (uuk$ ?v4 )?v5 )?v6 )))):named a70 ))
(assert (! (forall ((?v0 B_set_b_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 B_b_fun$ )(?v5 B_enat_b_fun_fun$ )(?v6 Enat$ ))(=> (and (mcont$c ?v0 ?v1 ?v2 ?v3 ?v4 )(forall ((?v7 Enat$ ))(mcont$c ?v0 ?v1 ?v2 ?v3 (fun_app$w (uul$ ?v5 )?v7 ))))(mcont$c ?v0 ?v1 ?v2 ?v3 (fun_app$w (fun_app$ao (uum$ ?v4 )?v5 )?v6 )))):named a71 ))
(assert (! (forall ((?v0 A_set_a_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 A_b_fun$ )(?v5 A_enat_b_fun_fun$ )(?v6 Enat$ ))(=> (and (mcont$ ?v0 ?v1 ?v2 ?v3 ?v4 )(forall ((?v7 Enat$ ))(mcont$ ?v0 ?v1 ?v2 ?v3 (fun_app$ac (uun$ ?v5 )?v7 ))))(mcont$ ?v0 ?v1 ?v2 ?v3 (fun_app$ac (fun_app$aq (uuo$ ?v4 )?v5 )?v6 )))):named a72 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set_a_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 B_a_a_fun_fun$ )(?v5 B_set_b_fun$ )(?v6 B_b_bool_fun_fun$ )(?v7 B_a_fun$ ))(=> (and (partial_function_definitions$ ?v0 ?v1 )(and (forall ((?v8 B$ ))(mcont$b ?v2 ?v3 ?v1 ?v0 (fun_app$n ?v4 ?v8 )))(and (forall ((?v8 A$ ))(mcont$a ?v5 ?v6 ?v1 ?v0 (fun_app$r (uup$ ?v4 )?v8 )))(mcont$a ?v5 ?v6 ?v2 ?v3 ?v7 ))))(mcont$a ?v5 ?v6 ?v1 ?v0 (fun_app$l (uuq$ ?v4 )?v7 )))):named a73 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set_a_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 B_b_a_fun_fun$ )(?v5 B_set_b_fun$ )(?v6 B_b_bool_fun_fun$ )(?v7 B_b_fun$ ))(=> (and (partial_function_definitions$ ?v0 ?v1 )(and (forall ((?v8 B$ ))(mcont$a ?v2 ?v3 ?v1 ?v0 (fun_app$i ?v4 ?v8 )))(and (forall ((?v8 B$ ))(mcont$a ?v5 ?v6 ?v1 ?v0 (fun_app$i (uur$ ?v4 )?v8 )))(mcont$c ?v5 ?v6 ?v2 ?v3 ?v7 ))))(mcont$a ?v5 ?v6 ?v1 ?v0 (fun_app$h (uus$ ?v4 )?v7 )))):named a74 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set_a_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 A_b_a_fun_fun$ )(?v5 A_set_a_fun$ )(?v6 A_a_bool_fun_fun$ )(?v7 A_b_fun$ ))(=> (and (partial_function_definitions$ ?v0 ?v1 )(and (forall ((?v8 A$ ))(mcont$a ?v2 ?v3 ?v1 ?v0 (fun_app$r ?v4 ?v8 )))(and (forall ((?v8 B$ ))(mcont$b ?v5 ?v6 ?v1 ?v0 (fun_app$n (uut$ ?v4 )?v8 )))(mcont$ ?v5 ?v6 ?v2 ?v3 ?v7 ))))(mcont$b ?v5 ?v6 ?v1 ?v0 (fun_app$q (uuu$ ?v4 )?v7 )))):named a75 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set_a_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_a_a_fun_fun$ )(?v5 A_set_a_fun$ )(?v6 A_a_bool_fun_fun$ )(?v7 A_a_fun$ ))(=> (and (partial_function_definitions$ ?v0 ?v1 )(and (forall ((?v8 A$ ))(mcont$b ?v2 ?v3 ?v1 ?v0 (fun_app$v ?v4 ?v8 )))(and (forall ((?v8 A$ ))(mcont$b ?v5 ?v6 ?v1 ?v0 (fun_app$v (uuv$ ?v4 )?v8 )))(mcont$b ?v5 ?v6 ?v2 ?v3 ?v7 ))))(mcont$b ?v5 ?v6 ?v1 ?v0 (fun_app$u (uuw$ ?v4 )?v7 )))):named a76 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set_b_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 B_a_b_fun_fun$ )(?v5 B_set_b_fun$ )(?v6 B_b_bool_fun_fun$ )(?v7 B_a_fun$ ))(=> (and (partial_function_definitions$a ?v0 ?v1 )(and (forall ((?v8 B$ ))(mcont$ ?v2 ?v3 ?v1 ?v0 (fun_app$k ?v4 ?v8 )))(and (forall ((?v8 A$ ))(mcont$c ?v5 ?v6 ?v1 ?v0 (fun_app$p (uux$ ?v4 )?v8 )))(mcont$a ?v5 ?v6 ?v2 ?v3 ?v7 ))))(mcont$c ?v5 ?v6 ?v1 ?v0 (fun_app$j (uuy$ ?v4 )?v7 )))):named a77 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set_b_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 B_b_b_fun_fun$ )(?v5 B_set_b_fun$ )(?v6 B_b_bool_fun_fun$ )(?v7 B_b_fun$ ))(=> (and (partial_function_definitions$a ?v0 ?v1 )(and (forall ((?v8 B$ ))(mcont$c ?v2 ?v3 ?v1 ?v0 (fun_app$f ?v4 ?v8 )))(and (forall ((?v8 B$ ))(mcont$c ?v5 ?v6 ?v1 ?v0 (fun_app$f (uuz$ ?v4 )?v8 )))(mcont$c ?v5 ?v6 ?v2 ?v3 ?v7 ))))(mcont$c ?v5 ?v6 ?v1 ?v0 (fun_app$e (uva$ ?v4 )?v7 )))):named a78 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set_b_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 A_b_b_fun_fun$ )(?v5 A_set_a_fun$ )(?v6 A_a_bool_fun_fun$ )(?v7 A_b_fun$ ))(=> (and (partial_function_definitions$a ?v0 ?v1 )(and (forall ((?v8 A$ ))(mcont$c ?v2 ?v3 ?v1 ?v0 (fun_app$p ?v4 ?v8 )))(and (forall ((?v8 B$ ))(mcont$ ?v5 ?v6 ?v1 ?v0 (fun_app$k (uvb$ ?v4 )?v8 )))(mcont$ ?v5 ?v6 ?v2 ?v3 ?v7 ))))(mcont$ ?v5 ?v6 ?v1 ?v0 (fun_app$o (uvc$ ?v4 )?v7 )))):named a79 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set_b_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_a_b_fun_fun$ )(?v5 A_set_a_fun$ )(?v6 A_a_bool_fun_fun$ )(?v7 A_a_fun$ ))(=> (and (partial_function_definitions$a ?v0 ?v1 )(and (forall ((?v8 A$ ))(mcont$ ?v2 ?v3 ?v1 ?v0 (fun_app$t ?v4 ?v8 )))(and (forall ((?v8 A$ ))(mcont$ ?v5 ?v6 ?v1 ?v0 (fun_app$t (uvd$ ?v4 )?v8 )))(mcont$b ?v5 ?v6 ?v2 ?v3 ?v7 ))))(mcont$ ?v5 ?v6 ?v1 ?v0 (fun_app$s (uve$ ?v4 )?v7 )))):named a80 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set_a_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_a_fun$ )(?v5 B_set_b_fun$ )(?v6 B_b_bool_fun_fun$ )(?v7 B_a_fun$ ))(=> (and (partial_function_definitions$ ?v0 ?v1 )(and (mcont$b ?v2 ?v3 ?v1 ?v0 ?v4 )(mcont$a ?v5 ?v6 ?v2 ?v3 ?v7 )))(mcont$a ?v5 ?v6 ?v1 ?v0 (fun_app$l (uvf$ ?v4 )?v7 )))):named a81 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set_a_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 B_a_fun$ )(?v5 B_set_b_fun$ )(?v6 B_b_bool_fun_fun$ )(?v7 B_b_fun$ ))(=> (and (partial_function_definitions$ ?v0 ?v1 )(and (mcont$a ?v2 ?v3 ?v1 ?v0 ?v4 )(mcont$c ?v5 ?v6 ?v2 ?v3 ?v7 )))(mcont$a ?v5 ?v6 ?v1 ?v0 (fun_app$h (uvg$ ?v4 )?v7 )))):named a82 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set_a_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 B_a_fun$ )(?v5 A_set_a_fun$ )(?v6 A_a_bool_fun_fun$ )(?v7 A_b_fun$ ))(=> (and (partial_function_definitions$ ?v0 ?v1 )(and (mcont$a ?v2 ?v3 ?v1 ?v0 ?v4 )(mcont$ ?v5 ?v6 ?v2 ?v3 ?v7 )))(mcont$b ?v5 ?v6 ?v1 ?v0 (fun_app$q (uvh$ ?v4 )?v7 )))):named a83 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set_a_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_a_fun$ )(?v5 A_set_a_fun$ )(?v6 A_a_bool_fun_fun$ )(?v7 A_a_fun$ ))(=> (and (partial_function_definitions$ ?v0 ?v1 )(and (mcont$b ?v2 ?v3 ?v1 ?v0 ?v4 )(mcont$b ?v5 ?v6 ?v2 ?v3 ?v7 )))(mcont$b ?v5 ?v6 ?v1 ?v0 (fun_app$u (uvi$ ?v4 )?v7 )))):named a84 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set_b_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_b_fun$ )(?v5 B_set_b_fun$ )(?v6 B_b_bool_fun_fun$ )(?v7 B_a_fun$ ))(=> (and (partial_function_definitions$a ?v0 ?v1 )(and (mcont$ ?v2 ?v3 ?v1 ?v0 ?v4 )(mcont$a ?v5 ?v6 ?v2 ?v3 ?v7 )))(mcont$c ?v5 ?v6 ?v1 ?v0 (fun_app$j (uvj$ ?v4 )?v7 )))):named a85 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set_b_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 B_b_fun$ )(?v5 B_set_b_fun$ )(?v6 B_b_bool_fun_fun$ )(?v7 B_b_fun$ ))(=> (and (partial_function_definitions$a ?v0 ?v1 )(and (mcont$c ?v2 ?v3 ?v1 ?v0 ?v4 )(mcont$c ?v5 ?v6 ?v2 ?v3 ?v7 )))(mcont$c ?v5 ?v6 ?v1 ?v0 (fun_app$e (uvk$ ?v4 )?v7 )))):named a86 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set_b_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 B_b_fun$ )(?v5 A_set_a_fun$ )(?v6 A_a_bool_fun_fun$ )(?v7 A_b_fun$ ))(=> (and (partial_function_definitions$a ?v0 ?v1 )(and (mcont$c ?v2 ?v3 ?v1 ?v0 ?v4 )(mcont$ ?v5 ?v6 ?v2 ?v3 ?v7 )))(mcont$ ?v5 ?v6 ?v1 ?v0 (fun_app$o (uvl$ ?v4 )?v7 )))):named a87 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set_b_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_b_fun$ )(?v5 A_set_a_fun$ )(?v6 A_a_bool_fun_fun$ )(?v7 A_a_fun$ ))(=> (and (partial_function_definitions$a ?v0 ?v1 )(and (mcont$ ?v2 ?v3 ?v1 ?v0 ?v4 )(mcont$b ?v5 ?v6 ?v2 ?v3 ?v7 )))(mcont$ ?v5 ?v6 ?v1 ?v0 (fun_app$s (uvm$ ?v4 )?v7 )))):named a88 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set_a_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 A$ ))(=> (partial_function_definitions$ ?v0 ?v1 )(mcont$a ?v2 ?v3 ?v1 ?v0 (uvn$ ?v4 )))):named a89 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set_a_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 A$ ))(=> (partial_function_definitions$ ?v0 ?v1 )(mcont$b ?v2 ?v3 ?v1 ?v0 (uvo$ ?v4 )))):named a90 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set_b_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 B$ ))(=> (partial_function_definitions$a ?v0 ?v1 )(mcont$c ?v2 ?v3 ?v1 ?v0 (uvp$ ?v4 )))):named a91 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set_b_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 B$ ))(=> (partial_function_definitions$a ?v0 ?v1 )(mcont$ ?v2 ?v3 ?v1 ?v0 (uvq$ ?v4 )))):named a92 ))
(assert (! (forall ((?v0 B_set_b_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 B_a_fun$ )(?v5 B_a_fun$ ))(=> (and (mcont$a ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$a ?v0 ?v1 ?v2 ?v3 ?v5 ))(admissible$ ?v0 ?v1 (fun_app$ai (uvr$ ?v4 )?v5 )))):named a93 ))
(assert (! (forall ((?v0 A_set_a_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_set_a_fun$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_a_fun$ )(?v5 A_a_fun$ ))(=> (and (mcont$b ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$b ?v0 ?v1 ?v2 ?v3 ?v5 ))(admissible$a ?v0 ?v1 (fun_app$al (uvs$ ?v4 )?v5 )))):named a94 ))
(assert (! (forall ((?v0 B_set_b_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ ))(=> (and (mcont$c ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$c ?v0 ?v1 ?v2 ?v3 ?v5 ))(admissible$ ?v0 ?v1 (fun_app$ah (uvt$ ?v4 )?v5 )))):named a95 ))
(assert (! (forall ((?v0 A_set_a_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 B_set_b_fun$ )(?v3 B_b_bool_fun_fun$ )(?v4 A_b_fun$ )(?v5 A_b_fun$ ))(=> (and (mcont$ ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$ ?v0 ?v1 ?v2 ?v3 ?v5 ))(admissible$a ?v0 ?v1 (fun_app$ak (uvu$ ?v4 )?v5 )))):named a96 ))
(assert (! (forall ((?v0 A_set_a_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_bool_fun$ )(?v3 A_set_a_fun$ )(?v4 A_a_bool_fun_fun$ )(?v5 A_a_fun$ ))(=> (and (admissible$a ?v0 ?v1 ?v2 )(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 ))(admissible$a ?v3 ?v4 (fun_app$al (uvv$ ?v2 )?v5 )))):named a97 ))
(assert (! (forall ((?v0 A_set_a_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_bool_fun$ )(?v3 B_set_b_fun$ )(?v4 B_b_bool_fun_fun$ )(?v5 B_a_fun$ ))(=> (and (admissible$a ?v0 ?v1 ?v2 )(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 ))(admissible$ ?v3 ?v4 (fun_app$ai (uvw$ ?v2 )?v5 )))):named a98 ))
(assert (! (forall ((?v0 B_set_b_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_bool_fun$ )(?v3 B_set_b_fun$ )(?v4 B_b_bool_fun_fun$ )(?v5 B_b_fun$ ))(=> (and (admissible$ ?v0 ?v1 ?v2 )(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 ))(admissible$ ?v3 ?v4 (fun_app$ah (uvx$ ?v2 )?v5 )))):named a99 ))
(assert (! (forall ((?v0 B_set_b_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_bool_fun$ )(?v3 A_set_a_fun$ )(?v4 A_a_bool_fun_fun$ )(?v5 A_b_fun$ ))(=> (and (admissible$ ?v0 ?v1 ?v2 )(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 ))(admissible$a ?v3 ?v4 (fun_app$ak (uvy$ ?v2 )?v5 )))):named a100 ))
(assert (! (forall ((?v0 C$ )(?v1 C_llist$ )(?v2 C$ )(?v3 C_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a101 ))
(assert (! (forall ((?v0 C_llist$ ))(= (not (= ?v0 lNil$ ))(exists ((?v1 C$ )(?v2 C_llist$ ))(= ?v0 (lCons$ ?v1 ?v2 ))))):named a102 ))
(assert (! (forall ((?v0 C_llist$ ))(=> (and (=> (= ?v0 lNil$ )false )(forall ((?v1 C$ )(?v2 C_llist$ ))(=> (= ?v0 (lCons$ ?v1 ?v2 ))false )))false )):named a103 ))
(assert (! (forall ((?v0 Bool )(?v1 A_set_a_fun$ )(?v2 A_a_bool_fun_fun$ )(?v3 A_bool_fun$ ))(=> (=> ?v0 (admissible$a ?v1 ?v2 ?v3 ))(admissible$a ?v1 ?v2 (fun_app$an (uvz$ ?v0 )?v3 )))):named a104 ))
(assert (! (forall ((?v0 Bool )(?v1 B_set_b_fun$ )(?v2 B_b_bool_fun_fun$ )(?v3 B_bool_fun$ ))(=> (=> ?v0 (admissible$ ?v1 ?v2 ?v3 ))(admissible$ ?v1 ?v2 (fun_app$am (uwa$ ?v0 )?v3 )))):named a105 ))
(check-sat )
(get-unsat-core )
