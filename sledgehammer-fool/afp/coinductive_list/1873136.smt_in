(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort Bool_a_fun$ 0 )
(declare-sort Bool_b_fun$ 0 )
(declare-sort Bool_llist$ 0 )
(declare-sort A_bool_prod$ 0 )
(declare-sort B_a_llist_fun$ 0 )
(declare-sort B_b_llist_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_a_prod_fun$ 0 )
(declare-sort B_a_a_prod_fun$ 0 )
(declare-sort B_a_b_prod_fun$ 0 )
(declare-sort B_b_a_prod_fun$ 0 )
(declare-sort B_b_b_prod_fun$ 0 )
(declare-sort B_bool_llist_fun$ 0 )
(declare-sort B_a_bool_prod_fun$ 0 )
(declare-sort B_b_bool_prod_fun$ 0 )
(declare-sort B_bool_a_prod_fun$ 0 )
(declare-sort B_bool_b_prod_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_b_fun_a_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_b_fun_fun$ 0 )
(declare-sort B_b_fun_b_a_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun$ 0 )
(declare-sort B_llist_a_llist_fun$ 0 )
(declare-sort B_bool_bool_prod_fun$ 0 )
(declare-sort A_a_fun_a_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_a_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_bool_fun_fun$ 0 )
(declare-sort B_b_fun_b_bool_fun_fun$ 0 )
(declare-sort B_bool_fun_b_a_fun_fun$ 0 )
(declare-sort B_bool_fun_b_b_fun_fun$ 0 )
(declare-sort B_llist_bool_llist_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_llist_fun_fun$ 0 )
(declare-sort B_bool_fun_b_bool_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_a_prod_fun_fun$ 0 )
(declare-sort B_b_fun_b_a_a_prod_fun_fun$ 0 )
(declare-sort B_b_fun_b_a_bool_prod_fun_fun$ 0 )
(declare-sort B_bool_fun_b_a_bool_prod_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_b_b_llist_fun_fun_fun$ 0 )
(declare-sort B_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun$ 0 )
(declare-sort B_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-sort A_a_prod$ 0)
(declare-fun fst$ (A_a_prod$)A$)
(declare-fun snd$ (A_a_prod$)A$)
(declare-fun pair$ (A$ A$ )A_a_prod$)
(declare-sort B_llist$ 0)
(declare-sort A_bool_prod_llist$ 0)
(declare-fun lNil$a ()B_llist$)
(declare-fun lhd$a (B_llist$)B$)
(declare-fun ltl$a (B_llist$)B_llist$)
(declare-fun lCons$a (B$ B_llist$ )B_llist$)
(declare-fun lNil$b ()A_bool_prod_llist$)
(declare-fun lhd$b (A_bool_prod_llist$)A_bool_prod$)
(declare-fun ltl$b (A_bool_prod_llist$)A_bool_prod_llist$)
(declare-fun lCons$b (A_bool_prod$ A_bool_prod_llist$ )A_bool_prod_llist$)
(declare-sort A_b_prod$ 0)
(declare-sort B_a_prod$ 0)
(declare-sort B_b_prod$ 0)
(declare-fun fst$a (A_b_prod$)A$)
(declare-fun snd$a (A_b_prod$)B$)
(declare-fun pair$a (A$ B$ )A_b_prod$)
(declare-fun fst$b (B_a_prod$)B$)
(declare-fun snd$b (B_a_prod$)A$)
(declare-fun pair$b (B$ A$ )B_a_prod$)
(declare-fun fst$c (B_b_prod$)B$)
(declare-fun snd$c (B_b_prod$)B$)
(declare-fun pair$c (B$ B$ )B_b_prod$)
(declare-fun b$ ()B$ )
(declare-fun comp$ (B_bool_fun$ )B_b_fun_b_bool_fun_fun$ )
(declare-fun lhd$c ()B_a_fun$ )
(declare-fun lhd$d (Bool_llist$ )Bool )
(declare-fun lmap$ (B_bool_fun$ )B_llist_bool_llist_fun$ )
(declare-fun ltl$c ()B_b_fun$ )
(declare-fun ltl$d (Bool_llist$ )Bool_llist$ )
(declare-fun comp$a (B_a_fun$ )B_b_fun_b_a_fun_fun$ )
(declare-fun comp$b (B_a_bool_prod_fun$ )B_b_fun_b_a_bool_prod_fun_fun$ )
(declare-fun comp$c (B_a_a_prod_fun$ )B_b_fun_b_a_a_prod_fun_fun$ )
(declare-fun comp$d (B_b_fun$ )B_b_fun_b_b_fun_fun$ )
(declare-fun comp$e (A_bool_fun$ )B_a_fun_b_bool_fun_fun$ )
(declare-fun comp$f (A_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun comp$g (Bool_bool_fun$ )B_bool_fun_b_bool_fun_fun$ )
(declare-fun comp$h (Bool_a_fun$ )B_bool_fun_b_a_fun_fun$ )
(declare-fun comp$i (Bool_b_fun$ )B_bool_fun_b_b_fun_fun$ )
(declare-fun comp$j (A_b_fun$ )B_a_fun_b_b_fun_fun$ )
(declare-fun comp$k (Bool_bool_fun$ )A_bool_fun_a_bool_fun_fun$ )
(declare-fun comp$l (Bool_a_fun$ )A_bool_fun_a_a_fun_fun$ )
(declare-fun comp$m (B_bool_fun$ )A_b_fun_a_bool_fun_fun$ )
(declare-fun comp$n (B_a_fun$ )A_b_fun_a_a_fun_fun$ )
(declare-fun comp$o (A_bool_fun$ )A_a_fun_a_bool_fun_fun$ )
(declare-fun comp$p (A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun comp$q (B_bool_bool_prod_fun$ B_b_fun$ )B_bool_bool_prod_fun$ )
(declare-fun comp$r (B_bool_a_prod_fun$ B_b_fun$ )B_bool_a_prod_fun$ )
(declare-fun comp$s (B_bool_b_prod_fun$ B_b_fun$ )B_bool_b_prod_fun$ )
(declare-fun comp$t (B_a_b_prod_fun$ B_b_fun$ )B_a_b_prod_fun$ )
(declare-fun comp$u (B_b_bool_prod_fun$ B_b_fun$ )B_b_bool_prod_fun$ )
(declare-fun comp$v (B_b_a_prod_fun$ B_b_fun$ )B_b_a_prod_fun$ )
(declare-fun comp$w (B_b_b_prod_fun$ B_b_fun$ )B_b_b_prod_fun$ )
(declare-fun comp$x (A_a_a_prod_fun$ )B_a_fun_b_a_a_prod_fun_fun$ )
(declare-fun comp$y (B_llist_bool_llist_fun$ B_b_llist_fun$ )B_bool_llist_fun$ )
(declare-fun comp$z (B_llist_a_llist_fun$ B_b_llist_fun$ )B_a_llist_fun$ )
(declare-fun lNil$c ()Bool_llist$ )
(declare-fun lmap$a (B_a_fun$ )B_llist_a_llist_fun$ )
(declare-fun lmap$b (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun lmap$c (A_b_fun$ A_llist$ )B_llist$ )
(declare-fun lmap$d (A_bool_fun$ A_llist$ )Bool_llist$ )
(declare-fun lmap$e (B_b_fun$ B_llist$ )B_llist$ )
(declare-fun lmap$f (Bool_a_fun$ Bool_llist$ )A_llist$ )
(declare-fun lmap$g (Bool_b_fun$ Bool_llist$ )B_llist$ )
(declare-fun lmap$h (Bool_bool_fun$ Bool_llist$ )Bool_llist$ )
(declare-fun lmap$i (B_a_bool_prod_fun$ B_llist$ )A_bool_prod_llist$ )
(declare-fun lnull$ (B_llist$ )Bool )
(declare-fun convol$ (B_bool_fun$ B_bool_fun$ )B_bool_bool_prod_fun$ )
(declare-fun lCons$c (Bool Bool_llist$ )Bool_llist$ )
(declare-fun lnull$a (Bool_llist$ )Bool )
(declare-fun lnull$b (A_llist$ )Bool )
(declare-fun convol$a (B_bool_fun$ B_a_fun$ )B_bool_a_prod_fun$ )
(declare-fun convol$b (B_a_fun$ )B_bool_fun_b_a_bool_prod_fun_fun$ )
(declare-fun convol$c (B_a_fun$ )B_a_fun_b_a_a_prod_fun_fun$ )
(declare-fun convol$d (B_bool_fun$ B_b_fun$ )B_bool_b_prod_fun$ )
(declare-fun convol$e (B_a_fun$ B_b_fun$ )B_a_b_prod_fun$ )
(declare-fun convol$f (B_b_fun$ B_bool_fun$ )B_b_bool_prod_fun$ )
(declare-fun convol$g (B_b_fun$ B_a_fun$ )B_b_a_prod_fun$ )
(declare-fun convol$h (B_b_fun$ B_b_fun$ )B_b_b_prod_fun$ )
(declare-fun convol$i (A_a_fun$ A_a_fun$ )A_a_a_prod_fun$ )
(declare-fun fun_app$ (B_b_fun$ B$ )B$ )
(declare-fun iS_LNIL$ ()B_bool_fun$ )
(declare-fun fun_app$a (B_b_fun_b_bool_fun_fun$ B_b_fun$ )B_bool_fun$ )
(declare-fun fun_app$b (B_b_fun_b_a_fun_fun$ B_b_fun$ )B_a_fun$ )
(declare-fun fun_app$c (B_a_bool_prod_fun$ B$ )A_bool_prod$ )
(declare-fun fun_app$d (B_b_fun_b_a_bool_prod_fun_fun$ B_b_fun$ )B_a_bool_prod_fun$ )
(declare-fun fun_app$e (B_a_a_prod_fun$ B$ )A_a_prod$ )
(declare-fun fun_app$f (B_b_fun_b_a_a_prod_fun_fun$ B_b_fun$ )B_a_a_prod_fun$ )
(declare-fun fun_app$g (B_b_fun_b_b_fun_fun$ B_b_fun$ )B_b_fun$ )
(declare-fun fun_app$h (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$i (B_a_fun_b_bool_fun_fun$ B_a_fun$ )B_bool_fun$ )
(declare-fun fun_app$j (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$k (B_a_fun$ B$ )A$ )
(declare-fun fun_app$l (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun$ )
(declare-fun fun_app$m (A_a_fun$ A$ )A$ )
(declare-fun fun_app$n (B_bool_fun_b_bool_fun_fun$ B_bool_fun$ )B_bool_fun$ )
(declare-fun fun_app$o (B_bool_fun_b_a_fun_fun$ B_bool_fun$ )B_a_fun$ )
(declare-fun fun_app$p (B_bool_fun_b_b_fun_fun$ B_bool_fun$ )B_b_fun$ )
(declare-fun fun_app$q (B_a_fun_b_b_fun_fun$ B_a_fun$ )B_b_fun$ )
(declare-fun fun_app$r (A_bool_fun_a_bool_fun_fun$ A_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$s (A_bool_fun_a_a_fun_fun$ A_bool_fun$ )A_a_fun$ )
(declare-fun fun_app$t (A_b_fun_a_bool_fun_fun$ A_b_fun$ )A_bool_fun$ )
(declare-fun fun_app$u (A_b_fun_a_a_fun_fun$ A_b_fun$ )A_a_fun$ )
(declare-fun fun_app$v (A_b_fun$ A$ )B$ )
(declare-fun fun_app$w (A_a_fun_a_bool_fun_fun$ A_a_fun$ )A_bool_fun$ )
(declare-fun fun_app$x (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$y (B_llist_bool_llist_fun$ B_llist$ )Bool_llist$ )
(declare-fun fun_app$z (B_b_llist_fun$ B$ )B_llist$ )
(declare-fun fun_app$aa (B_b_fun_b_b_llist_fun_fun$ B_b_fun$ )B_b_llist_fun$ )
(declare-fun fun_app$ab (B_b_fun_b_b_fun_b_b_llist_fun_fun_fun$ B_b_fun$ )B_b_fun_b_b_llist_fun_fun$ )
(declare-fun fun_app$ac (B_llist_a_llist_fun$ B_llist$ )A_llist$ )
(declare-fun fun_app$ad (B_bool_fun_b_a_bool_prod_fun_fun$ B_bool_fun$ )B_a_bool_prod_fun$ )
(declare-fun fun_app$ae (B_a_fun_b_a_a_prod_fun_fun$ B_a_fun$ )B_a_a_prod_fun$ )
(declare-fun fun_app$af (B_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun$ B_b_llist_fun$ )B_b_fun_b_b_llist_fun_fun$ )
(declare-fun fun_app$ag (B_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$ B_bool_fun$ )B_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun$ )
(declare-fun fun_app$ah (B_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun$ B_b_fun$ )B_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$ )
(declare-fun corec_llist$ (B_bool_fun$ )B_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun$ )
(declare-fun corec_llist$a (B_bool_fun$ B_bool_fun$ B_bool_fun$ B_bool_llist_fun$ B_b_fun$ )B_bool_llist_fun$ )
(declare-fun corec_llist$b (B_bool_fun$ B_a_fun$ B_bool_fun$ B_a_llist_fun$ B_b_fun$ )B_a_llist_fun$ )
(declare-fun unfold_llist$ (B_bool_fun$ B_a_fun$ B_b_fun$ B$ )A_llist$ )
(declare-fun unfold_llist$a (B_bool_fun$ )B_b_fun_b_b_fun_b_b_llist_fun_fun_fun$ )
(declare-fun unfold_llist$b (B_bool_fun$ B_bool_fun$ B_b_fun$ B$ )Bool_llist$ )
(declare-fun unfold_llist$c (B_bool_fun$ B_a_bool_prod_fun$ B_b_fun$ B$ )A_bool_prod_llist$ )
(assert (! (not (= (unfold_llist$ iS_LNIL$ lhd$c ltl$c (fun_app$ ltl$c b$ ))(unfold_llist$ (fun_app$a (comp$ iS_LNIL$ )ltl$c )(fun_app$b (comp$a lhd$c )ltl$c )ltl$c b$ ))):named a0 ))
(assert (! (forall ((?v0 B_a_bool_prod_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$c (fun_app$d (comp$b ?v0 )?v1 )?v2 )(fun_app$c ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$d (comp$b ?v0 )?v1 )?v2 )))):named a1 ))
(assert (! (forall ((?v0 B_a_a_prod_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$e (fun_app$f (comp$c ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$f (comp$c ?v0 )?v1 )?v2 )))):named a2 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$ (fun_app$g (comp$d ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$g (comp$d ?v0 )?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$h (fun_app$i (comp$e ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$k ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$i (comp$e ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$k (fun_app$l (comp$f ?v0 )?v1 )?v2 )(fun_app$m ?v0 (fun_app$k ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$l (comp$f ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$h (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$h ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$a (comp$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$k (fun_app$b (comp$a ?v0 )?v1 )?v2 )(fun_app$k ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$b (comp$a ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (fun_app$n (comp$g ?v0 )(fun_app$a (comp$ ?v1 )?v2 ))(fun_app$a (comp$ (fun_app$n (comp$g ?v0 )?v1 ))?v2 ))):named a8 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (fun_app$o (comp$h ?v0 )(fun_app$a (comp$ ?v1 )?v2 ))(fun_app$b (comp$a (fun_app$o (comp$h ?v0 )?v1 ))?v2 ))):named a9 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ ))(= (fun_app$i (comp$e ?v0 )(fun_app$b (comp$a ?v1 )?v2 ))(fun_app$a (comp$ (fun_app$i (comp$e ?v0 )?v1 ))?v2 ))):named a10 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ ))(= (fun_app$l (comp$f ?v0 )(fun_app$b (comp$a ?v1 )?v2 ))(fun_app$b (comp$a (fun_app$l (comp$f ?v0 )?v1 ))?v2 ))):named a11 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ ))(= (fun_app$a (comp$ ?v0 )(fun_app$g (comp$d ?v1 )?v2 ))(fun_app$a (comp$ (fun_app$a (comp$ ?v0 )?v1 ))?v2 ))):named a12 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ ))(= (fun_app$b (comp$a ?v0 )(fun_app$g (comp$d ?v1 )?v2 ))(fun_app$b (comp$a (fun_app$b (comp$a ?v0 )?v1 ))?v2 ))):named a13 ))
(assert (! (forall ((?v0 Bool_b_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (fun_app$p (comp$i ?v0 )(fun_app$a (comp$ ?v1 )?v2 ))(fun_app$g (comp$d (fun_app$p (comp$i ?v0 )?v1 ))?v2 ))):named a14 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ ))(= (fun_app$q (comp$j ?v0 )(fun_app$b (comp$a ?v1 )?v2 ))(fun_app$g (comp$d (fun_app$q (comp$j ?v0 )?v1 ))?v2 ))):named a15 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 B_a_fun$ ))(= (fun_app$n (comp$g ?v0 )(fun_app$i (comp$e ?v1 )?v2 ))(fun_app$i (comp$e (fun_app$r (comp$k ?v0 )?v1 ))?v2 ))):named a16 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 B_a_fun$ ))(= (fun_app$o (comp$h ?v0 )(fun_app$i (comp$e ?v1 )?v2 ))(fun_app$l (comp$f (fun_app$s (comp$l ?v0 )?v1 ))?v2 ))):named a17 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (fun_app$a (comp$ (fun_app$n (comp$g ?v0 )?v1 ))?v2 )(fun_app$n (comp$g ?v0 )(fun_app$a (comp$ ?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ ))(= (fun_app$a (comp$ (fun_app$i (comp$e ?v0 )?v1 ))?v2 )(fun_app$i (comp$e ?v0 )(fun_app$b (comp$a ?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ ))(= (fun_app$a (comp$ (fun_app$a (comp$ ?v0 )?v1 ))?v2 )(fun_app$a (comp$ ?v0 )(fun_app$g (comp$d ?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (fun_app$b (comp$a (fun_app$o (comp$h ?v0 )?v1 ))?v2 )(fun_app$o (comp$h ?v0 )(fun_app$a (comp$ ?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ ))(= (fun_app$b (comp$a (fun_app$l (comp$f ?v0 )?v1 ))?v2 )(fun_app$l (comp$f ?v0 )(fun_app$b (comp$a ?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ ))(= (fun_app$b (comp$a (fun_app$b (comp$a ?v0 )?v1 ))?v2 )(fun_app$b (comp$a ?v0 )(fun_app$g (comp$d ?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 Bool_b_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (fun_app$g (comp$d (fun_app$p (comp$i ?v0 )?v1 ))?v2 )(fun_app$p (comp$i ?v0 )(fun_app$a (comp$ ?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ ))(= (fun_app$g (comp$d (fun_app$q (comp$j ?v0 )?v1 ))?v2 )(fun_app$q (comp$j ?v0 )(fun_app$b (comp$a ?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ ))(= (fun_app$g (comp$d (fun_app$g (comp$d ?v0 )?v1 ))?v2 )(fun_app$g (comp$d ?v0 )(fun_app$g (comp$d ?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 B_a_fun$ ))(= (fun_app$i (comp$e (fun_app$r (comp$k ?v0 )?v1 ))?v2 )(fun_app$n (comp$g ?v0 )(fun_app$i (comp$e ?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 B_a_bool_prod_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$c (fun_app$d (comp$b ?v0 )?v1 )?v2 )(fun_app$c ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$d (comp$b ?v0 )?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 B_a_a_prod_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$e (fun_app$f (comp$c ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$f (comp$c ?v0 )?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$ (fun_app$g (comp$d ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$g (comp$d ?v0 )?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$h (fun_app$i (comp$e ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$k ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$i (comp$e ?v0 )?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$k (fun_app$l (comp$f ?v0 )?v1 )?v2 )(fun_app$m ?v0 (fun_app$k ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$l (comp$f ?v0 )?v1 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$h (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$h ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$a (comp$ ?v0 )?v1 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$k (fun_app$b (comp$a ?v0 )?v1 )?v2 )(fun_app$k ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$b (comp$a ?v0 )?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$h ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$h ?v2 (fun_app$ ?v3 ?v4 ))))false ))false )):named a35 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (and (= (fun_app$b (comp$a ?v0 )?v1 )(fun_app$b (comp$a ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$k ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$ ?v3 ?v4 ))))false ))false )):named a36 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$i (comp$e ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$h ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$k ?v3 ?v4 ))))false ))false )):named a37 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 A_a_fun$ )(?v3 B_a_fun$ ))(=> (and (= (fun_app$b (comp$a ?v0 )?v1 )(fun_app$l (comp$f ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$k ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$m ?v2 (fun_app$k ?v3 ?v4 ))))false ))false )):named a38 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ ))(=> (and (= (fun_app$g (comp$d ?v0 )?v1 )(fun_app$g (comp$d ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$ ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$ ?v3 ?v4 ))))false ))false )):named a39 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (and (= (fun_app$i (comp$e ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$j ?v0 (fun_app$k ?v1 ?v4 ))(fun_app$h ?v2 (fun_app$ ?v3 ?v4 ))))false ))false )):named a40 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ ))(=> (and (= (fun_app$i (comp$e ?v0 )?v1 )(fun_app$i (comp$e ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$j ?v0 (fun_app$k ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$k ?v3 ?v4 ))))false ))false )):named a41 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (and (= (fun_app$l (comp$f ?v0 )?v1 )(fun_app$b (comp$a ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$m ?v0 (fun_app$k ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$ ?v3 ?v4 ))))false ))false )):named a42 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 A_a_fun$ )(?v3 B_a_fun$ ))(=> (and (= (fun_app$l (comp$f ?v0 )?v1 )(fun_app$l (comp$f ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$m ?v0 (fun_app$k ?v1 ?v4 ))(fun_app$m ?v2 (fun_app$k ?v3 ?v4 ))))false ))false )):named a43 ))
(assert (! (forall ((?v0 B_a_bool_prod_fun$ )(?v1 B_b_fun$ )(?v2 B_a_bool_prod_fun$ )(?v3 B_b_fun$ ))(=> (and (= (fun_app$d (comp$b ?v0 )?v1 )(fun_app$d (comp$b ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$c ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$c ?v2 (fun_app$ ?v3 ?v4 ))))false ))false )):named a44 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 B_bool_fun$ )(?v5 B_bool_fun$ ))(=> (and (= (fun_app$g (comp$d ?v0 )?v1 )(fun_app$g (comp$d ?v2 )?v3 ))(= (fun_app$a (comp$ ?v4 )?v2 )?v5 ))(= (fun_app$a (comp$ (fun_app$a (comp$ ?v4 )?v0 ))?v1 )(fun_app$a (comp$ ?v5 )?v3 )))):named a45 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 B_a_fun$ )(?v5 B_a_fun$ ))(=> (and (= (fun_app$g (comp$d ?v0 )?v1 )(fun_app$g (comp$d ?v2 )?v3 ))(= (fun_app$b (comp$a ?v4 )?v2 )?v5 ))(= (fun_app$b (comp$a (fun_app$b (comp$a ?v4 )?v0 ))?v1 )(fun_app$b (comp$a ?v5 )?v3 )))):named a46 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 Bool_bool_fun$ )(?v5 B_bool_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$n (comp$g ?v4 )?v2 )?v5 ))(= (fun_app$a (comp$ (fun_app$n (comp$g ?v4 )?v0 ))?v1 )(fun_app$a (comp$ ?v5 )?v3 )))):named a47 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 Bool_a_fun$ )(?v5 B_a_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$o (comp$h ?v4 )?v2 )?v5 ))(= (fun_app$b (comp$a (fun_app$o (comp$h ?v4 )?v0 ))?v1 )(fun_app$b (comp$a ?v5 )?v3 )))):named a48 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 A_bool_fun$ )(?v5 B_bool_fun$ ))(=> (and (= (fun_app$b (comp$a ?v0 )?v1 )(fun_app$b (comp$a ?v2 )?v3 ))(= (fun_app$i (comp$e ?v4 )?v2 )?v5 ))(= (fun_app$a (comp$ (fun_app$i (comp$e ?v4 )?v0 ))?v1 )(fun_app$a (comp$ ?v5 )?v3 )))):named a49 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 A_a_fun$ )(?v5 B_a_fun$ ))(=> (and (= (fun_app$b (comp$a ?v0 )?v1 )(fun_app$b (comp$a ?v2 )?v3 ))(= (fun_app$l (comp$f ?v4 )?v2 )?v5 ))(= (fun_app$b (comp$a (fun_app$l (comp$f ?v4 )?v0 ))?v1 )(fun_app$b (comp$a ?v5 )?v3 )))):named a50 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 B_bool_fun$ )(?v5 B_bool_fun$ ))(=> (and (= (fun_app$q (comp$j ?v0 )?v1 )(fun_app$g (comp$d ?v2 )?v3 ))(= (fun_app$a (comp$ ?v4 )?v2 )?v5 ))(= (fun_app$i (comp$e (fun_app$t (comp$m ?v4 )?v0 ))?v1 )(fun_app$a (comp$ ?v5 )?v3 )))):named a51 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 B_a_fun$ )(?v5 B_a_fun$ ))(=> (and (= (fun_app$q (comp$j ?v0 )?v1 )(fun_app$g (comp$d ?v2 )?v3 ))(= (fun_app$b (comp$a ?v4 )?v2 )?v5 ))(= (fun_app$l (comp$f (fun_app$u (comp$n ?v4 )?v0 ))?v1 )(fun_app$b (comp$a ?v5 )?v3 )))):named a52 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 Bool_b_fun$ )(?v5 B_b_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$p (comp$i ?v4 )?v2 )?v5 ))(= (fun_app$g (comp$d (fun_app$p (comp$i ?v4 )?v0 ))?v1 )(fun_app$g (comp$d ?v5 )?v3 )))):named a53 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ )(?v4 Bool_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$i (comp$e ?v2 )?v3 ))(= (fun_app$r (comp$k ?v4 )?v2 )?v5 ))(= (fun_app$a (comp$ (fun_app$n (comp$g ?v4 )?v0 ))?v1 )(fun_app$i (comp$e ?v5 )?v3 )))):named a54 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ ))(=> (and (= (fun_app$n (comp$g ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$g (comp$d ?v3 )?v4 )?v5 ))(= (fun_app$n (comp$g ?v0 )(fun_app$a (comp$ ?v1 )?v4 ))(fun_app$a (comp$ ?v2 )?v5 )))):named a55 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ ))(=> (and (= (fun_app$i (comp$e ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$g (comp$d ?v3 )?v4 )?v5 ))(= (fun_app$i (comp$e ?v0 )(fun_app$b (comp$a ?v1 )?v4 ))(fun_app$a (comp$ ?v2 )?v5 )))):named a56 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ ))(=> (and (= (fun_app$o (comp$h ?v0 )?v1 )(fun_app$b (comp$a ?v2 )?v3 ))(= (fun_app$g (comp$d ?v3 )?v4 )?v5 ))(= (fun_app$o (comp$h ?v0 )(fun_app$a (comp$ ?v1 )?v4 ))(fun_app$b (comp$a ?v2 )?v5 )))):named a57 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ ))(=> (and (= (fun_app$l (comp$f ?v0 )?v1 )(fun_app$b (comp$a ?v2 )?v3 ))(= (fun_app$g (comp$d ?v3 )?v4 )?v5 ))(= (fun_app$l (comp$f ?v0 )(fun_app$b (comp$a ?v1 )?v4 ))(fun_app$b (comp$a ?v2 )?v5 )))):named a58 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 Bool_bool_fun$ )(?v3 B_bool_fun$ )(?v4 B_b_fun$ )(?v5 B_bool_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$n (comp$g ?v2 )?v3 ))(= (fun_app$a (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$ ?v0 )(fun_app$g (comp$d ?v1 )?v4 ))(fun_app$n (comp$g ?v2 )?v5 )))):named a59 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ )(?v4 B_b_fun$ )(?v5 B_a_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$i (comp$e ?v2 )?v3 ))(= (fun_app$b (comp$a ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$ ?v0 )(fun_app$g (comp$d ?v1 )?v4 ))(fun_app$i (comp$e ?v2 )?v5 )))):named a60 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$g (comp$d ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$ ?v0 )(fun_app$g (comp$d ?v1 )?v4 ))(fun_app$a (comp$ ?v2 )?v5 )))):named a61 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 Bool_a_fun$ )(?v3 B_bool_fun$ )(?v4 B_b_fun$ )(?v5 B_bool_fun$ ))(=> (and (= (fun_app$b (comp$a ?v0 )?v1 )(fun_app$o (comp$h ?v2 )?v3 ))(= (fun_app$a (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$b (comp$a ?v0 )(fun_app$g (comp$d ?v1 )?v4 ))(fun_app$o (comp$h ?v2 )?v5 )))):named a62 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 A_a_fun$ )(?v3 B_a_fun$ )(?v4 B_b_fun$ )(?v5 B_a_fun$ ))(=> (and (= (fun_app$b (comp$a ?v0 )?v1 )(fun_app$l (comp$f ?v2 )?v3 ))(= (fun_app$b (comp$a ?v3 )?v4 )?v5 ))(= (fun_app$b (comp$a ?v0 )(fun_app$g (comp$d ?v1 )?v4 ))(fun_app$l (comp$f ?v2 )?v5 )))):named a63 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ ))(=> (and (= (fun_app$b (comp$a ?v0 )?v1 )(fun_app$b (comp$a ?v2 )?v3 ))(= (fun_app$g (comp$d ?v3 )?v4 )?v5 ))(= (fun_app$b (comp$a ?v0 )(fun_app$g (comp$d ?v1 )?v4 ))(fun_app$b (comp$a ?v2 )?v5 )))):named a64 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$h ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$h ?v2 (fun_app$ ?v3 ?v4 ))))):named a65 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(=> (= (fun_app$b (comp$a ?v0 )?v1 )(fun_app$b (comp$a ?v2 )?v3 ))(= (fun_app$k ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$ ?v3 ?v4 ))))):named a66 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ )(?v4 B$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$i (comp$e ?v2 )?v3 ))(= (fun_app$h ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$k ?v3 ?v4 ))))):named a67 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 A_a_fun$ )(?v3 B_a_fun$ )(?v4 B$ ))(=> (= (fun_app$b (comp$a ?v0 )?v1 )(fun_app$l (comp$f ?v2 )?v3 ))(= (fun_app$k ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$m ?v2 (fun_app$k ?v3 ?v4 ))))):named a68 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(=> (= (fun_app$g (comp$d ?v0 )?v1 )(fun_app$g (comp$d ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$ ?v3 ?v4 ))))):named a69 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(=> (= (fun_app$i (comp$e ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$j ?v0 (fun_app$k ?v1 ?v4 ))(fun_app$h ?v2 (fun_app$ ?v3 ?v4 ))))):named a70 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ )(?v4 B$ ))(=> (= (fun_app$i (comp$e ?v0 )?v1 )(fun_app$i (comp$e ?v2 )?v3 ))(= (fun_app$j ?v0 (fun_app$k ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$k ?v3 ?v4 ))))):named a71 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(=> (= (fun_app$l (comp$f ?v0 )?v1 )(fun_app$b (comp$a ?v2 )?v3 ))(= (fun_app$m ?v0 (fun_app$k ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$ ?v3 ?v4 ))))):named a72 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 A_a_fun$ )(?v3 B_a_fun$ )(?v4 B$ ))(=> (= (fun_app$l (comp$f ?v0 )?v1 )(fun_app$l (comp$f ?v2 )?v3 ))(= (fun_app$m ?v0 (fun_app$k ?v1 ?v4 ))(fun_app$m ?v2 (fun_app$k ?v3 ?v4 ))))):named a73 ))
(assert (! (forall ((?v0 B_a_bool_prod_fun$ )(?v1 B_b_fun$ )(?v2 B_a_bool_prod_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(=> (= (fun_app$d (comp$b ?v0 )?v1 )(fun_app$d (comp$b ?v2 )?v3 ))(= (fun_app$c ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$c ?v2 (fun_app$ ?v3 ?v4 ))))):named a74 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B_bool_fun$ ))(=> (= (fun_app$g (comp$d ?v0 )?v1 )?v2 )(= (fun_app$a (comp$ (fun_app$a (comp$ ?v3 )?v0 ))?v1 )(fun_app$a (comp$ ?v3 )?v2 )))):named a75 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B_a_fun$ ))(=> (= (fun_app$g (comp$d ?v0 )?v1 )?v2 )(= (fun_app$b (comp$a (fun_app$b (comp$a ?v3 )?v0 ))?v1 )(fun_app$b (comp$a ?v3 )?v2 )))):named a76 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )?v2 )(= (fun_app$a (comp$ (fun_app$n (comp$g ?v3 )?v0 ))?v1 )(fun_app$n (comp$g ?v3 )?v2 )))):named a77 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 Bool_a_fun$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )?v2 )(= (fun_app$b (comp$a (fun_app$o (comp$h ?v3 )?v0 ))?v1 )(fun_app$o (comp$h ?v3 )?v2 )))):named a78 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$b (comp$a ?v0 )?v1 )?v2 )(= (fun_app$a (comp$ (fun_app$i (comp$e ?v3 )?v0 ))?v1 )(fun_app$i (comp$e ?v3 )?v2 )))):named a79 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 A_a_fun$ ))(=> (= (fun_app$b (comp$a ?v0 )?v1 )?v2 )(= (fun_app$b (comp$a (fun_app$l (comp$f ?v3 )?v0 ))?v1 )(fun_app$l (comp$f ?v3 )?v2 )))):named a80 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ )(?v3 B_bool_fun$ ))(=> (= (fun_app$q (comp$j ?v0 )?v1 )?v2 )(= (fun_app$i (comp$e (fun_app$t (comp$m ?v3 )?v0 ))?v1 )(fun_app$a (comp$ ?v3 )?v2 )))):named a81 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ )(?v3 B_a_fun$ ))(=> (= (fun_app$q (comp$j ?v0 )?v1 )?v2 )(= (fun_app$l (comp$f (fun_app$u (comp$n ?v3 )?v0 ))?v1 )(fun_app$b (comp$a ?v3 )?v2 )))):named a82 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 Bool_b_fun$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )?v2 )(= (fun_app$g (comp$d (fun_app$p (comp$i ?v3 )?v0 ))?v1 )(fun_app$p (comp$i ?v3 )?v2 )))):named a83 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 A_b_fun$ ))(=> (= (fun_app$b (comp$a ?v0 )?v1 )?v2 )(= (fun_app$g (comp$d (fun_app$q (comp$j ?v3 )?v0 ))?v1 )(fun_app$q (comp$j ?v3 )?v2 )))):named a84 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$n (comp$g ?v0 )?v1 )?v2 )(= (fun_app$n (comp$g ?v0 )(fun_app$a (comp$ ?v1 )?v3 ))(fun_app$a (comp$ ?v2 )?v3 )))):named a85 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$o (comp$h ?v0 )?v1 )?v2 )(= (fun_app$o (comp$h ?v0 )(fun_app$a (comp$ ?v1 )?v3 ))(fun_app$b (comp$a ?v2 )?v3 )))):named a86 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$i (comp$e ?v0 )?v1 )?v2 )(= (fun_app$i (comp$e ?v0 )(fun_app$b (comp$a ?v1 )?v3 ))(fun_app$a (comp$ ?v2 )?v3 )))):named a87 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$l (comp$f ?v0 )?v1 )?v2 )(= (fun_app$l (comp$f ?v0 )(fun_app$b (comp$a ?v1 )?v3 ))(fun_app$b (comp$a ?v2 )?v3 )))):named a88 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )?v2 )(= (fun_app$a (comp$ ?v0 )(fun_app$g (comp$d ?v1 )?v3 ))(fun_app$a (comp$ ?v2 )?v3 )))):named a89 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$b (comp$a ?v0 )?v1 )?v2 )(= (fun_app$b (comp$a ?v0 )(fun_app$g (comp$d ?v1 )?v3 ))(fun_app$b (comp$a ?v2 )?v3 )))):named a90 ))
(assert (! (forall ((?v0 Bool_b_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$p (comp$i ?v0 )?v1 )?v2 )(= (fun_app$p (comp$i ?v0 )(fun_app$a (comp$ ?v1 )?v3 ))(fun_app$g (comp$d ?v2 )?v3 )))):named a91 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$q (comp$j ?v0 )?v1 )?v2 )(= (fun_app$q (comp$j ?v0 )(fun_app$b (comp$a ?v1 )?v3 ))(fun_app$g (comp$d ?v2 )?v3 )))):named a92 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ ))(=> (= (fun_app$r (comp$k ?v0 )?v1 )?v2 )(= (fun_app$n (comp$g ?v0 )(fun_app$i (comp$e ?v1 )?v3 ))(fun_app$i (comp$e ?v2 )?v3 )))):named a93 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ )(?v3 B_a_fun$ ))(=> (= (fun_app$s (comp$l ?v0 )?v1 )?v2 )(= (fun_app$o (comp$h ?v0 )(fun_app$i (comp$e ?v1 )?v3 ))(fun_app$l (comp$f ?v2 )?v3 )))):named a94 ))
(assert (! (forall ((?v0 B_a_bool_prod_fun$ )(?v1 B_b_fun$ )(?v2 B_a_bool_prod_fun$ )(?v3 B$ ))(=> (= (fun_app$d (comp$b ?v0 )?v1 )?v2 )(= (fun_app$c ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$c ?v2 ?v3 )))):named a95 ))
(assert (! (forall ((?v0 B_a_a_prod_fun$ )(?v1 B_b_fun$ )(?v2 B_a_a_prod_fun$ )(?v3 B$ ))(=> (= (fun_app$f (comp$c ?v0 )?v1 )?v2 )(= (fun_app$e ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$e ?v2 ?v3 )))):named a96 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B$ ))(=> (= (fun_app$g (comp$d ?v0 )?v1 )?v2 )(= (fun_app$ ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$ ?v2 ?v3 )))):named a97 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_bool_fun$ )(?v3 B$ ))(=> (= (fun_app$i (comp$e ?v0 )?v1 )?v2 )(= (fun_app$j ?v0 (fun_app$k ?v1 ?v3 ))(fun_app$h ?v2 ?v3 )))):named a98 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun$ )(?v3 B$ ))(=> (= (fun_app$l (comp$f ?v0 )?v1 )?v2 )(= (fun_app$m ?v0 (fun_app$k ?v1 ?v3 ))(fun_app$k ?v2 ?v3 )))):named a99 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 B$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )?v2 )(= (fun_app$h ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$h ?v2 ?v3 )))):named a100 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 B$ ))(=> (= (fun_app$b (comp$a ?v0 )?v1 )?v2 )(= (fun_app$k ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$k ?v2 ?v3 )))):named a101 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$h (fun_app$a (comp$ (fun_app$a (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$h (fun_app$a (comp$ (fun_app$a (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a102 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_a_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$k (fun_app$b (comp$a (fun_app$b (comp$a ?v5 )?v0 ))?v1 )?v2 )(fun_app$k (fun_app$b (comp$a (fun_app$b (comp$a ?v5 )?v3 ))?v4 )?v2 )))):named a103 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 A_b_fun$ )(?v4 B_a_fun$ )(?v5 B_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$v ?v3 (fun_app$k ?v4 ?v2 )))(= (fun_app$h (fun_app$a (comp$ (fun_app$a (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$h (fun_app$i (comp$e (fun_app$t (comp$m ?v5 )?v3 ))?v4 )?v2 )))):named a104 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_a_fun$ )(?v4 B_b_fun$ )(?v5 A_bool_fun$ ))(=> (= (fun_app$k ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$k ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$h (fun_app$a (comp$ (fun_app$i (comp$e ?v5 )?v0 ))?v1 )?v2 )(fun_app$h (fun_app$a (comp$ (fun_app$i (comp$e ?v5 )?v3 ))?v4 )?v2 )))):named a105 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 A_a_fun$ )(?v4 B_a_fun$ )(?v5 A_bool_fun$ ))(=> (= (fun_app$k ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$m ?v3 (fun_app$k ?v4 ?v2 )))(= (fun_app$h (fun_app$a (comp$ (fun_app$i (comp$e ?v5 )?v0 ))?v1 )?v2 )(fun_app$h (fun_app$i (comp$e (fun_app$w (comp$o ?v5 )?v3 ))?v4 )?v2 )))):named a106 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 A_b_fun$ )(?v4 B_a_fun$ )(?v5 B_a_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$v ?v3 (fun_app$k ?v4 ?v2 )))(= (fun_app$k (fun_app$b (comp$a (fun_app$b (comp$a ?v5 )?v0 ))?v1 )?v2 )(fun_app$k (fun_app$l (comp$f (fun_app$u (comp$n ?v5 )?v3 ))?v4 )?v2 )))):named a107 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_a_fun$ )(?v4 B_b_fun$ )(?v5 A_a_fun$ ))(=> (= (fun_app$k ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$k ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$k (fun_app$b (comp$a (fun_app$l (comp$f ?v5 )?v0 ))?v1 )?v2 )(fun_app$k (fun_app$b (comp$a (fun_app$l (comp$f ?v5 )?v3 ))?v4 )?v2 )))):named a108 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 A_a_fun$ )(?v4 B_a_fun$ )(?v5 A_a_fun$ ))(=> (= (fun_app$k ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$m ?v3 (fun_app$k ?v4 ?v2 )))(= (fun_app$k (fun_app$b (comp$a (fun_app$l (comp$f ?v5 )?v0 ))?v1 )?v2 )(fun_app$k (fun_app$l (comp$f (fun_app$x (comp$p ?v5 )?v3 ))?v4 )?v2 )))):named a109 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$g (comp$d (fun_app$g (comp$d ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$g (comp$d (fun_app$g (comp$d ?v5 )?v3 ))?v4 )?v2 )))):named a110 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_bool_fun$ ))(=> (= (fun_app$v ?v0 (fun_app$k ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$h (fun_app$i (comp$e (fun_app$t (comp$m ?v5 )?v0 ))?v1 )?v2 )(fun_app$h (fun_app$a (comp$ (fun_app$a (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a111 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_bool_fun$ )(?v4 B_b_fun$ )(?v5 B$ ))(=> (= (fun_app$h ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$h ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$h (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$a (comp$ ?v3 )?v4 )?v5 )))):named a112 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_a_fun$ )(?v4 B_b_fun$ )(?v5 B$ ))(=> (= (fun_app$k ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$k ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$k (fun_app$b (comp$a ?v0 )?v1 )?v2 )(fun_app$k (fun_app$b (comp$a ?v3 )?v4 )?v5 )))):named a113 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 A_bool_fun$ )(?v4 B_a_fun$ )(?v5 B$ ))(=> (= (fun_app$h ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$k ?v4 ?v5 )))(= (fun_app$h (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$i (comp$e ?v3 )?v4 )?v5 )))):named a114 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 A_a_fun$ )(?v4 B_a_fun$ )(?v5 B$ ))(=> (= (fun_app$k ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$m ?v3 (fun_app$k ?v4 ?v5 )))(= (fun_app$k (fun_app$b (comp$a ?v0 )?v1 )?v2 )(fun_app$k (fun_app$l (comp$f ?v3 )?v4 )?v5 )))):named a115 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$ (fun_app$g (comp$d ?v0 )?v1 )?v2 )(fun_app$ (fun_app$g (comp$d ?v3 )?v4 )?v5 )))):named a116 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B_bool_fun$ )(?v4 B_b_fun$ )(?v5 B$ ))(=> (= (fun_app$j ?v0 (fun_app$k ?v1 ?v2 ))(fun_app$h ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$h (fun_app$i (comp$e ?v0 )?v1 )?v2 )(fun_app$h (fun_app$a (comp$ ?v3 )?v4 )?v5 )))):named a117 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 A_bool_fun$ )(?v4 B_a_fun$ )(?v5 B$ ))(=> (= (fun_app$j ?v0 (fun_app$k ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$k ?v4 ?v5 )))(= (fun_app$h (fun_app$i (comp$e ?v0 )?v1 )?v2 )(fun_app$h (fun_app$i (comp$e ?v3 )?v4 )?v5 )))):named a118 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B_a_fun$ )(?v4 B_b_fun$ )(?v5 B$ ))(=> (= (fun_app$m ?v0 (fun_app$k ?v1 ?v2 ))(fun_app$k ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$k (fun_app$l (comp$f ?v0 )?v1 )?v2 )(fun_app$k (fun_app$b (comp$a ?v3 )?v4 )?v5 )))):named a119 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 A_a_fun$ )(?v4 B_a_fun$ )(?v5 B$ ))(=> (= (fun_app$m ?v0 (fun_app$k ?v1 ?v2 ))(fun_app$m ?v3 (fun_app$k ?v4 ?v5 )))(= (fun_app$k (fun_app$l (comp$f ?v0 )?v1 )?v2 )(fun_app$k (fun_app$l (comp$f ?v3 )?v4 )?v5 )))):named a120 ))
(assert (! (forall ((?v0 B_a_bool_prod_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_a_bool_prod_fun$ )(?v4 B_b_fun$ )(?v5 B$ ))(=> (= (fun_app$c ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$c ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$c (fun_app$d (comp$b ?v0 )?v1 )?v2 )(fun_app$c (fun_app$d (comp$b ?v3 )?v4 )?v5 )))):named a121 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_bool_fun$ )(?v4 B_b_fun$ ))(=> (= (fun_app$h ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$h ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$h (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$a (comp$ ?v3 )?v4 )?v2 )))):named a122 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_a_fun$ )(?v4 B_b_fun$ ))(=> (= (fun_app$k ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$k ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$k (fun_app$b (comp$a ?v0 )?v1 )?v2 )(fun_app$k (fun_app$b (comp$a ?v3 )?v4 )?v2 )))):named a123 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 A_bool_fun$ )(?v4 B_a_fun$ ))(=> (= (fun_app$h ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$k ?v4 ?v2 )))(= (fun_app$h (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$i (comp$e ?v3 )?v4 )?v2 )))):named a124 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 A_a_fun$ )(?v4 B_a_fun$ ))(=> (= (fun_app$k ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$m ?v3 (fun_app$k ?v4 ?v2 )))(= (fun_app$k (fun_app$b (comp$a ?v0 )?v1 )?v2 )(fun_app$k (fun_app$l (comp$f ?v3 )?v4 )?v2 )))):named a125 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$g (comp$d ?v0 )?v1 )?v2 )(fun_app$ (fun_app$g (comp$d ?v3 )?v4 )?v2 )))):named a126 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B_bool_fun$ )(?v4 B_b_fun$ ))(=> (= (fun_app$j ?v0 (fun_app$k ?v1 ?v2 ))(fun_app$h ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$h (fun_app$i (comp$e ?v0 )?v1 )?v2 )(fun_app$h (fun_app$a (comp$ ?v3 )?v4 )?v2 )))):named a127 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 A_bool_fun$ )(?v4 B_a_fun$ ))(=> (= (fun_app$j ?v0 (fun_app$k ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$k ?v4 ?v2 )))(= (fun_app$h (fun_app$i (comp$e ?v0 )?v1 )?v2 )(fun_app$h (fun_app$i (comp$e ?v3 )?v4 )?v2 )))):named a128 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B_a_fun$ )(?v4 B_b_fun$ ))(=> (= (fun_app$m ?v0 (fun_app$k ?v1 ?v2 ))(fun_app$k ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$k (fun_app$l (comp$f ?v0 )?v1 )?v2 )(fun_app$k (fun_app$b (comp$a ?v3 )?v4 )?v2 )))):named a129 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 A_a_fun$ )(?v4 B_a_fun$ ))(=> (= (fun_app$m ?v0 (fun_app$k ?v1 ?v2 ))(fun_app$m ?v3 (fun_app$k ?v4 ?v2 )))(= (fun_app$k (fun_app$l (comp$f ?v0 )?v1 )?v2 )(fun_app$k (fun_app$l (comp$f ?v3 )?v4 )?v2 )))):named a130 ))
(assert (! (forall ((?v0 B_a_bool_prod_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_a_bool_prod_fun$ )(?v4 B_b_fun$ ))(=> (= (fun_app$c ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$c ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$c (fun_app$d (comp$b ?v0 )?v1 )?v2 )(fun_app$c (fun_app$d (comp$b ?v3 )?v4 )?v2 )))):named a131 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(= (fun_app$y (lmap$ ?v0 )(fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v1 )?v2 )?v3 )?v4 ))(unfold_llist$b ?v1 (fun_app$a (comp$ ?v0 )?v2 )?v3 ?v4 ))):named a132 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(= (fun_app$ac (lmap$a ?v0 )(fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v1 )?v2 )?v3 )?v4 ))(unfold_llist$ ?v1 (fun_app$b (comp$a ?v0 )?v2 )?v3 ?v4 ))):named a133 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(= (lmap$b ?v0 (unfold_llist$ ?v1 ?v2 ?v3 ?v4 ))(unfold_llist$ ?v1 (fun_app$l (comp$f ?v0 )?v2 )?v3 ?v4 ))):named a134 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_bool_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(= (lmap$c ?v0 (unfold_llist$ ?v1 ?v2 ?v3 ?v4 ))(fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v1 )(fun_app$q (comp$j ?v0 )?v2 ))?v3 )?v4 ))):named a135 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(= (lmap$d ?v0 (unfold_llist$ ?v1 ?v2 ?v3 ?v4 ))(unfold_llist$b ?v1 (fun_app$i (comp$e ?v0 )?v2 )?v3 ?v4 ))):named a136 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(= (lmap$e ?v0 (fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v1 )?v2 )?v3 )?v4 ))(fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v1 )(fun_app$g (comp$d ?v0 )?v2 ))?v3 )?v4 ))):named a137 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(= (lmap$f ?v0 (unfold_llist$b ?v1 ?v2 ?v3 ?v4 ))(unfold_llist$ ?v1 (fun_app$o (comp$h ?v0 )?v2 )?v3 ?v4 ))):named a138 ))
(assert (! (forall ((?v0 Bool_b_fun$ )(?v1 B_bool_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(= (lmap$g ?v0 (unfold_llist$b ?v1 ?v2 ?v3 ?v4 ))(fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v1 )(fun_app$p (comp$i ?v0 )?v2 ))?v3 )?v4 ))):named a139 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(= (lmap$h ?v0 (unfold_llist$b ?v1 ?v2 ?v3 ?v4 ))(unfold_llist$b ?v1 (fun_app$n (comp$g ?v0 )?v2 )?v3 ?v4 ))):named a140 ))
(assert (! (forall ((?v0 B_a_bool_prod_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(= (lmap$i ?v0 (fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v1 )?v2 )?v3 )?v4 ))(unfold_llist$c ?v1 (fun_app$d (comp$b ?v0 )?v2 )?v3 ?v4 ))):named a141 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B$ ))(= (lnull$ (fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v0 )?v1 )?v2 )?v3 ))(fun_app$h ?v0 ?v3 ))):named a142 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ )(?v3 B$ ))(= (lnull$a (unfold_llist$b ?v0 ?v1 ?v2 ?v3 ))(fun_app$h ?v0 ?v3 ))):named a143 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ )(?v3 B$ ))(= (lnull$b (unfold_llist$ ?v0 ?v1 ?v2 ?v3 ))(fun_app$h ?v0 ?v3 ))):named a144 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B$ ))(= (not (lnull$ (fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v0 )?v1 )?v2 )?v3 )))(not (fun_app$h ?v0 ?v3 )))):named a145 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ )(?v3 B$ ))(= (not (lnull$a (unfold_llist$b ?v0 ?v1 ?v2 ?v3 )))(not (fun_app$h ?v0 ?v3 )))):named a146 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ )(?v3 B$ ))(= (not (lnull$b (unfold_llist$ ?v0 ?v1 ?v2 ?v3 )))(not (fun_app$h ?v0 ?v3 )))):named a147 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ ))(=> (not (fun_app$h ?v0 ?v1 ))(= (lhd$a (fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v0 )?v2 )?v3 )?v1 ))(fun_app$ ?v2 ?v1 )))):named a148 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (not (fun_app$h ?v0 ?v1 ))(= (lhd$d (unfold_llist$b ?v0 ?v2 ?v3 ?v1 ))(fun_app$h ?v2 ?v1 )))):named a149 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (not (fun_app$h ?v0 ?v1 ))(= (lhd$ (unfold_llist$ ?v0 ?v2 ?v3 ?v1 ))(fun_app$k ?v2 ?v1 )))):named a150 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ ))(! (=> (fun_app$h ?v0 ?v1 )(= (fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v0 )?v2 )?v3 )?v1 )lNil$a )):pattern ((fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v0 )?v2 )?v3 )?v1 )))):named a151 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(! (=> (fun_app$h ?v0 ?v1 )(= (unfold_llist$b ?v0 ?v2 ?v3 ?v1 )lNil$c )):pattern ((unfold_llist$b ?v0 ?v2 ?v3 ?v1 )))):named a152 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(! (=> (fun_app$h ?v0 ?v1 )(= (unfold_llist$ ?v0 ?v2 ?v3 ?v1 )lNil$ )):pattern ((unfold_llist$ ?v0 ?v2 ?v3 ?v1 )))):named a153 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (comp$q (convol$ ?v0 ?v1 )?v2 )(convol$ (fun_app$a (comp$ ?v0 )?v2 )(fun_app$a (comp$ ?v1 )?v2 )))):named a154 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ ))(= (comp$r (convol$a ?v0 ?v1 )?v2 )(convol$a (fun_app$a (comp$ ?v0 )?v2 )(fun_app$b (comp$a ?v1 )?v2 )))):named a155 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (fun_app$d (comp$b (fun_app$ad (convol$b ?v0 )?v1 ))?v2 )(fun_app$ad (convol$b (fun_app$b (comp$a ?v0 )?v2 ))(fun_app$a (comp$ ?v1 )?v2 )))):named a156 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ ))(= (fun_app$f (comp$c (fun_app$ae (convol$c ?v0 )?v1 ))?v2 )(fun_app$ae (convol$c (fun_app$b (comp$a ?v0 )?v2 ))(fun_app$b (comp$a ?v1 )?v2 )))):named a157 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ ))(= (comp$s (convol$d ?v0 ?v1 )?v2 )(convol$d (fun_app$a (comp$ ?v0 )?v2 )(fun_app$g (comp$d ?v1 )?v2 )))):named a158 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ ))(= (comp$t (convol$e ?v0 ?v1 )?v2 )(convol$e (fun_app$b (comp$a ?v0 )?v2 )(fun_app$g (comp$d ?v1 )?v2 )))):named a159 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (comp$u (convol$f ?v0 ?v1 )?v2 )(convol$f (fun_app$g (comp$d ?v0 )?v2 )(fun_app$a (comp$ ?v1 )?v2 )))):named a160 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ ))(= (comp$v (convol$g ?v0 ?v1 )?v2 )(convol$g (fun_app$g (comp$d ?v0 )?v2 )(fun_app$b (comp$a ?v1 )?v2 )))):named a161 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ ))(= (comp$w (convol$h ?v0 ?v1 )?v2 )(convol$h (fun_app$g (comp$d ?v0 )?v2 )(fun_app$g (comp$d ?v1 )?v2 )))):named a162 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 B_a_fun$ ))(= (fun_app$ae (comp$x (convol$i ?v0 ?v1 ))?v2 )(fun_app$ae (convol$c (fun_app$l (comp$f ?v0 )?v2 ))(fun_app$l (comp$f ?v1 )?v2 )))):named a163 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ ))(=> (not (fun_app$h ?v0 ?v1 ))(= (ltl$a (fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v0 )?v2 )?v3 )?v1 ))(fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v0 )?v2 )?v3 )(fun_app$ ?v3 ?v1 ))))):named a164 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (not (fun_app$h ?v0 ?v1 ))(= (ltl$d (unfold_llist$b ?v0 ?v2 ?v3 ?v1 ))(unfold_llist$b ?v0 ?v2 ?v3 (fun_app$ ?v3 ?v1 ))))):named a165 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (not (fun_app$h ?v0 ?v1 ))(= (ltl$ (unfold_llist$ ?v0 ?v2 ?v3 ?v1 ))(unfold_llist$ ?v0 ?v2 ?v3 (fun_app$ ?v3 ?v1 ))))):named a166 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ ))(=> (not (fun_app$h ?v0 ?v1 ))(= (fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v0 )?v2 )?v3 )?v1 )(lCons$a (fun_app$ ?v2 ?v1 )(fun_app$z (fun_app$aa (fun_app$ab (unfold_llist$a ?v0 )?v2 )?v3 )(fun_app$ ?v3 ?v1 )))))):named a167 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (not (fun_app$h ?v0 ?v1 ))(= (unfold_llist$b ?v0 ?v2 ?v3 ?v1 )(lCons$c (fun_app$h ?v2 ?v1 )(unfold_llist$b ?v0 ?v2 ?v3 (fun_app$ ?v3 ?v1 )))))):named a168 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (not (fun_app$h ?v0 ?v1 ))(= (unfold_llist$ ?v0 ?v2 ?v3 ?v1 )(lCons$ (fun_app$k ?v2 ?v1 )(unfold_llist$ ?v0 ?v2 ?v3 (fun_app$ ?v3 ?v1 )))))):named a169 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ )(?v3 B$ ))(= (unfold_llist$ ?v0 ?v1 ?v2 ?v3 )(ite (fun_app$h ?v0 ?v3 )lNil$ (lCons$ (fun_app$k ?v1 ?v3 )(unfold_llist$ ?v0 ?v1 ?v2 (fun_app$ ?v2 ?v3 )))))):named a170 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ ))(= (fun_app$y (lmap$ ?v0 )(lmap$e ?v1 ?v2 ))(fun_app$y (lmap$ (fun_app$a (comp$ ?v0 )?v1 ))?v2 ))):named a171 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ ))(= (fun_app$ac (lmap$a ?v0 )(lmap$e ?v1 ?v2 ))(fun_app$ac (lmap$a (fun_app$b (comp$a ?v0 )?v1 ))?v2 ))):named a172 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (not (fun_app$h ?v0 ?v1 ))(not (lnull$b (unfold_llist$ ?v0 ?v2 ?v3 ?v1 ))))):named a173 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (fun_app$h ?v0 ?v1 )(lnull$b (unfold_llist$ ?v0 ?v2 ?v3 ?v1 )))):named a174 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ )(?v3 B_bool_fun$ )(?v4 B_b_llist_fun$ )(?v5 B_b_fun$ ))(= (comp$y (lmap$ ?v0 )(fun_app$aa (fun_app$af (fun_app$ag (fun_app$ah (corec_llist$ ?v1 )?v2 )?v3 )?v4 )?v5 ))(corec_llist$a ?v1 (fun_app$a (comp$ ?v0 )?v2 )?v3 (comp$y (lmap$ ?v0 )?v4 )?v5 ))):named a175 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ )(?v3 B_bool_fun$ )(?v4 B_b_llist_fun$ )(?v5 B_b_fun$ ))(= (comp$z (lmap$a ?v0 )(fun_app$aa (fun_app$af (fun_app$ag (fun_app$ah (corec_llist$ ?v1 )?v2 )?v3 )?v4 )?v5 ))(corec_llist$b ?v1 (fun_app$b (comp$a ?v0 )?v2 )?v3 (comp$z (lmap$a ?v0 )?v4 )?v5 ))):named a176 ))
(check-sat )
(get-unsat-core )
