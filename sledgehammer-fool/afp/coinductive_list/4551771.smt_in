(set-option :produce-unsat-cores true )
(set-logic AUFDTLIA )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_llist_b_llist_fun$ 0 )
(declare-sort B_llist_b_llist_fun$ 0 )
(declare-sort A_b_prod_llist_bool_fun$ 0 )
(declare-sort A_llist_set_a_llist_fun$ 0 )
(declare-sort B_llist_set_b_llist_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_fun$ 0 )
(declare-sort A_b_prod_llist_b_llist_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_fun$ 0 )
(declare-sort B_llist_a_b_prod_llist_fun$ 0 )
(declare-sort Nat_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Nat_a_llist_b_llist_fun_fun$ 0 )
(declare-sort Nat_b_llist_b_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort Bool_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Bool_a_llist_b_llist_fun_fun$ 0 )
(declare-sort Bool_b_llist_b_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_b_llist_fun_fun$ 0 )
(declare-sort Enat_b_llist_b_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_b_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_fun$ 0 )
(declare-sort Nat_a_b_prod_llist_a_llist_fun_fun$ 0 )
(declare-sort Nat_a_b_prod_llist_b_llist_fun_fun$ 0 )
(declare-sort Nat_a_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort Bool_a_b_prod_llist_a_llist_fun_fun$ 0 )
(declare-sort Bool_a_b_prod_llist_b_llist_fun_fun$ 0 )
(declare-sort Bool_a_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort Enat_a_b_prod_llist_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_b_prod_llist_b_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_set_a_b_prod_llist_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_b_llist_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_b_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort Nat_a_b_prod_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ 0 )
(declare-sort Bool_a_b_prod_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort Enat_a_b_prod_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_b_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_fun_a_llist_b_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_bool_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_bool_a_llist_b_llist_fun_fun_fun$ 0 )
(declare-sort B_llist_b_llist_fun_bool_b_llist_b_llist_fun_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_fun_a_b_prod_llist_a_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_fun_a_b_prod_llist_b_llist_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_fun_a_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_fun_a_b_prod_llist_a_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_fun_a_b_prod_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_fun_bool_a_b_prod_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort A_b_prod_llist_b_llist_fun_bool_a_b_prod_llist_b_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_fun_bool_a_llist_a_b_prod_llist_fun_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_fun_bool_a_b_prod_llist_a_b_prod_llist_fun_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-sort A_b_prod$ 0)
(declare-fun fst$ (A_b_prod$)A$)
(declare-fun snd$ (A_b_prod$)B$)
(declare-fun pair$ (A$ B$ )A_b_prod$)
(declare-sort A_b_prod_llist$ 0)
(declare-sort B_llist$ 0)
(declare-fun lNil$a ()A_b_prod_llist$)
(declare-fun lhd$a (A_b_prod_llist$)A_b_prod$)
(declare-fun ltl$a (A_b_prod_llist$)A_b_prod_llist$)
(declare-fun lCons$a (A_b_prod$ A_b_prod_llist$ )A_b_prod_llist$)
(declare-fun lNil$b ()B_llist$)
(declare-fun lhd$b (B_llist$)B$)
(declare-fun ltl$b (B_llist$)B_llist$)
(declare-fun lCons$b (B$ B_llist$ )B_llist$)
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun uu$ ()A_llist_a_b_prod_llist_fun$ )
(declare-fun ys$ ()B_llist$ )
(declare-fun uua$ (A_llist_a_b_prod_llist_a_llist_fun_fun$ )A_b_prod_llist_a_llist_a_llist_fun_fun$ )
(declare-fun uub$ (A_llist_a_b_prod_llist_a_llist_fun_fun$ )A_llist_a_b_prod_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uuc$ (A_llist_a_llist_a_b_prod_llist_fun_fun$ )A_llist_a_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uud$ (A_llist_a_llist_a_b_prod_llist_fun_fun$ )A_llist_a_llist_fun_a_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uue$ (A_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ )A_b_prod_llist_a_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uuf$ (A_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ )A_llist_a_b_prod_llist_fun_a_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uug$ (A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_a_llist_fun_fun$ )
(declare-fun uuh$ (A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uui$ (A_llist_a_llist_b_llist_fun_fun$ )A_llist_a_llist_b_llist_fun_fun$ )
(declare-fun uuj$ (A_llist_a_llist_b_llist_fun_fun$ )A_llist_a_llist_fun_a_llist_b_llist_fun_fun$ )
(declare-fun uuk$ (A_b_prod_llist_a_llist_a_llist_fun_fun$ )A_llist_a_b_prod_llist_a_llist_fun_fun$ )
(declare-fun uul$ (A_b_prod_llist_a_llist_a_llist_fun_fun$ )A_b_prod_llist_a_llist_fun_a_b_prod_llist_a_llist_fun_fun$ )
(declare-fun uum$ (A_llist_a_b_prod_llist_b_llist_fun_fun$ )A_b_prod_llist_a_llist_b_llist_fun_fun$ )
(declare-fun uun$ (A_llist_a_b_prod_llist_b_llist_fun_fun$ )A_llist_a_b_prod_llist_fun_a_llist_b_llist_fun_fun$ )
(declare-fun uuo$ (A_b_prod_llist_a_llist_b_llist_fun_fun$ )A_llist_a_b_prod_llist_b_llist_fun_fun$ )
(declare-fun uup$ (A_b_prod_llist_a_llist_b_llist_fun_fun$ )A_b_prod_llist_a_llist_fun_a_b_prod_llist_b_llist_fun_fun$ )
(declare-fun uuq$ (A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ )A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ )
(declare-fun uur$ (A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ )A_b_prod_llist_a_b_prod_llist_fun_a_b_prod_llist_a_llist_fun_fun$ )
(declare-fun uus$ (A_b_prod_llist_a_llist_a_b_prod_llist_fun_fun$ )A_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uut$ (A_b_prod_llist_a_llist_a_b_prod_llist_fun_fun$ )A_b_prod_llist_a_llist_fun_a_b_prod_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uuu$ (A_b_prod_llist_a_llist_fun$ )A_llist_a_b_prod_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uuv$ (A_llist_a_b_prod_llist_fun$ )A_llist_a_llist_fun_a_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uuw$ (A_b_prod_llist_a_b_prod_llist_fun$ )A_llist_a_b_prod_llist_fun_a_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uux$ (A_llist_a_llist_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uuy$ (A_llist_b_llist_fun$ )A_llist_a_llist_fun_a_llist_b_llist_fun_fun$ )
(declare-fun uuz$ (A_llist_a_llist_fun$ )A_b_prod_llist_a_llist_fun_a_b_prod_llist_a_llist_fun_fun$ )
(declare-fun uva$ (A_b_prod_llist_b_llist_fun$ )A_llist_a_b_prod_llist_fun_a_llist_b_llist_fun_fun$ )
(declare-fun uvb$ (A_llist_b_llist_fun$ )A_b_prod_llist_a_llist_fun_a_b_prod_llist_b_llist_fun_fun$ )
(declare-fun uvc$ (A_b_prod_llist_a_llist_fun$ )A_b_prod_llist_a_b_prod_llist_fun_a_b_prod_llist_a_llist_fun_fun$ )
(declare-fun uvd$ (A_llist_a_b_prod_llist_fun$ )A_b_prod_llist_a_llist_fun_a_b_prod_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uve$ (B_llist$ )A_llist_b_llist_fun$ )
(declare-fun uvf$ (B_llist$ )A_b_prod_llist_b_llist_fun$ )
(declare-fun uvg$ (B_llist$ )B_llist_b_llist_fun$ )
(declare-fun uvh$ (A_llist$ )A_llist_a_llist_fun$ )
(declare-fun uvi$ (A_llist$ )A_b_prod_llist_a_llist_fun$ )
(declare-fun uvj$ (A_b_prod_llist$ )A_b_prod_llist_a_b_prod_llist_fun$ )
(declare-fun uvk$ (A_b_prod_llist$ )A_llist_a_b_prod_llist_fun$ )
(declare-fun uvl$ (A_llist_b_llist_fun$ )A_llist_b_llist_fun_bool_a_llist_b_llist_fun_fun_fun$ )
(declare-fun uvm$ (A_b_prod_llist_b_llist_fun$ )A_b_prod_llist_b_llist_fun_bool_a_b_prod_llist_b_llist_fun_fun_fun$ )
(declare-fun uvn$ (B_llist_b_llist_fun$ )B_llist_b_llist_fun_bool_b_llist_b_llist_fun_fun_fun$ )
(declare-fun uvo$ (A_llist_a_llist_fun$ )A_llist_a_llist_fun_bool_a_llist_a_llist_fun_fun_fun$ )
(declare-fun uvp$ (A_b_prod_llist_a_b_prod_llist_fun$ )A_b_prod_llist_a_b_prod_llist_fun_bool_a_b_prod_llist_a_b_prod_llist_fun_fun_fun$ )
(declare-fun uvq$ (A_b_prod_llist_a_llist_fun$ )A_b_prod_llist_a_llist_fun_bool_a_b_prod_llist_a_llist_fun_fun_fun$ )
(declare-fun uvr$ (A_llist_a_b_prod_llist_fun$ )A_llist_a_b_prod_llist_fun_bool_a_llist_a_b_prod_llist_fun_fun_fun$ )
(declare-fun uvs$ ()B_llist_b_llist_fun$ )
(declare-fun uvt$ ()A_llist_a_llist_fun$ )
(declare-fun uvu$ ()A_b_prod_llist_a_b_prod_llist_fun$ )
(declare-fun uvv$ (A_llist_b_llist_fun$ )Enat_a_llist_b_llist_fun_fun$ )
(declare-fun uvw$ (A_b_prod_llist_b_llist_fun$ )Enat_a_b_prod_llist_b_llist_fun_fun$ )
(declare-fun uvx$ (B_llist_b_llist_fun$ )Enat_b_llist_b_llist_fun_fun$ )
(declare-fun uvy$ (A_llist_a_llist_fun$ )Enat_a_llist_a_llist_fun_fun$ )
(declare-fun uvz$ (A_b_prod_llist_a_llist_fun$ )Enat_a_b_prod_llist_a_llist_fun_fun$ )
(declare-fun uwa$ (A_b_prod_llist_a_b_prod_llist_fun$ )Enat_a_b_prod_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uwb$ (A_llist_a_b_prod_llist_fun$ )Enat_a_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uwc$ (A_llist_b_llist_fun$ )Nat_a_llist_b_llist_fun_fun$ )
(declare-fun uwd$ (A_b_prod_llist_b_llist_fun$ )Nat_a_b_prod_llist_b_llist_fun_fun$ )
(declare-fun uwe$ (B_llist_b_llist_fun$ )Nat_b_llist_b_llist_fun_fun$ )
(declare-fun uwf$ (A_llist_a_llist_fun$ )Nat_a_llist_a_llist_fun_fun$ )
(declare-fun uwg$ (A_b_prod_llist_a_llist_fun$ )Nat_a_b_prod_llist_a_llist_fun_fun$ )
(declare-fun uwh$ (A_b_prod_llist_a_b_prod_llist_fun$ )Nat_a_b_prod_llist_a_b_prod_llist_fun_fun$ )
(declare-fun uwi$ (A_llist_a_b_prod_llist_fun$ )Nat_a_llist_a_b_prod_llist_fun_fun$ )
(declare-fun lSup$ ()A_llist_set_a_llist_fun$ )
(declare-fun lzip$ (A_llist$ )B_llist_a_b_prod_llist_fun$ )
(declare-fun lSup$a ()A_b_prod_llist_set_a_b_prod_llist_fun$ )
(declare-fun lSup$b ()B_llist_set_b_llist_fun$ )
(declare-fun ldrop$ (Enat$ )A_b_prod_llist_a_b_prod_llist_fun$ )
(declare-fun mcont$ (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_b_prod_llist_set_a_b_prod_llist_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_llist_a_b_prod_llist_fun$ )Bool )
(declare-fun ldrop$a (Enat$ )B_llist_b_llist_fun$ )
(declare-fun ldrop$b (Enat$ )A_llist_a_llist_fun$ )
(declare-fun ldropn$ (Nat$ )A_b_prod_llist_a_b_prod_llist_fun$ )
(declare-fun mcont$a (A_b_prod_llist_set_a_b_prod_llist_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_b_prod_llist_a_llist_fun$ )Bool )
(declare-fun mcont$b (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_fun$ )Bool )
(declare-fun mcont$c (A_b_prod_llist_set_a_b_prod_llist_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_b_prod_llist_set_a_b_prod_llist_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_fun$ )Bool )
(declare-fun mcont$d (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ B_llist_set_b_llist_fun$ B_llist_b_llist_bool_fun_fun$ A_llist_b_llist_fun$ )Bool )
(declare-fun mcont$e (A_b_prod_llist_set_a_b_prod_llist_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ B_llist_set_b_llist_fun$ B_llist_b_llist_bool_fun_fun$ A_b_prod_llist_b_llist_fun$ )Bool )
(declare-fun mcont$f (B_llist_set_b_llist_fun$ B_llist_b_llist_bool_fun_fun$ B_llist_set_b_llist_fun$ B_llist_b_llist_bool_fun_fun$ B_llist_b_llist_fun$ )Bool )
(declare-fun fun_app$ (A_llist_a_b_prod_llist_fun$ A_llist$ )A_b_prod_llist$ )
(declare-fun ldropn$a (Nat$ )B_llist_b_llist_fun$ )
(declare-fun ldropn$b (Nat$ )A_llist_a_llist_fun$ )
(declare-fun lprefix$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun fun_app$a (B_llist_a_b_prod_llist_fun$ B_llist$ )A_b_prod_llist$ )
(declare-fun fun_app$b (A_b_prod_llist_a_llist_fun$ A_b_prod_llist$ )A_llist$ )
(declare-fun fun_app$c (A_b_prod_llist_a_b_prod_llist_fun_a_b_prod_llist_a_llist_fun_fun$ A_b_prod_llist_a_b_prod_llist_fun$ )A_b_prod_llist_a_llist_fun$ )
(declare-fun fun_app$d (A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ A_b_prod_llist$ )A_b_prod_llist_a_llist_fun$ )
(declare-fun fun_app$e (A_b_prod_llist_a_b_prod_llist_fun$ A_b_prod_llist$ )A_b_prod_llist$ )
(declare-fun fun_app$f (A_b_prod_llist_a_llist_fun_a_b_prod_llist_a_b_prod_llist_fun_fun$ A_b_prod_llist_a_llist_fun$ )A_b_prod_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$g (A_b_prod_llist_a_llist_a_b_prod_llist_fun_fun$ A_b_prod_llist$ )A_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$h (A_b_prod_llist_b_llist_fun$ A_b_prod_llist$ )B_llist$ )
(declare-fun fun_app$i (A_b_prod_llist_a_llist_fun_a_b_prod_llist_b_llist_fun_fun$ A_b_prod_llist_a_llist_fun$ )A_b_prod_llist_b_llist_fun$ )
(declare-fun fun_app$j (A_llist_b_llist_fun$ A_llist$ )B_llist$ )
(declare-fun fun_app$k (A_b_prod_llist_a_llist_b_llist_fun_fun$ A_b_prod_llist$ )A_llist_b_llist_fun$ )
(declare-fun fun_app$l (A_b_prod_llist_a_llist_fun_a_b_prod_llist_a_llist_fun_fun$ A_b_prod_llist_a_llist_fun$ )A_b_prod_llist_a_llist_fun$ )
(declare-fun fun_app$m (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$n (A_b_prod_llist_a_llist_a_llist_fun_fun$ A_b_prod_llist$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$o (A_llist_a_b_prod_llist_fun_a_llist_a_b_prod_llist_fun_fun$ A_llist_a_b_prod_llist_fun$ )A_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$p (A_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ A_llist$ )A_b_prod_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$q (A_llist_a_b_prod_llist_fun_a_llist_b_llist_fun_fun$ A_llist_a_b_prod_llist_fun$ )A_llist_b_llist_fun$ )
(declare-fun fun_app$r (A_llist_a_b_prod_llist_b_llist_fun_fun$ A_llist$ )A_b_prod_llist_b_llist_fun$ )
(declare-fun fun_app$s (A_llist_a_b_prod_llist_fun_a_llist_a_llist_fun_fun$ A_llist_a_b_prod_llist_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$t (A_llist_a_b_prod_llist_a_llist_fun_fun$ A_llist$ )A_b_prod_llist_a_llist_fun$ )
(declare-fun fun_app$u (A_llist_a_llist_fun_a_llist_a_b_prod_llist_fun_fun$ A_llist_a_llist_fun$ )A_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$v (A_llist_a_llist_a_b_prod_llist_fun_fun$ A_llist$ )A_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$w (A_llist_a_llist_fun_a_llist_b_llist_fun_fun$ A_llist_a_llist_fun$ )A_llist_b_llist_fun$ )
(declare-fun fun_app$x (A_llist_a_llist_b_llist_fun_fun$ A_llist$ )A_llist_b_llist_fun$ )
(declare-fun fun_app$y (A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ A_llist_a_llist_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$z (A_llist_a_llist_a_llist_fun_fun$ A_llist$ )A_llist_a_llist_fun$ )
(declare-fun lprefix$a ()A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )
(declare-fun lprefix$b ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun monotone$ (B_llist_b_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ B_llist_a_b_prod_llist_fun$ )Bool )
(declare-fun fun_app$aa (Nat_a_b_prod_llist_a_b_prod_llist_fun_fun$ Nat$ )A_b_prod_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$ab (Nat_a_b_prod_llist_b_llist_fun_fun$ Nat$ )A_b_prod_llist_b_llist_fun$ )
(declare-fun fun_app$ac (B_llist_b_llist_fun$ B_llist$ )B_llist$ )
(declare-fun fun_app$ad (Nat_a_b_prod_llist_a_llist_fun_fun$ Nat$ )A_b_prod_llist_a_llist_fun$ )
(declare-fun fun_app$ae (Nat_b_llist_b_llist_fun_fun$ Nat$ )B_llist_b_llist_fun$ )
(declare-fun fun_app$af (Nat_a_llist_a_b_prod_llist_fun_fun$ Nat$ )A_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$ag (Nat_a_llist_b_llist_fun_fun$ Nat$ )A_llist_b_llist_fun$ )
(declare-fun fun_app$ah (Nat_a_llist_a_llist_fun_fun$ Nat$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$ai (Enat_a_b_prod_llist_a_b_prod_llist_fun_fun$ Enat$ )A_b_prod_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$aj (Enat_a_b_prod_llist_b_llist_fun_fun$ Enat$ )A_b_prod_llist_b_llist_fun$ )
(declare-fun fun_app$ak (Enat_a_b_prod_llist_a_llist_fun_fun$ Enat$ )A_b_prod_llist_a_llist_fun$ )
(declare-fun fun_app$al (Enat_b_llist_b_llist_fun_fun$ Enat$ )B_llist_b_llist_fun$ )
(declare-fun fun_app$am (Enat_a_llist_a_b_prod_llist_fun_fun$ Enat$ )A_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$an (Enat_a_llist_b_llist_fun_fun$ Enat$ )A_llist_b_llist_fun$ )
(declare-fun fun_app$ao (Enat_a_llist_a_llist_fun_fun$ Enat$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$ap (Bool_a_b_prod_llist_a_b_prod_llist_fun_fun$ Bool )A_b_prod_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$aq (A_b_prod_llist_a_b_prod_llist_fun_bool_a_b_prod_llist_a_b_prod_llist_fun_fun_fun$ A_b_prod_llist_a_b_prod_llist_fun$ )Bool_a_b_prod_llist_a_b_prod_llist_fun_fun$ )
(declare-fun fun_app$ar (Bool_a_b_prod_llist_b_llist_fun_fun$ Bool )A_b_prod_llist_b_llist_fun$ )
(declare-fun fun_app$as (A_b_prod_llist_b_llist_fun_bool_a_b_prod_llist_b_llist_fun_fun_fun$ A_b_prod_llist_b_llist_fun$ )Bool_a_b_prod_llist_b_llist_fun_fun$ )
(declare-fun fun_app$at (Bool_a_b_prod_llist_a_llist_fun_fun$ Bool )A_b_prod_llist_a_llist_fun$ )
(declare-fun fun_app$au (A_b_prod_llist_a_llist_fun_bool_a_b_prod_llist_a_llist_fun_fun_fun$ A_b_prod_llist_a_llist_fun$ )Bool_a_b_prod_llist_a_llist_fun_fun$ )
(declare-fun fun_app$av (Bool_b_llist_b_llist_fun_fun$ Bool )B_llist_b_llist_fun$ )
(declare-fun fun_app$aw (B_llist_b_llist_fun_bool_b_llist_b_llist_fun_fun_fun$ B_llist_b_llist_fun$ )Bool_b_llist_b_llist_fun_fun$ )
(declare-fun fun_app$ax (Bool_a_llist_a_b_prod_llist_fun_fun$ Bool )A_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$ay (A_llist_a_b_prod_llist_fun_bool_a_llist_a_b_prod_llist_fun_fun_fun$ A_llist_a_b_prod_llist_fun$ )Bool_a_llist_a_b_prod_llist_fun_fun$ )
(declare-fun fun_app$az (Bool_a_llist_b_llist_fun_fun$ Bool )A_llist_b_llist_fun$ )
(declare-fun fun_app$ba (A_llist_b_llist_fun_bool_a_llist_b_llist_fun_fun_fun$ A_llist_b_llist_fun$ )Bool_a_llist_b_llist_fun_fun$ )
(declare-fun fun_app$bb (Bool_a_llist_a_llist_fun_fun$ Bool )A_llist_a_llist_fun$ )
(declare-fun fun_app$bc (A_llist_a_llist_fun_bool_a_llist_a_llist_fun_fun_fun$ A_llist_a_llist_fun$ )Bool_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$bd (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$be (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$bf (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$bg (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$bh (A_b_prod_llist_bool_fun$ A_b_prod_llist$ )Bool )
(declare-fun fun_app$bi (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_b_prod_llist$ )A_b_prod_llist_bool_fun$ )
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$ uu$ ?v0 )(fun_app$a (lzip$ ?v0 )ys$ )):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_fun$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$b (fun_app$c (uur$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$d ?v0 ?v2 )(fun_app$e ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$c (uur$ ?v0 )?v1 )?v2 )))):named a1 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_a_b_prod_llist_fun_fun$ )(?v1 A_b_prod_llist_a_llist_fun$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$e (fun_app$f (uut$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$g ?v0 ?v2 )(fun_app$b ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$f (uut$ ?v0 )?v1 )?v2 )))):named a2 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_b_llist_fun_fun$ )(?v1 A_b_prod_llist_a_llist_fun$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$h (fun_app$i (uup$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$k ?v0 ?v2 )(fun_app$b ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$i (uup$ ?v0 )?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_a_llist_fun_fun$ )(?v1 A_b_prod_llist_a_llist_fun$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$b (fun_app$l (uul$ ?v0 )?v1 )?v2 )(fun_app$m (fun_app$n ?v0 ?v2 )(fun_app$b ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$l (uul$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ )(?v1 A_llist_a_b_prod_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$ (fun_app$o (uuf$ ?v0 )?v1 )?v2 )(fun_app$e (fun_app$p ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$o (uuf$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_b_llist_fun_fun$ )(?v1 A_llist_a_b_prod_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$q (uun$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$r ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$q (uun$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_a_llist_fun_fun$ )(?v1 A_llist_a_b_prod_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$m (fun_app$s (uub$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$t ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$s (uub$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_b_prod_llist_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$ (fun_app$u (uud$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$v ?v0 ?v2 )(fun_app$m ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$u (uud$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_a_llist_b_llist_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$w (uuj$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$x ?v0 ?v2 )(fun_app$m ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$w (uuj$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$m (fun_app$y (uuh$ ?v0 )?v1 )?v2 )(fun_app$m (fun_app$z ?v0 ?v2 )(fun_app$m ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$y (uuh$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$b (fun_app$d (uuq$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$d ?v0 ?v2 )?v1 )):pattern ((fun_app$b (fun_app$d (uuq$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_a_b_prod_llist_fun_fun$ )(?v1 A_llist$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$e (fun_app$p (uus$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$g ?v0 ?v2 )?v1 )):pattern ((fun_app$e (fun_app$p (uus$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_b_llist_fun_fun$ )(?v1 A_llist$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$h (fun_app$r (uuo$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$k ?v0 ?v2 )?v1 )):pattern ((fun_app$h (fun_app$r (uuo$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$b (fun_app$t (uuk$ ?v0 )?v1 )?v2 )(fun_app$m (fun_app$n ?v0 ?v2 )?v1 )):pattern ((fun_app$b (fun_app$t (uuk$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ )(?v1 A_b_prod_llist$ )(?v2 A_llist$ ))(! (= (fun_app$ (fun_app$g (uue$ ?v0 )?v1 )?v2 )(fun_app$e (fun_app$p ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$g (uue$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_b_llist_fun_fun$ )(?v1 A_b_prod_llist$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$k (uum$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$r ?v0 ?v2 )?v1 )):pattern ((fun_app$j (fun_app$k (uum$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_a_llist_fun_fun$ )(?v1 A_b_prod_llist$ )(?v2 A_llist$ ))(! (= (fun_app$m (fun_app$n (uua$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$t ?v0 ?v2 )?v1 )):pattern ((fun_app$m (fun_app$n (uua$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_b_prod_llist_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$ (fun_app$v (uuc$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$v ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$v (uuc$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 A_llist_a_llist_b_llist_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$x (uui$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$x ?v0 ?v2 )?v1 )):pattern ((fun_app$j (fun_app$x (uui$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$m (fun_app$z (uug$ ?v0 )?v1 )?v2 )(fun_app$m (fun_app$z ?v0 ?v2 )?v1 )):pattern ((fun_app$m (fun_app$z (uug$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_fun$ )(?v1 Nat$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$e (fun_app$aa (uwh$ ?v0 )?v1 )?v2 )(fun_app$e (ldropn$ ?v1 )(fun_app$e ?v0 ?v2 ))):pattern ((fun_app$e (fun_app$aa (uwh$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 A_b_prod_llist_b_llist_fun$ )(?v1 Nat$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$h (fun_app$ab (uwd$ ?v0 )?v1 )?v2 )(fun_app$ac (ldropn$a ?v1 )(fun_app$h ?v0 ?v2 ))):pattern ((fun_app$h (fun_app$ab (uwd$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_fun$ )(?v1 Nat$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$b (fun_app$ad (uwg$ ?v0 )?v1 )?v2 )(fun_app$m (ldropn$b ?v1 )(fun_app$b ?v0 ?v2 ))):pattern ((fun_app$b (fun_app$ad (uwg$ ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 B_llist_b_llist_fun$ )(?v1 Nat$ )(?v2 B_llist$ ))(! (= (fun_app$ac (fun_app$ae (uwe$ ?v0 )?v1 )?v2 )(fun_app$ac (ldropn$a ?v1 )(fun_app$ac ?v0 ?v2 ))):pattern ((fun_app$ac (fun_app$ae (uwe$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_fun$ )(?v1 Nat$ )(?v2 A_llist$ ))(! (= (fun_app$ (fun_app$af (uwi$ ?v0 )?v1 )?v2 )(fun_app$e (ldropn$ ?v1 )(fun_app$ ?v0 ?v2 ))):pattern ((fun_app$ (fun_app$af (uwi$ ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_b_llist_fun$ )(?v1 Nat$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$ag (uwc$ ?v0 )?v1 )?v2 )(fun_app$ac (ldropn$a ?v1 )(fun_app$j ?v0 ?v2 ))):pattern ((fun_app$j (fun_app$ag (uwc$ ?v0 )?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 Nat$ )(?v2 A_llist$ ))(! (= (fun_app$m (fun_app$ah (uwf$ ?v0 )?v1 )?v2 )(fun_app$m (ldropn$b ?v1 )(fun_app$m ?v0 ?v2 ))):pattern ((fun_app$m (fun_app$ah (uwf$ ?v0 )?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_fun$ )(?v1 Enat$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$e (fun_app$ai (uwa$ ?v0 )?v1 )?v2 )(fun_app$e (ldrop$ ?v1 )(fun_app$e ?v0 ?v2 ))):pattern ((fun_app$e (fun_app$ai (uwa$ ?v0 )?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 A_b_prod_llist_b_llist_fun$ )(?v1 Enat$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$h (fun_app$aj (uvw$ ?v0 )?v1 )?v2 )(fun_app$ac (ldrop$a ?v1 )(fun_app$h ?v0 ?v2 ))):pattern ((fun_app$h (fun_app$aj (uvw$ ?v0 )?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_fun$ )(?v1 Enat$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$b (fun_app$ak (uvz$ ?v0 )?v1 )?v2 )(fun_app$m (ldrop$b ?v1 )(fun_app$b ?v0 ?v2 ))):pattern ((fun_app$b (fun_app$ak (uvz$ ?v0 )?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 B_llist_b_llist_fun$ )(?v1 Enat$ )(?v2 B_llist$ ))(! (= (fun_app$ac (fun_app$al (uvx$ ?v0 )?v1 )?v2 )(fun_app$ac (ldrop$a ?v1 )(fun_app$ac ?v0 ?v2 ))):pattern ((fun_app$ac (fun_app$al (uvx$ ?v0 )?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_fun$ )(?v1 Enat$ )(?v2 A_llist$ ))(! (= (fun_app$ (fun_app$am (uwb$ ?v0 )?v1 )?v2 )(fun_app$e (ldrop$ ?v1 )(fun_app$ ?v0 ?v2 ))):pattern ((fun_app$ (fun_app$am (uwb$ ?v0 )?v1 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_b_llist_fun$ )(?v1 Enat$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$an (uvv$ ?v0 )?v1 )?v2 )(fun_app$ac (ldrop$a ?v1 )(fun_app$j ?v0 ?v2 ))):pattern ((fun_app$j (fun_app$an (uvv$ ?v0 )?v1 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 Enat$ )(?v2 A_llist$ ))(! (= (fun_app$m (fun_app$ao (uvy$ ?v0 )?v1 )?v2 )(fun_app$m (ldrop$b ?v1 )(fun_app$m ?v0 ?v2 ))):pattern ((fun_app$m (fun_app$ao (uvy$ ?v0 )?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_fun$ )(?v1 A_llist_a_b_prod_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$ (fun_app$o (uuw$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$o (uuw$ ?v0 )?v1 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 A_b_prod_llist_b_llist_fun$ )(?v1 A_llist_a_b_prod_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$q (uva$ ?v0 )?v1 )?v2 )(fun_app$h ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$q (uva$ ?v0 )?v1 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_fun$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$b (fun_app$c (uvc$ ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$c (uvc$ ?v0 )?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_fun$ )(?v1 A_llist_a_b_prod_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$m (fun_app$s (uuu$ ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$s (uuu$ ?v0 )?v1 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_llist_fun$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$e (fun_app$f (uvd$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$f (uvd$ ?v0 )?v1 )?v2 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$ (fun_app$u (uuv$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$u (uuv$ ?v0 )?v1 )?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_llist_b_llist_fun$ )(?v1 A_b_prod_llist_a_llist_fun$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$h (fun_app$i (uvb$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$i (uvb$ ?v0 )?v1 )?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_b_llist_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$w (uuy$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$w (uuy$ ?v0 )?v1 )?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 A_b_prod_llist_a_llist_fun$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$b (fun_app$l (uuz$ ?v0 )?v1 )?v2 )(fun_app$m ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$l (uuz$ ?v0 )?v1 )?v2 )))):named a43 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$m (fun_app$y (uux$ ?v0 )?v1 )?v2 )(fun_app$m ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$y (uux$ ?v0 )?v1 )?v2 )))):named a44 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_fun$ )(?v2 Bool )(?v3 A_b_prod_llist$ ))(! (= (fun_app$e (fun_app$ap (fun_app$aq (uvp$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$e ?v0 ?v3 )(fun_app$e ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$ap (fun_app$aq (uvp$ ?v0 )?v1 )?v2 )?v3 )))):named a45 ))
(assert (! (forall ((?v0 A_b_prod_llist_b_llist_fun$ )(?v1 A_b_prod_llist_b_llist_fun$ )(?v2 Bool )(?v3 A_b_prod_llist$ ))(! (= (fun_app$h (fun_app$ar (fun_app$as (uvm$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$h ?v0 ?v3 )(fun_app$h ?v1 ?v3 ))):pattern ((fun_app$h (fun_app$ar (fun_app$as (uvm$ ?v0 )?v1 )?v2 )?v3 )))):named a46 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_fun$ )(?v1 A_b_prod_llist_a_llist_fun$ )(?v2 Bool )(?v3 A_b_prod_llist$ ))(! (= (fun_app$b (fun_app$at (fun_app$au (uvq$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$b ?v0 ?v3 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$b (fun_app$at (fun_app$au (uvq$ ?v0 )?v1 )?v2 )?v3 )))):named a47 ))
(assert (! (forall ((?v0 B_llist_b_llist_fun$ )(?v1 B_llist_b_llist_fun$ )(?v2 Bool )(?v3 B_llist$ ))(! (= (fun_app$ac (fun_app$av (fun_app$aw (uvn$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$ac ?v0 ?v3 )(fun_app$ac ?v1 ?v3 ))):pattern ((fun_app$ac (fun_app$av (fun_app$aw (uvn$ ?v0 )?v1 )?v2 )?v3 )))):named a48 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_fun$ )(?v1 A_llist_a_b_prod_llist_fun$ )(?v2 Bool )(?v3 A_llist$ ))(! (= (fun_app$ (fun_app$ax (fun_app$ay (uvr$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$ ?v0 ?v3 )(fun_app$ ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$ax (fun_app$ay (uvr$ ?v0 )?v1 )?v2 )?v3 )))):named a49 ))
(assert (! (forall ((?v0 A_llist_b_llist_fun$ )(?v1 A_llist_b_llist_fun$ )(?v2 Bool )(?v3 A_llist$ ))(! (= (fun_app$j (fun_app$az (fun_app$ba (uvl$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$j ?v0 ?v3 )(fun_app$j ?v1 ?v3 ))):pattern ((fun_app$j (fun_app$az (fun_app$ba (uvl$ ?v0 )?v1 )?v2 )?v3 )))):named a50 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 Bool )(?v3 A_llist$ ))(! (= (fun_app$m (fun_app$bb (fun_app$bc (uvo$ ?v0 )?v1 )?v2 )?v3 )(ite ?v2 (fun_app$m ?v0 ?v3 )(fun_app$m ?v1 ?v3 ))):pattern ((fun_app$m (fun_app$bb (fun_app$bc (uvo$ ?v0 )?v1 )?v2 )?v3 )))):named a51 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(! (= (fun_app$e (uvj$ ?v0 )?v1 )?v0 ):pattern ((fun_app$e (uvj$ ?v0 )?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_llist$ ))(! (= (fun_app$ (uvk$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ (uvk$ ?v0 )?v1 )))):named a53 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_b_prod_llist$ ))(! (= (fun_app$h (uvf$ ?v0 )?v1 )?v0 ):pattern ((fun_app$h (uvf$ ?v0 )?v1 )))):named a54 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$ac (uvg$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ac (uvg$ ?v0 )?v1 )))):named a55 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_llist$ ))(! (= (fun_app$j (uve$ ?v0 )?v1 )?v0 ):pattern ((fun_app$j (uve$ ?v0 )?v1 )))):named a56 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_b_prod_llist$ ))(! (= (fun_app$b (uvi$ ?v0 )?v1 )?v0 ):pattern ((fun_app$b (uvi$ ?v0 )?v1 )))):named a57 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$m (uvh$ ?v0 )?v1 )?v0 ):pattern ((fun_app$m (uvh$ ?v0 )?v1 )))):named a58 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(! (= (fun_app$e uvu$ ?v0 )?v0 ):pattern ((fun_app$e uvu$ ?v0 )))):named a59 ))
(assert (! (forall ((?v0 B_llist$ ))(! (= (fun_app$ac uvs$ ?v0 )?v0 ):pattern ((fun_app$ac uvs$ ?v0 )))):named a60 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$m uvt$ ?v0 )?v0 ):pattern ((fun_app$m uvt$ ?v0 )))):named a61 ))
(assert (! (not (mcont$ lSup$ lprefix$ lSup$a lprefix$a uu$ )):named a62 ))
(assert (! (forall ((?v0 B_llist$ ))(fun_app$bd (fun_app$be lprefix$b ?v0 )?v0 )):named a63 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$bf (fun_app$bg lprefix$ ?v0 )?v0 )):named a64 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(fun_app$bh (fun_app$bi lprefix$a ?v0 )?v0 )):named a65 ))
(assert (! (forall ((?v0 B_llist$ ))(fun_app$bd (fun_app$be lprefix$b ?v0 )?v0 )):named a66 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$bf (fun_app$bg lprefix$ ?v0 )?v0 )):named a67 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(fun_app$bh (fun_app$bi lprefix$a ?v0 )?v0 )):named a68 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_b_prod_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$a ?v0 ?v1 lSup$ lprefix$ (fun_app$t ?v2 ?v6 )))(and (forall ((?v6 A_b_prod_llist$ ))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$n (uua$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$s (uub$ ?v2 )?v5 )))):named a69 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_a_b_prod_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$ ?v0 ?v1 lSup$a lprefix$a (fun_app$v ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$ ?v3 ?v4 lSup$a lprefix$a (fun_app$v (uuc$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$ ?v3 ?v4 lSup$a lprefix$a (fun_app$u (uud$ ?v2 )?v5 )))):named a70 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_b_prod_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$c ?v0 ?v1 lSup$a lprefix$a (fun_app$p ?v2 ?v6 )))(and (forall ((?v6 A_b_prod_llist$ ))(mcont$ ?v3 ?v4 lSup$a lprefix$a (fun_app$g (uue$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$ ?v3 ?v4 lSup$a lprefix$a (fun_app$o (uuf$ ?v2 )?v5 )))):named a71 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$b ?v0 ?v1 lSup$ lprefix$ (fun_app$z ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$z (uug$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$y (uuh$ ?v2 )?v5 )))):named a72 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_b_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$d ?v0 ?v1 lSup$b lprefix$b (fun_app$x ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$d ?v3 ?v4 lSup$b lprefix$b (fun_app$x (uui$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$d ?v3 ?v4 lSup$b lprefix$b (fun_app$w (uuj$ ?v2 )?v5 )))):named a73 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_llist_a_llist_fun_fun$ )(?v3 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v4 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v5 A_b_prod_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_b_prod_llist$ ))(mcont$b ?v0 ?v1 lSup$ lprefix$ (fun_app$n ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$t (uuk$ ?v2 )?v6 )))(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$l (uul$ ?v2 )?v5 )))):named a74 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_b_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_b_prod_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$e ?v0 ?v1 lSup$b lprefix$b (fun_app$r ?v2 ?v6 )))(and (forall ((?v6 A_b_prod_llist$ ))(mcont$d ?v3 ?v4 lSup$b lprefix$b (fun_app$k (uum$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$d ?v3 ?v4 lSup$b lprefix$b (fun_app$q (uun$ ?v2 )?v5 )))):named a75 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_llist_b_llist_fun_fun$ )(?v3 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v4 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v5 A_b_prod_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_b_prod_llist$ ))(mcont$d ?v0 ?v1 lSup$b lprefix$b (fun_app$k ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$e ?v3 ?v4 lSup$b lprefix$b (fun_app$r (uuo$ ?v2 )?v6 )))(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$e ?v3 ?v4 lSup$b lprefix$b (fun_app$i (uup$ ?v2 )?v5 )))):named a76 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ )(?v3 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v4 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v5 A_b_prod_llist_a_b_prod_llist_fun$ ))(=> (and (forall ((?v6 A_b_prod_llist$ ))(mcont$a ?v0 ?v1 lSup$ lprefix$ (fun_app$d ?v2 ?v6 )))(and (forall ((?v6 A_b_prod_llist$ ))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$d (uuq$ ?v2 )?v6 )))(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$c (uur$ ?v2 )?v5 )))):named a77 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_llist_a_b_prod_llist_fun_fun$ )(?v3 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v4 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v5 A_b_prod_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_b_prod_llist$ ))(mcont$ ?v0 ?v1 lSup$a lprefix$a (fun_app$g ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$c ?v3 ?v4 lSup$a lprefix$a (fun_app$p (uus$ ?v2 )?v6 )))(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$c ?v3 ?v4 lSup$a lprefix$a (fun_app$f (uut$ ?v2 )?v5 )))):named a78 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_b_prod_llist_fun$ ))(=> (and (mcont$a ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$s (uuu$ ?v2 )?v5 )))):named a79 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (mcont$ ?v0 ?v1 lSup$a lprefix$a ?v2 )(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$ ?v3 ?v4 lSup$a lprefix$a (fun_app$u (uuv$ ?v2 )?v5 )))):named a80 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_b_prod_llist_fun$ ))(=> (and (mcont$c ?v0 ?v1 lSup$a lprefix$a ?v2 )(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$ ?v3 ?v4 lSup$a lprefix$a (fun_app$o (uuw$ ?v2 )?v5 )))):named a81 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (mcont$b ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$y (uux$ ?v2 )?v5 )))):named a82 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (mcont$d ?v0 ?v1 lSup$b lprefix$b ?v2 )(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$d ?v3 ?v4 lSup$b lprefix$b (fun_app$w (uuy$ ?v2 )?v5 )))):named a83 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v4 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v5 A_b_prod_llist_a_llist_fun$ ))(=> (and (mcont$b ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$l (uuz$ ?v2 )?v5 )))):named a84 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_b_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_b_prod_llist_fun$ ))(=> (and (mcont$e ?v0 ?v1 lSup$b lprefix$b ?v2 )(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$d ?v3 ?v4 lSup$b lprefix$b (fun_app$q (uva$ ?v2 )?v5 )))):named a85 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_fun$ )(?v3 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v4 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v5 A_b_prod_llist_a_llist_fun$ ))(=> (and (mcont$d ?v0 ?v1 lSup$b lprefix$b ?v2 )(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$e ?v3 ?v4 lSup$b lprefix$b (fun_app$i (uvb$ ?v2 )?v5 )))):named a86 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_llist_fun$ )(?v3 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v4 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v5 A_b_prod_llist_a_b_prod_llist_fun$ ))(=> (and (mcont$a ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$c (uvc$ ?v2 )?v5 )))):named a87 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_fun$ )(?v3 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v4 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v5 A_b_prod_llist_a_llist_fun$ ))(=> (and (mcont$ ?v0 ?v1 lSup$a lprefix$a ?v2 )(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$c ?v3 ?v4 lSup$a lprefix$a (fun_app$f (uvd$ ?v2 )?v5 )))):named a88 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (and (fun_app$bd (fun_app$be lprefix$b ?v0 )?v1 )(fun_app$bd (fun_app$be lprefix$b ?v1 )?v0 ))(= ?v0 ?v1 ))):named a89 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$bf (fun_app$bg lprefix$ ?v0 )?v1 )(fun_app$bf (fun_app$bg lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a90 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(=> (and (fun_app$bh (fun_app$bi lprefix$a ?v0 )?v1 )(fun_app$bh (fun_app$bi lprefix$a ?v1 )?v0 ))(= ?v0 ?v1 ))):named a91 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (and (fun_app$bd (fun_app$be lprefix$b ?v0 )?v1 )(fun_app$bd (fun_app$be lprefix$b ?v1 )?v0 ))(= ?v0 ?v1 ))):named a92 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$bf (fun_app$bg lprefix$ ?v0 )?v1 )(fun_app$bf (fun_app$bg lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a93 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(=> (and (fun_app$bh (fun_app$bi lprefix$a ?v0 )?v1 )(fun_app$bh (fun_app$bi lprefix$a ?v1 )?v0 ))(= ?v0 ?v1 ))):named a94 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (and (fun_app$bd (fun_app$be lprefix$b ?v0 )?v1 )(fun_app$bd (fun_app$be lprefix$b ?v2 )?v1 ))(or (fun_app$bd (fun_app$be lprefix$b ?v0 )?v2 )(fun_app$bd (fun_app$be lprefix$b ?v2 )?v0 )))):named a95 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$bf (fun_app$bg lprefix$ ?v0 )?v1 )(fun_app$bf (fun_app$bg lprefix$ ?v2 )?v1 ))(or (fun_app$bf (fun_app$bg lprefix$ ?v0 )?v2 )(fun_app$bf (fun_app$bg lprefix$ ?v2 )?v0 )))):named a96 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist$ ))(=> (and (fun_app$bh (fun_app$bi lprefix$a ?v0 )?v1 )(fun_app$bh (fun_app$bi lprefix$a ?v2 )?v1 ))(or (fun_app$bh (fun_app$bi lprefix$a ?v0 )?v2 )(fun_app$bh (fun_app$bi lprefix$a ?v2 )?v0 )))):named a97 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (and (fun_app$bd (fun_app$be lprefix$b ?v0 )?v1 )(fun_app$bd (fun_app$be lprefix$b ?v1 )?v2 ))(fun_app$bd (fun_app$be lprefix$b ?v0 )?v2 ))):named a98 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$bf (fun_app$bg lprefix$ ?v0 )?v1 )(fun_app$bf (fun_app$bg lprefix$ ?v1 )?v2 ))(fun_app$bf (fun_app$bg lprefix$ ?v0 )?v2 ))):named a99 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist$ ))(=> (and (fun_app$bh (fun_app$bi lprefix$a ?v0 )?v1 )(fun_app$bh (fun_app$bi lprefix$a ?v1 )?v2 ))(fun_app$bh (fun_app$bi lprefix$a ?v0 )?v2 ))):named a100 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (and (fun_app$bd (fun_app$be lprefix$b ?v0 )?v1 )(fun_app$bd (fun_app$be lprefix$b ?v1 )?v2 ))(fun_app$bd (fun_app$be lprefix$b ?v0 )?v2 ))):named a101 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$bf (fun_app$bg lprefix$ ?v0 )?v1 )(fun_app$bf (fun_app$bg lprefix$ ?v1 )?v2 ))(fun_app$bf (fun_app$bg lprefix$ ?v0 )?v2 ))):named a102 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist$ ))(=> (and (fun_app$bh (fun_app$bi lprefix$a ?v0 )?v1 )(fun_app$bh (fun_app$bi lprefix$a ?v1 )?v2 ))(fun_app$bh (fun_app$bi lprefix$a ?v0 )?v2 ))):named a103 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 B_llist$ ))(mcont$d ?v0 ?v1 lSup$b lprefix$b (uve$ ?v2 ))):named a104 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 B_llist$ ))(mcont$e ?v0 ?v1 lSup$b lprefix$b (uvf$ ?v2 ))):named a105 ))
(assert (! (forall ((?v0 B_llist_set_b_llist_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 B_llist$ ))(mcont$f ?v0 ?v1 lSup$b lprefix$b (uvg$ ?v2 ))):named a106 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist$ ))(mcont$b ?v0 ?v1 lSup$ lprefix$ (uvh$ ?v2 ))):named a107 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_llist$ ))(mcont$a ?v0 ?v1 lSup$ lprefix$ (uvi$ ?v2 ))):named a108 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist$ ))(mcont$c ?v0 ?v1 lSup$a lprefix$a (uvj$ ?v2 ))):named a109 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist$ ))(mcont$ ?v0 ?v1 lSup$a lprefix$a (uvk$ ?v2 ))):named a110 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 B_llist_set_b_llist_fun$ )(?v3 B_llist_b_llist_bool_fun_fun$ )(?v4 A_llist_b_llist_fun$ )(?v5 A_llist_b_llist_fun$ )(?v6 Bool ))(=> (and (mcont$d ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$d ?v0 ?v1 ?v2 ?v3 ?v5 ))(mcont$d ?v0 ?v1 ?v2 ?v3 (fun_app$az (fun_app$ba (uvl$ ?v4 )?v5 )?v6 )))):named a111 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 B_llist_set_b_llist_fun$ )(?v3 B_llist_b_llist_bool_fun_fun$ )(?v4 A_b_prod_llist_b_llist_fun$ )(?v5 A_b_prod_llist_b_llist_fun$ )(?v6 Bool ))(=> (and (mcont$e ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$e ?v0 ?v1 ?v2 ?v3 ?v5 ))(mcont$e ?v0 ?v1 ?v2 ?v3 (fun_app$ar (fun_app$as (uvm$ ?v4 )?v5 )?v6 )))):named a112 ))
(assert (! (forall ((?v0 B_llist_set_b_llist_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 B_llist_set_b_llist_fun$ )(?v3 B_llist_b_llist_bool_fun_fun$ )(?v4 B_llist_b_llist_fun$ )(?v5 B_llist_b_llist_fun$ )(?v6 Bool ))(=> (and (mcont$f ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$f ?v0 ?v1 ?v2 ?v3 ?v5 ))(mcont$f ?v0 ?v1 ?v2 ?v3 (fun_app$av (fun_app$aw (uvn$ ?v4 )?v5 )?v6 )))):named a113 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_set_a_llist_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_a_llist_fun$ )(?v5 A_llist_a_llist_fun$ )(?v6 Bool ))(=> (and (mcont$b ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$b ?v0 ?v1 ?v2 ?v3 ?v5 ))(mcont$b ?v0 ?v1 ?v2 ?v3 (fun_app$bb (fun_app$bc (uvo$ ?v4 )?v5 )?v6 )))):named a114 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v3 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v4 A_b_prod_llist_a_b_prod_llist_fun$ )(?v5 A_b_prod_llist_a_b_prod_llist_fun$ )(?v6 Bool ))(=> (and (mcont$c ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$c ?v0 ?v1 ?v2 ?v3 ?v5 ))(mcont$c ?v0 ?v1 ?v2 ?v3 (fun_app$ap (fun_app$aq (uvp$ ?v4 )?v5 )?v6 )))):named a115 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_llist_set_a_llist_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_b_prod_llist_a_llist_fun$ )(?v5 A_b_prod_llist_a_llist_fun$ )(?v6 Bool ))(=> (and (mcont$a ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$a ?v0 ?v1 ?v2 ?v3 ?v5 ))(mcont$a ?v0 ?v1 ?v2 ?v3 (fun_app$at (fun_app$au (uvq$ ?v4 )?v5 )?v6 )))):named a116 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v3 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v4 A_llist_a_b_prod_llist_fun$ )(?v5 A_llist_a_b_prod_llist_fun$ )(?v6 Bool ))(=> (and (mcont$ ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$ ?v0 ?v1 ?v2 ?v3 ?v5 ))(mcont$ ?v0 ?v1 ?v2 ?v3 (fun_app$ax (fun_app$ay (uvr$ ?v4 )?v5 )?v6 )))):named a117 ))
(assert (! (forall ((?v0 B_llist_set_b_llist_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ ))(mcont$f ?v0 ?v1 ?v0 ?v1 uvs$ )):named a118 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ ))(mcont$b ?v0 ?v1 ?v0 ?v1 uvt$ )):named a119 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ ))(mcont$c ?v0 ?v1 ?v0 ?v1 uvu$ )):named a120 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_fun$ )(?v3 Enat$ ))(=> (mcont$d ?v0 ?v1 lSup$b lprefix$b ?v2 )(mcont$d ?v0 ?v1 lSup$b lprefix$b (fun_app$an (uvv$ ?v2 )?v3 )))):named a121 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_b_llist_fun$ )(?v3 Enat$ ))(=> (mcont$e ?v0 ?v1 lSup$b lprefix$b ?v2 )(mcont$e ?v0 ?v1 lSup$b lprefix$b (fun_app$aj (uvw$ ?v2 )?v3 )))):named a122 ))
(assert (! (forall ((?v0 B_llist_set_b_llist_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 B_llist_b_llist_fun$ )(?v3 Enat$ ))(=> (mcont$f ?v0 ?v1 lSup$b lprefix$b ?v2 )(mcont$f ?v0 ?v1 lSup$b lprefix$b (fun_app$al (uvx$ ?v2 )?v3 )))):named a123 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 Enat$ ))(=> (mcont$b ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$b ?v0 ?v1 lSup$ lprefix$ (fun_app$ao (uvy$ ?v2 )?v3 )))):named a124 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_llist_fun$ )(?v3 Enat$ ))(=> (mcont$a ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$a ?v0 ?v1 lSup$ lprefix$ (fun_app$ak (uvz$ ?v2 )?v3 )))):named a125 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_fun$ )(?v3 Enat$ ))(=> (mcont$c ?v0 ?v1 lSup$a lprefix$a ?v2 )(mcont$c ?v0 ?v1 lSup$a lprefix$a (fun_app$ai (uwa$ ?v2 )?v3 )))):named a126 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_fun$ )(?v3 Enat$ ))(=> (mcont$ ?v0 ?v1 lSup$a lprefix$a ?v2 )(mcont$ ?v0 ?v1 lSup$a lprefix$a (fun_app$am (uwb$ ?v2 )?v3 )))):named a127 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_fun$ )(?v3 Nat$ ))(=> (mcont$d ?v0 ?v1 lSup$b lprefix$b ?v2 )(mcont$d ?v0 ?v1 lSup$b lprefix$b (fun_app$ag (uwc$ ?v2 )?v3 )))):named a128 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_b_llist_fun$ )(?v3 Nat$ ))(=> (mcont$e ?v0 ?v1 lSup$b lprefix$b ?v2 )(mcont$e ?v0 ?v1 lSup$b lprefix$b (fun_app$ab (uwd$ ?v2 )?v3 )))):named a129 ))
(assert (! (forall ((?v0 B_llist_set_b_llist_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 B_llist_b_llist_fun$ )(?v3 Nat$ ))(=> (mcont$f ?v0 ?v1 lSup$b lprefix$b ?v2 )(mcont$f ?v0 ?v1 lSup$b lprefix$b (fun_app$ae (uwe$ ?v2 )?v3 )))):named a130 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 Nat$ ))(=> (mcont$b ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$b ?v0 ?v1 lSup$ lprefix$ (fun_app$ah (uwf$ ?v2 )?v3 )))):named a131 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_llist_fun$ )(?v3 Nat$ ))(=> (mcont$a ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$a ?v0 ?v1 lSup$ lprefix$ (fun_app$ad (uwg$ ?v2 )?v3 )))):named a132 ))
(assert (! (forall ((?v0 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_fun$ )(?v3 Nat$ ))(=> (mcont$c ?v0 ?v1 lSup$a lprefix$a ?v2 )(mcont$c ?v0 ?v1 lSup$a lprefix$a (fun_app$aa (uwh$ ?v2 )?v3 )))):named a133 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_fun$ )(?v3 Nat$ ))(=> (mcont$ ?v0 ?v1 lSup$a lprefix$a ?v2 )(mcont$ ?v0 ?v1 lSup$a lprefix$a (fun_app$af (uwi$ ?v2 )?v3 )))):named a134 ))
(assert (! (forall ((?v0 Enat$ ))(mcont$f lSup$b lprefix$b lSup$b lprefix$b (ldrop$a ?v0 ))):named a135 ))
(assert (! (forall ((?v0 Enat$ ))(mcont$b lSup$ lprefix$ lSup$ lprefix$ (ldrop$b ?v0 ))):named a136 ))
(assert (! (forall ((?v0 Enat$ ))(mcont$c lSup$a lprefix$a lSup$a lprefix$a (ldrop$ ?v0 ))):named a137 ))
(assert (! (forall ((?v0 Nat$ ))(mcont$f lSup$b lprefix$b lSup$b lprefix$b (ldropn$a ?v0 ))):named a138 ))
(assert (! (forall ((?v0 Nat$ ))(mcont$b lSup$ lprefix$ lSup$ lprefix$ (ldropn$b ?v0 ))):named a139 ))
(assert (! (forall ((?v0 Nat$ ))(mcont$c lSup$a lprefix$a lSup$a lprefix$a (ldropn$ ?v0 ))):named a140 ))
(assert (! (forall ((?v0 A_llist$ ))(monotone$ lprefix$b lprefix$a (lzip$ ?v0 ))):named a141 ))
(check-sat )
(get-unsat-core )
