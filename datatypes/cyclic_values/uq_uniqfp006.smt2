(set-info :status unsat)
(declare-codatatypes ((T 0)) ((
  (f0)
  (f1 (proj0f1 T) (proj1f1 T)))))
(assert (exists ((y616 T) (y617 T) (y614 T) (y615 T) (y612 T) (y613 T) (y610 T) (y611 T) (y609 T) (y608 T) (y618 T) (y619 T) (y632 T) (y639 T) (y650 T) (y628 T) (y642 T) (y648 T) (y644 T) (y630 T) (y631 T) (y621 T) (y620 T) (y627 T) (y626 T) (y625 T) (y624 T) (y652 T) (y638 T) (y633 T) (y634 T) (y635 T) (y651 T) (y636 T) (y643 T) (y645 T) (y649 T) (y641 T) (y637 T) (y647 T)) (forall ((x659 T) (x660 T) (x662 T) (x663 T) (x661 T) (x658 T) (x655 T) (x654 T)) 
  (or 
    (and (= x659 (f1 y609 (f1 (f1 x660 (f1 x660 x660)) x660))) (= y609 (f1 y610 (f1 (f1 (f1 x660 x660) x660) x660))) (= y610 (f1 y611 (f1 x660 x660))) (= y611 (f1 y612 (f1 x660 x660))) (= y612 (f1 x659 x660)) (= y608 (f1 y613 (f1 (f1 x660 (f1 x660 x660)) x660))) (= y613 (f1 y614 (f1 (f1 (f1 x660 x660) x660) x660))) (= y614 (f1 y615 (f1 x660 x660))) (= y615 (f1 y616 (f1 x660 x660))) (= y616 (f1 y608 x660)) (distinct x659 y608)) 
    (and (= y617 (f1 y619 (f1 (f1 (f1 (f1 x660 x660) (f1 x660 x660)) (f1 x660 (f1 x660 x660))) x660))) (= y619 (f1 y620 (f1 (f1 x660 x660) (f1 x660 x660)))) (= y620 (f1 y621 (f1 (f1 x660 x660) (f1 x660 x660)))) (= y621 (f1 x663 (f1 x660 x660))) (= x663 (f1 y617 x660)) (= y618 (f1 (f1 x662 (f1 (f1 x660 x660) (f1 x660 x660))) (f1 (f1 (f1 (f1 x660 x660) (f1 x660 x660)) (f1 x660 (f1 x660 x660))) x660))) (= x662 (f1 (f1 y624 (f1 x660 x660)) (f1 (f1 x660 x660) (f1 x660 x660)))) (= y624 (f1 y618 x660)) (distinct y617 y618)) 
    (and (= y625 (f1 y627 (f1 x660 x660))) (= y627 (f1 y625 x660)) (= y626 (f1 y628 (f1 x660 x660))) (= y628 (f1 y626 x660)) (distinct y625 y626)) 
    (and (= x655 (f1 x655 x660)) (= y630 (f1 y630 x660)) (distinct x655 y630)) 
    (and (= y631 (f1 y633 (f1 x660 x660))) (= y633 (f1 y634 (f1 x660 (f1 x660 x660)))) (= y634 (f1 y635 (f1 x660 x660))) (= y635 (f1 y631 x660)) (= y632 (f1 y636 (f1 x660 x660))) (= y636 (f1 y637 (f1 x660 (f1 x660 x660)))) (= y637 (f1 y638 (f1 x660 x660))) (= y638 (f1 y632 x660)) (distinct y631 y632)) 
    (and (= y639 (f1 y641 (f1 x660 x660))) (= y641 (f1 y639 x660)) (= x654 (f1 (f1 x654 x660) (f1 x660 x660))) (distinct y639 x654)) 
    (and (= y642 (f1 y644 x660)) (= y644 (f1 y645 x660)) (= y645 (f1 y642 x660)) (= y643 (f1 x661 x660)) (= x661 (f1 y647 x660)) (= y647 (f1 y643 x660)) (distinct y642 y643)) 
    (and (= y648 (f1 y650 (f1 x660 x660))) (= y650 (f1 y648 x660)) (= y649 (f1 y651 (f1 x660 x660))) (= y651 (f1 y649 x660)) (distinct y648 y649)) 
    (and (= y652 (f1 y652 x660)) (= x658 (f1 x658 x660)) (distinct y652 x658))))))
(check-sat)
