% Status   : Unsatisfiable
%%-- main
thf(var_5, type, a: $array($int, $int)).
thf(var_6, type, n: $int).
thf(var_8, type, t: $int).
thf(var_9, type, sortedFrom: $int).
thf(var_9, type, sortedUntil: $int).
thf(var_10, type, bad: $o).
thf(require_axiom1, axiom, $greater(n, 0)).
thf(require_axiom1, axiom, ($less(0, sortedUntil) & $lesseq(sortedUntil, n))).
thf(require_axiom1, axiom, ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))).
thf(require_axiom1, axiom, ![K: $int]: (($lesseq(0, K) & $less(K, $difference(sortedUntil, 1))) => $lesseq($select(a, K), $select(a, $difference(sortedUntil, 1))))).
thf(require_axiom1, axiom, ($less(0, sortedUntil) & $lesseq(sortedUntil, n))).
thf(require_axiom1, axiom, ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))).
thf(require_axiom1, axiom, ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))).
thf(require_axiom1, axiom, ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))).
thf(require_axiom1, axiom, ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))).
thf(main, conjecture, $ite(~($greatereq(sortedFrom, 0)),
                           $let(bad := $true, 
                           $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                $let(t := $select(a, sortedFrom), 
                                $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                $let(sortedFrom := $difference(sortedFrom, 1), 
                                $ite(~($greatereq(sortedFrom, 0)),
                                     $let(bad := $true, 
                                     $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                          $let(t := $select(a, sortedFrom), 
                                          $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                          $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))))))),
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))))),
                                     $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                          $let(t := $select(a, sortedFrom), 
                                          $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                          $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))))))),
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))))))))),
                                $let(sortedFrom := $difference(sortedFrom, 1), 
                                $ite(~($greatereq(sortedFrom, 0)),
                                     $let(bad := $true, 
                                     $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                          $let(t := $select(a, sortedFrom), 
                                          $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                          $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))))))),
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))))),
                                     $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                          $let(t := $select(a, sortedFrom), 
                                          $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                          $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))))))),
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))))))))),
                           $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                $let(t := $select(a, sortedFrom), 
                                $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                $let(sortedFrom := $difference(sortedFrom, 1), 
                                $ite(~($greatereq(sortedFrom, 0)),
                                     $let(bad := $true, 
                                     $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                          $let(t := $select(a, sortedFrom), 
                                          $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                          $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))))))),
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))))),
                                     $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                          $let(t := $select(a, sortedFrom), 
                                          $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                          $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))))))),
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))))))))),
                                $let(sortedFrom := $difference(sortedFrom, 1), 
                                $ite(~($greatereq(sortedFrom, 0)),
                                     $let(bad := $true, 
                                     $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                          $let(t := $select(a, sortedFrom), 
                                          $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                          $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))))))),
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))))),
                                     $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                          $let(t := $select(a, sortedFrom), 
                                          $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                          $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))))))),
                                          $let(sortedFrom := $difference(sortedFrom, 1), 
                                          $ite(~($greatereq(sortedFrom, 0)),
                                               $let(bad := $true, 
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))))),
                                               $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                    $let(t := $select(a, sortedFrom), 
                                                    $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                    $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))),
                                                    $let(sortedFrom := $difference(sortedFrom, 1), 
                                                    $ite(~($greatereq(sortedFrom, 0)),
                                                         $let(bad := $true, 
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))),
                                                         $ite($greater($select(a, sortedFrom), $select(a, $sum(sortedFrom, 1))),
                                                              $let(t := $select(a, sortedFrom), 
                                                              $let(a := $store(a, sortedFrom, $select(a, $sum(sortedFrom, 1))), 
                                                              $let(a := $store(a, $sum(sortedFrom, 1), t), 
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))))))))))),
                                                              $let(sortedFrom := $difference(sortedFrom, 1), 
                                                              ((bad | ($less(0, sortedUntil) & $lesseq(sortedUntil, n))) & ((bad | ($lesseq($uminus(1), sortedFrom) & $lesseq(sortedFrom, $difference(sortedUntil, 1)))) & ((bad | ![K: $int, M: $int]: (((($lesseq(0, K) & $less(K, $sum(sortedFrom, 1))) & $less($sum(sortedFrom, 1), M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M)))) & ((bad | ![K: $int, M: $int]: ((($lesseq(0, K) & $less(K, M)) & $less(M, $sum(sortedFrom, 1))) => $lesseq($select(a, K), $select(a, M)))) & (bad | ![K: $int, M: $int]: ((($lesseq($sum(sortedFrom, 1), K) & $less(K, M)) & $lesseq(M, sortedUntil)) => $lesseq($select(a, K), $select(a, M))))))))))))))))))))).
%%-- end
