% Status   : Unsatisfiable
%%-- main
thf(var_1, type, matrix: $array($int, $array($int, $int))).
thf(var_2, type, transposed: $array($int, $array($int, $int))).
thf(var_3, type, size: $int).
thf(var_4, type, row: $int).
thf(var_4, type, col: $int).
thf(var_5, type, bad: $o).
thf(require_axiom1, axiom, $greater(size, 0)).
thf(require_axiom1, axiom, ($lesseq(0, row) & $lesseq(row, col))).
thf(require_axiom1, axiom, ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))).
thf(main, conjecture, $ite(~((row != size)),
                           $let(bad := $true, 
                           $ite($less(col, size),
                                $let(transposed := $store(transposed, row, $store($select(transposed, row), col, $select($select(matrix, col), row))), 
                                $let(transposed := $store(transposed, col, $store($select(transposed, col), row, $select($select(matrix, row), col))), 
                                $let(col := $sum(col, 1), 
                                $ite(~((row != size)),
                                     $let(bad := $true, 
                                     $ite($less(col, size),
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), col, $select($select(matrix, col), row))), 
                                          $let(transposed := $store(transposed, col, $store($select(transposed, col), row, $select($select(matrix, row), col))), 
                                          $let(col := $sum(col, 1), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))),
                                          $let(row := $sum(row, 1), 
                                          $let(col := $sum(row, 1), 
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), row, $select($select(matrix, row), row))), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))))),
                                     $ite($less(col, size),
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), col, $select($select(matrix, col), row))), 
                                          $let(transposed := $store(transposed, col, $store($select(transposed, col), row, $select($select(matrix, row), col))), 
                                          $let(col := $sum(col, 1), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))),
                                          $let(row := $sum(row, 1), 
                                          $let(col := $sum(row, 1), 
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), row, $select($select(matrix, row), row))), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J)))))))))))))),
                                $let(row := $sum(row, 1), 
                                $let(col := $sum(row, 1), 
                                $let(transposed := $store(transposed, row, $store($select(transposed, row), row, $select($select(matrix, row), row))), 
                                $ite(~((row != size)),
                                     $let(bad := $true, 
                                     $ite($less(col, size),
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), col, $select($select(matrix, col), row))), 
                                          $let(transposed := $store(transposed, col, $store($select(transposed, col), row, $select($select(matrix, row), col))), 
                                          $let(col := $sum(col, 1), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))),
                                          $let(row := $sum(row, 1), 
                                          $let(col := $sum(row, 1), 
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), row, $select($select(matrix, row), row))), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))))),
                                     $ite($less(col, size),
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), col, $select($select(matrix, col), row))), 
                                          $let(transposed := $store(transposed, col, $store($select(transposed, col), row, $select($select(matrix, row), col))), 
                                          $let(col := $sum(col, 1), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))),
                                          $let(row := $sum(row, 1), 
                                          $let(col := $sum(row, 1), 
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), row, $select($select(matrix, row), row))), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J)))))))))))))))),
                           $ite($less(col, size),
                                $let(transposed := $store(transposed, row, $store($select(transposed, row), col, $select($select(matrix, col), row))), 
                                $let(transposed := $store(transposed, col, $store($select(transposed, col), row, $select($select(matrix, row), col))), 
                                $let(col := $sum(col, 1), 
                                $ite(~((row != size)),
                                     $let(bad := $true, 
                                     $ite($less(col, size),
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), col, $select($select(matrix, col), row))), 
                                          $let(transposed := $store(transposed, col, $store($select(transposed, col), row, $select($select(matrix, row), col))), 
                                          $let(col := $sum(col, 1), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))),
                                          $let(row := $sum(row, 1), 
                                          $let(col := $sum(row, 1), 
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), row, $select($select(matrix, row), row))), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))))),
                                     $ite($less(col, size),
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), col, $select($select(matrix, col), row))), 
                                          $let(transposed := $store(transposed, col, $store($select(transposed, col), row, $select($select(matrix, row), col))), 
                                          $let(col := $sum(col, 1), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))),
                                          $let(row := $sum(row, 1), 
                                          $let(col := $sum(row, 1), 
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), row, $select($select(matrix, row), row))), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J)))))))))))))),
                                $let(row := $sum(row, 1), 
                                $let(col := $sum(row, 1), 
                                $let(transposed := $store(transposed, row, $store($select(transposed, row), row, $select($select(matrix, row), row))), 
                                $ite(~((row != size)),
                                     $let(bad := $true, 
                                     $ite($less(col, size),
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), col, $select($select(matrix, col), row))), 
                                          $let(transposed := $store(transposed, col, $store($select(transposed, col), row, $select($select(matrix, row), col))), 
                                          $let(col := $sum(col, 1), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))),
                                          $let(row := $sum(row, 1), 
                                          $let(col := $sum(row, 1), 
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), row, $select($select(matrix, row), row))), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))))),
                                     $ite($less(col, size),
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), col, $select($select(matrix, col), row))), 
                                          $let(transposed := $store(transposed, col, $store($select(transposed, col), row, $select($select(matrix, row), col))), 
                                          $let(col := $sum(col, 1), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))),
                                          $let(row := $sum(row, 1), 
                                          $let(col := $sum(row, 1), 
                                          $let(transposed := $store(transposed, row, $store($select(transposed, row), row, $select($select(matrix, row), row))), 
                                          ((bad | ($lesseq(0, row) & $lesseq(row, col))) & (bad | ![I: $int, J: $int]: (((($lesseq(0, I) & $lesseq(I, J)) & $less(J, size)) & (((I = row) & $less(J, col)) | $less(I, row))) => (($select($select(transposed, I), J) = $select($select(matrix, J), I)) & ($select($select(transposed, J), I) = $select($select(matrix, I), J))))))))))))))))).
%%-- end
