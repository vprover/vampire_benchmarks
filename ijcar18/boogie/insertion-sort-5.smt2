(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.0)
(set-info :status unsat)
(set-option :AUTO_CONFIG false)
(set-option :pp.bv_literals false)
(set-option :MODEL.V2 true)
(set-option :smt.PHASE_SELECTION 0)
(set-option :smt.RESTART_STRATEGY 0)
(set-option :smt.RESTART_FACTOR |1.5|)
(set-option :smt.ARITH.RANDOM_INITIAL_VALUE true)
(set-option :smt.CASE_SPLIT 3)
(set-option :smt.DELAY_UNITS true)
(set-option :NNF.SK_HACK true)
(set-option :smt.MBQI false)
(set-option :smt.QI.EAGER_THRESHOLD 100)
(set-option :TYPE_CHECK true)
(set-option :smt.BV.REFLECT true)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun %lbl%+668 () Bool)
(declare-fun sortedFrom@4 () Int)
(declare-fun sortedFrom@3 () Int)
(declare-fun %lbl%@2569 () Bool)
(declare-fun bad@4 () Bool)
(declare-fun sortedUntil () Int)
(declare-fun n () Int)
(declare-fun %lbl%@2586 () Bool)
(declare-fun %lbl%@2607 () Bool)
(declare-fun a@14 () (Array Int Int))
(declare-fun %lbl%@2663 () Bool)
(declare-fun %lbl%@2708 () Bool)
(declare-fun %lbl%+666 () Bool)
(declare-fun a@11 () (Array Int Int))
(declare-fun %lbl%+664 () Bool)
(declare-fun t@4 () Int)
(declare-fun a@12 () (Array Int Int))
(declare-fun a@13 () (Array Int Int))
(declare-fun %lbl%+655 () Bool)
(declare-fun bad@3 () Bool)
(declare-fun %lbl%+653 () Bool)
(declare-fun %lbl%+651 () Bool)
(declare-fun sortedFrom@2 () Int)
(declare-fun %lbl%+645 () Bool)
(declare-fun a@8 () (Array Int Int))
(declare-fun %lbl%+643 () Bool)
(declare-fun t@3 () Int)
(declare-fun a@9 () (Array Int Int))
(declare-fun a@10 () (Array Int Int))
(declare-fun %lbl%+634 () Bool)
(declare-fun bad@2 () Bool)
(declare-fun %lbl%+632 () Bool)
(declare-fun %lbl%+630 () Bool)
(declare-fun sortedFrom@1 () Int)
(declare-fun %lbl%+624 () Bool)
(declare-fun a@5 () (Array Int Int))
(declare-fun %lbl%+622 () Bool)
(declare-fun t@2 () Int)
(declare-fun a@6 () (Array Int Int))
(declare-fun a@7 () (Array Int Int))
(declare-fun %lbl%+613 () Bool)
(declare-fun bad@1 () Bool)
(declare-fun %lbl%+611 () Bool)
(declare-fun %lbl%+609 () Bool)
(declare-fun sortedFrom@0 () Int)
(declare-fun %lbl%+603 () Bool)
(declare-fun a@2 () (Array Int Int))
(declare-fun %lbl%+601 () Bool)
(declare-fun t@1 () Int)
(declare-fun a@3 () (Array Int Int))
(declare-fun a@4 () (Array Int Int))
(declare-fun %lbl%+592 () Bool)
(declare-fun bad@0 () Bool)
(declare-fun %lbl%+590 () Bool)
(declare-fun %lbl%+588 () Bool)
(declare-fun sortedFrom () Int)
(declare-fun %lbl%+582 () Bool)
(declare-fun a () (Array Int Int))
(declare-fun %lbl%+580 () Bool)
(declare-fun t@0 () Int)
(declare-fun a@0 () (Array Int Int))
(declare-fun a@1 () (Array Int Int))
(declare-fun %lbl%+571 () Bool)
(declare-fun bad () Bool)
(declare-fun %lbl%+569 () Bool)
(declare-fun %lbl%+1122 () Bool)
(push 1)
(set-info :boogie-vc-id main)
(assert (not
(let ((anon20_correct  (=> (! (and %lbl%+668 true) :lblpos +668) (=> (= sortedFrom@4 (- sortedFrom@3 1)) (and (! (or %lbl%@2569  (or bad@4 (and (< 0 sortedUntil) (<= sortedUntil n)))) :lblneg @2569) (=> (or bad@4 (and (< 0 sortedUntil) (<= sortedUntil n))) (and (! (or %lbl%@2586  (or bad@4 (and (<= (- 0 1) sortedFrom@4) (<= sortedFrom@4 (- sortedUntil 1))))) :lblneg @2586) (=> (or bad@4 (and (<= (- 0 1) sortedFrom@4) (<= sortedFrom@4 (- sortedUntil 1)))) (and (! (or %lbl%@2607  (or bad@4 (forall ((k Int) (m Int) ) (!  (=> (and (and (and (<= 0 k) (< k (+ sortedFrom@4 1))) (< (+ sortedFrom@4 1) m)) (<= m sortedUntil)) (<= (select a@14 k) (select a@14 m)))
 :qid |insertio.27:26|
 :skolemid |5|
)))) :lblneg @2607) (=> (or bad@4 (forall ((k@@0 Int) (m@@0 Int) ) (!  (=> (and (and (and (<= 0 k@@0) (< k@@0 (+ sortedFrom@4 1))) (< (+ sortedFrom@4 1) m@@0)) (<= m@@0 sortedUntil)) (<= (select a@14 k@@0) (select a@14 m@@0)))
 :qid |insertio.27:26|
 :skolemid |5|
))) (and (! (or %lbl%@2663  (or bad@4 (forall ((k@@1 Int) (m@@1 Int) ) (!  (=> (and (and (<= 0 k@@1) (< k@@1 m@@1)) (< m@@1 (+ sortedFrom@4 1))) (<= (select a@14 k@@1) (select a@14 m@@1)))
 :qid |insertio.28:26|
 :skolemid |6|
)))) :lblneg @2663) (=> (or bad@4 (forall ((k@@2 Int) (m@@2 Int) ) (!  (=> (and (and (<= 0 k@@2) (< k@@2 m@@2)) (< m@@2 (+ sortedFrom@4 1))) (<= (select a@14 k@@2) (select a@14 m@@2)))
 :qid |insertio.28:26|
 :skolemid |6|
))) (! (or %lbl%@2708  (or bad@4 (forall ((k@@3 Int) (m@@3 Int) ) (!  (=> (and (and (<= (+ sortedFrom@4 1) k@@3) (< k@@3 m@@3)) (<= m@@3 sortedUntil)) (<= (select a@14 k@@3) (select a@14 m@@3)))
 :qid |insertio.29:26|
 :skolemid |7|
)))) :lblneg @2708)))))))))))))
(let ((anon30_Else_correct  (=> (! (and %lbl%+666 true) :lblpos +666) (=> (and (>= (select a@11 (+ sortedFrom@3 1)) (select a@11 sortedFrom@3)) (= a@14 a@11)) anon20_correct))))
(let ((anon30_Then_correct  (=> (! (and %lbl%+664 true) :lblpos +664) (=> (> (select a@11 sortedFrom@3) (select a@11 (+ sortedFrom@3 1))) (=> (and (and (= t@4 (select a@11 sortedFrom@3)) (= a@12 (store a@11 sortedFrom@3 (select a@11 (+ sortedFrom@3 1))))) (and (= a@13 (store a@12 (+ sortedFrom@3 1) t@4)) (= a@14 a@13))) anon20_correct)))))
(let ((anon29_Else_correct  (=> (! (and %lbl%+655 true) :lblpos +655) (=> (>= sortedFrom@3 0) (=> (and (=> bad@4 bad@3) (=> bad@3 bad@4)) (and anon30_Then_correct anon30_Else_correct))))))
(let ((anon29_Then_correct  (=> (! (and %lbl%+653 true) :lblpos +653) (=> (not (>= sortedFrom@3 0)) (=> (and (=> bad@4 true) (=> true bad@4)) (and anon30_Then_correct anon30_Else_correct))))))
(let ((anon16_correct  (=> (! (and %lbl%+651 true) :lblpos +651) (=> (= sortedFrom@3 (- sortedFrom@2 1)) (and anon29_Then_correct anon29_Else_correct)))))
(let ((anon28_Else_correct  (=> (! (and %lbl%+645 true) :lblpos +645) (=> (and (>= (select a@8 (+ sortedFrom@2 1)) (select a@8 sortedFrom@2)) (= a@11 a@8)) anon16_correct))))
(let ((anon28_Then_correct  (=> (! (and %lbl%+643 true) :lblpos +643) (=> (> (select a@8 sortedFrom@2) (select a@8 (+ sortedFrom@2 1))) (=> (and (and (= t@3 (select a@8 sortedFrom@2)) (= a@9 (store a@8 sortedFrom@2 (select a@8 (+ sortedFrom@2 1))))) (and (= a@10 (store a@9 (+ sortedFrom@2 1) t@3)) (= a@11 a@10))) anon16_correct)))))
(let ((anon27_Else_correct  (=> (! (and %lbl%+634 true) :lblpos +634) (=> (>= sortedFrom@2 0) (=> (and (=> bad@3 bad@2) (=> bad@2 bad@3)) (and anon28_Then_correct anon28_Else_correct))))))
(let ((anon27_Then_correct  (=> (! (and %lbl%+632 true) :lblpos +632) (=> (not (>= sortedFrom@2 0)) (=> (and (=> bad@3 true) (=> true bad@3)) (and anon28_Then_correct anon28_Else_correct))))))
(let ((anon12_correct  (=> (! (and %lbl%+630 true) :lblpos +630) (=> (= sortedFrom@2 (- sortedFrom@1 1)) (and anon27_Then_correct anon27_Else_correct)))))
(let ((anon26_Else_correct  (=> (! (and %lbl%+624 true) :lblpos +624) (=> (and (>= (select a@5 (+ sortedFrom@1 1)) (select a@5 sortedFrom@1)) (= a@8 a@5)) anon12_correct))))
(let ((anon26_Then_correct  (=> (! (and %lbl%+622 true) :lblpos +622) (=> (> (select a@5 sortedFrom@1) (select a@5 (+ sortedFrom@1 1))) (=> (and (and (= t@2 (select a@5 sortedFrom@1)) (= a@6 (store a@5 sortedFrom@1 (select a@5 (+ sortedFrom@1 1))))) (and (= a@7 (store a@6 (+ sortedFrom@1 1) t@2)) (= a@8 a@7))) anon12_correct)))))
(let ((anon25_Else_correct  (=> (! (and %lbl%+613 true) :lblpos +613) (=> (>= sortedFrom@1 0) (=> (and (=> bad@2 bad@1) (=> bad@1 bad@2)) (and anon26_Then_correct anon26_Else_correct))))))
(let ((anon25_Then_correct  (=> (! (and %lbl%+611 true) :lblpos +611) (=> (not (>= sortedFrom@1 0)) (=> (and (=> bad@2 true) (=> true bad@2)) (and anon26_Then_correct anon26_Else_correct))))))
(let ((anon8_correct  (=> (! (and %lbl%+609 true) :lblpos +609) (=> (= sortedFrom@1 (- sortedFrom@0 1)) (and anon25_Then_correct anon25_Else_correct)))))
(let ((anon24_Else_correct  (=> (! (and %lbl%+603 true) :lblpos +603) (=> (and (>= (select a@2 (+ sortedFrom@0 1)) (select a@2 sortedFrom@0)) (= a@5 a@2)) anon8_correct))))
(let ((anon24_Then_correct  (=> (! (and %lbl%+601 true) :lblpos +601) (=> (> (select a@2 sortedFrom@0) (select a@2 (+ sortedFrom@0 1))) (=> (and (and (= t@1 (select a@2 sortedFrom@0)) (= a@3 (store a@2 sortedFrom@0 (select a@2 (+ sortedFrom@0 1))))) (and (= a@4 (store a@3 (+ sortedFrom@0 1) t@1)) (= a@5 a@4))) anon8_correct)))))
(let ((anon23_Else_correct  (=> (! (and %lbl%+592 true) :lblpos +592) (=> (>= sortedFrom@0 0) (=> (and (=> bad@1 bad@0) (=> bad@0 bad@1)) (and anon24_Then_correct anon24_Else_correct))))))
(let ((anon23_Then_correct  (=> (! (and %lbl%+590 true) :lblpos +590) (=> (not (>= sortedFrom@0 0)) (=> (and (=> bad@1 true) (=> true bad@1)) (and anon24_Then_correct anon24_Else_correct))))))
(let ((anon4_correct  (=> (! (and %lbl%+588 true) :lblpos +588) (=> (= sortedFrom@0 (- sortedFrom 1)) (and anon23_Then_correct anon23_Else_correct)))))
(let ((anon22_Else_correct  (=> (! (and %lbl%+582 true) :lblpos +582) (=> (and (>= (select a (+ sortedFrom 1)) (select a sortedFrom)) (= a@2 a)) anon4_correct))))
(let ((anon22_Then_correct  (=> (! (and %lbl%+580 true) :lblpos +580) (=> (> (select a sortedFrom) (select a (+ sortedFrom 1))) (=> (and (and (= t@0 (select a sortedFrom)) (= a@0 (store a sortedFrom (select a (+ sortedFrom 1))))) (and (= a@1 (store a@0 (+ sortedFrom 1) t@0)) (= a@2 a@1))) anon4_correct)))))
(let ((anon21_Else_correct  (=> (! (and %lbl%+571 true) :lblpos +571) (=> (>= sortedFrom 0) (=> (and (=> bad@0 bad) (=> bad bad@0)) (and anon22_Then_correct anon22_Else_correct))))))
(let ((anon21_Then_correct  (=> (! (and %lbl%+569 true) :lblpos +569) (=> (not (>= sortedFrom 0)) (=> (and (=> bad@0 true) (=> true bad@0)) (and anon22_Then_correct anon22_Else_correct))))))
(let ((anon0_correct  (=> (! (and %lbl%+1122 true) :lblpos +1122) (=> (> n 0) (=> (and (< 0 sortedUntil) (<= sortedUntil n)) (=> (and (and (forall ((k@@4 Int) (m@@4 Int) ) (!  (=> (and (and (<= 0 k@@4) (< k@@4 m@@4)) (< m@@4 sortedUntil)) (<= (select a k@@4) (select a m@@4)))
 :qid |insertio.16:20|
 :skolemid |0|
)) (forall ((k@@5 Int) ) (!  (=> (and (<= 0 k@@5) (< k@@5 (- sortedUntil 1))) (<= (select a k@@5) (select a (- sortedUntil 1))))
 :qid |insertio.17:20|
 :skolemid |1|
))) (and (< 0 sortedUntil) (<= sortedUntil n))) (=> (and (and (and (<= (- 0 1) sortedFrom) (<= sortedFrom (- sortedUntil 1))) (forall ((k@@6 Int) (m@@5 Int) ) (!  (=> (and (and (and (<= 0 k@@6) (< k@@6 (+ sortedFrom 1))) (< (+ sortedFrom 1) m@@5)) (<= m@@5 sortedUntil)) (<= (select a k@@6) (select a m@@5)))
 :qid |insertio.21:20|
 :skolemid |2|
))) (and (forall ((k@@7 Int) (m@@6 Int) ) (!  (=> (and (and (<= 0 k@@7) (< k@@7 m@@6)) (< m@@6 (+ sortedFrom 1))) (<= (select a k@@7) (select a m@@6)))
 :qid |insertio.22:20|
 :skolemid |3|
)) (forall ((k@@8 Int) (m@@7 Int) ) (!  (=> (and (and (<= (+ sortedFrom 1) k@@8) (< k@@8 m@@7)) (<= m@@7 sortedUntil)) (<= (select a k@@8) (select a m@@7)))
 :qid |insertio.23:20|
 :skolemid |4|
)))) (and anon21_Then_correct anon21_Else_correct))))))))
anon0_correct))))))))))))))))))))))))))
))
(get-info :name)
(check-sat)
(get-info :name)
(pop 1)
; Valid
