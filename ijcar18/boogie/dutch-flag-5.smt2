(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.0)
(set-info :status unsat)
(set-option :AUTO_CONFIG false)
(set-option :pp.bv_literals false)
(set-option :MODEL.V2 true)
(set-option :smt.PHASE_SELECTION 0)
(set-option :smt.RESTART_STRATEGY 0)
(set-option :smt.RESTART_FACTOR |1.5|)
(set-option :smt.ARITH.RANDOM_INITIAL_VALUE true)
(set-option :smt.CASE_SPLIT 3)
(set-option :smt.DELAY_UNITS true)
(set-option :NNF.SK_HACK true)
(set-option :smt.MBQI false)
(set-option :smt.QI.EAGER_THRESHOLD 100)
(set-option :TYPE_CHECK true)
(set-option :smt.BV.REFLECT true)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun %lbl%+1235 () Bool)
(declare-fun %lbl%@2912 () Bool)
(declare-fun bad@4 () Bool)
(declare-fun low@9 () Int)
(declare-fun i@14 () Int)
(declare-fun high@9 () Int)
(declare-fun n () Int)
(declare-fun %lbl%@2943 () Bool)
(declare-fun a@24 () (Array Int Int))
(declare-fun pivot () Int)
(declare-fun %lbl%@2973 () Bool)
(declare-fun %lbl%@3002 () Bool)
(declare-fun %lbl%+773 () Bool)
(declare-fun a@19 () (Array Int Int))
(declare-fun i@11 () Int)
(declare-fun i@13 () Int)
(declare-fun high@7 () Int)
(declare-fun low@7 () Int)
(declare-fun %lbl%+771 () Bool)
(declare-fun t@9 () Int)
(declare-fun a@22 () (Array Int Int))
(declare-fun a@23 () (Array Int Int))
(declare-fun high@8 () Int)
(declare-fun %lbl%+769 () Bool)
(declare-fun %lbl%+759 () Bool)
(declare-fun t@8 () Int)
(declare-fun a@20 () (Array Int Int))
(declare-fun a@21 () (Array Int Int))
(declare-fun low@8 () Int)
(declare-fun i@12 () Int)
(declare-fun %lbl%+750 () Bool)
(declare-fun bad@3 () Bool)
(declare-fun %lbl%+748 () Bool)
(declare-fun %lbl%+740 () Bool)
(declare-fun a@14 () (Array Int Int))
(declare-fun i@8 () Int)
(declare-fun i@10 () Int)
(declare-fun high@5 () Int)
(declare-fun low@5 () Int)
(declare-fun %lbl%+738 () Bool)
(declare-fun t@7 () Int)
(declare-fun a@17 () (Array Int Int))
(declare-fun a@18 () (Array Int Int))
(declare-fun high@6 () Int)
(declare-fun %lbl%+736 () Bool)
(declare-fun %lbl%+726 () Bool)
(declare-fun t@6 () Int)
(declare-fun a@15 () (Array Int Int))
(declare-fun a@16 () (Array Int Int))
(declare-fun low@6 () Int)
(declare-fun i@9 () Int)
(declare-fun %lbl%+717 () Bool)
(declare-fun bad@2 () Bool)
(declare-fun %lbl%+715 () Bool)
(declare-fun %lbl%+707 () Bool)
(declare-fun a@9 () (Array Int Int))
(declare-fun i@5 () Int)
(declare-fun i@7 () Int)
(declare-fun high@3 () Int)
(declare-fun low@3 () Int)
(declare-fun %lbl%+705 () Bool)
(declare-fun t@5 () Int)
(declare-fun a@12 () (Array Int Int))
(declare-fun a@13 () (Array Int Int))
(declare-fun high@4 () Int)
(declare-fun %lbl%+703 () Bool)
(declare-fun %lbl%+693 () Bool)
(declare-fun t@4 () Int)
(declare-fun a@10 () (Array Int Int))
(declare-fun a@11 () (Array Int Int))
(declare-fun low@4 () Int)
(declare-fun i@6 () Int)
(declare-fun %lbl%+684 () Bool)
(declare-fun bad@1 () Bool)
(declare-fun %lbl%+682 () Bool)
(declare-fun %lbl%+674 () Bool)
(declare-fun a@4 () (Array Int Int))
(declare-fun i@2 () Int)
(declare-fun i@4 () Int)
(declare-fun high@1 () Int)
(declare-fun low@1 () Int)
(declare-fun %lbl%+672 () Bool)
(declare-fun t@3 () Int)
(declare-fun a@7 () (Array Int Int))
(declare-fun a@8 () (Array Int Int))
(declare-fun high@2 () Int)
(declare-fun %lbl%+670 () Bool)
(declare-fun %lbl%+660 () Bool)
(declare-fun t@2 () Int)
(declare-fun a@5 () (Array Int Int))
(declare-fun a@6 () (Array Int Int))
(declare-fun low@2 () Int)
(declare-fun i@3 () Int)
(declare-fun %lbl%+651 () Bool)
(declare-fun bad@0 () Bool)
(declare-fun %lbl%+649 () Bool)
(declare-fun %lbl%+641 () Bool)
(declare-fun a () (Array Int Int))
(declare-fun i () Int)
(declare-fun i@1 () Int)
(declare-fun high () Int)
(declare-fun low () Int)
(declare-fun %lbl%+639 () Bool)
(declare-fun t@1 () Int)
(declare-fun a@2 () (Array Int Int))
(declare-fun a@3 () (Array Int Int))
(declare-fun high@0 () Int)
(declare-fun %lbl%+637 () Bool)
(declare-fun %lbl%+627 () Bool)
(declare-fun t@0 () Int)
(declare-fun a@0 () (Array Int Int))
(declare-fun a@1 () (Array Int Int))
(declare-fun low@0 () Int)
(declare-fun i@0 () Int)
(declare-fun %lbl%+618 () Bool)
(declare-fun bad () Bool)
(declare-fun %lbl%+616 () Bool)
(declare-fun %lbl%+1240 () Bool)
(push 1)
(set-info :boogie-vc-id main)
(assert (not
(let ((GeneratedUnifiedExit_correct  (=> (! (and %lbl%+1235 true) :lblpos +1235) (and (! (or %lbl%@2912  (or bad@4 (and (and (and (<= 0 low@9) (<= low@9 i@14)) (<= i@14 (+ high@9 1))) (< high@9 n)))) :lblneg @2912) (=> (or bad@4 (and (and (and (<= 0 low@9) (<= low@9 i@14)) (<= i@14 (+ high@9 1))) (< high@9 n))) (and (! (or %lbl%@2943  (or bad@4 (forall ((k Int) ) (!  (=> (and (<= 0 k) (< k low@9)) (< (select a@24 k) pivot))
 :qid |dutchfla.21:26|
 :skolemid |3|
)))) :lblneg @2943) (=> (or bad@4 (forall ((k@@0 Int) ) (!  (=> (and (<= 0 k@@0) (< k@@0 low@9)) (< (select a@24 k@@0) pivot))
 :qid |dutchfla.21:26|
 :skolemid |3|
))) (and (! (or %lbl%@2973  (or bad@4 (forall ((k@@1 Int) ) (!  (=> (and (<= low@9 k@@1) (< k@@1 i@14)) (= (select a@24 k@@1) pivot))
 :qid |dutchfla.22:26|
 :skolemid |4|
)))) :lblneg @2973) (=> (or bad@4 (forall ((k@@2 Int) ) (!  (=> (and (<= low@9 k@@2) (< k@@2 i@14)) (= (select a@24 k@@2) pivot))
 :qid |dutchfla.22:26|
 :skolemid |4|
))) (! (or %lbl%@3002  (or bad@4 (forall ((k@@3 Int) ) (!  (=> (and (< high@9 k@@3) (< k@@3 n)) (> (select a@24 k@@3) pivot))
 :qid |dutchfla.23:26|
 :skolemid |5|
)))) :lblneg @3002))))))))))
(let ((anon44_Else_correct  (=> (! (and %lbl%+773 true) :lblpos +773) (=> (and (>= pivot (select a@19 i@11)) (= i@13 (+ i@11 1))) (=> (and (and (= high@9 high@7) (= a@24 a@19)) (and (= i@14 i@13) (= low@9 low@7))) GeneratedUnifiedExit_correct)))))
(let ((anon44_Then_correct  (=> (! (and %lbl%+771 true) :lblpos +771) (=> (> (select a@19 i@11) pivot) (=> (and (and (and (= t@9 (select a@19 i@11)) (= a@22 (store a@19 i@11 (select a@19 high@7)))) (and (= a@23 (store a@22 high@7 t@9)) (= high@8 (- high@7 1)))) (and (and (= high@9 high@8) (= a@24 a@23)) (and (= i@14 i@11) (= low@9 low@7)))) GeneratedUnifiedExit_correct)))))
(let ((anon43_Else_correct  (=> (! (and %lbl%+769 true) :lblpos +769) (=> (<= pivot (select a@19 i@11)) (and anon44_Then_correct anon44_Else_correct)))))
(let ((anon43_Then_correct  (=> (! (and %lbl%+759 true) :lblpos +759) (=> (and (< (select a@19 i@11) pivot) (= t@8 (select a@19 low@7))) (=> (and (and (and (= a@20 (store a@19 low@7 (select a@19 i@11))) (= a@21 (store a@20 i@11 t@8))) (and (= low@8 (+ low@7 1)) (= i@12 (+ i@11 1)))) (and (and (= high@9 high@7) (= a@24 a@21)) (and (= i@14 i@12) (= low@9 low@8)))) GeneratedUnifiedExit_correct)))))
(let ((anon42_Else_correct  (=> (! (and %lbl%+750 true) :lblpos +750) (=> (<= i@11 high@7) (=> (and (=> bad@4 bad@3) (=> bad@3 bad@4)) (and anon43_Then_correct anon43_Else_correct))))))
(let ((anon42_Then_correct  (=> (! (and %lbl%+748 true) :lblpos +748) (=> (not (<= i@11 high@7)) (=> (and (=> bad@4 true) (=> true bad@4)) (and anon43_Then_correct anon43_Else_correct))))))
(let ((anon41_Else_correct  (=> (! (and %lbl%+740 true) :lblpos +740) (=> (and (>= pivot (select a@14 i@8)) (= i@10 (+ i@8 1))) (=> (and (and (= high@7 high@5) (= i@11 i@10)) (and (= a@19 a@14) (= low@7 low@5))) (and anon42_Then_correct anon42_Else_correct))))))
(let ((anon41_Then_correct  (=> (! (and %lbl%+738 true) :lblpos +738) (=> (> (select a@14 i@8) pivot) (=> (and (and (and (= t@7 (select a@14 i@8)) (= a@17 (store a@14 i@8 (select a@14 high@5)))) (and (= a@18 (store a@17 high@5 t@7)) (= high@6 (- high@5 1)))) (and (and (= high@7 high@6) (= i@11 i@8)) (and (= a@19 a@18) (= low@7 low@5)))) (and anon42_Then_correct anon42_Else_correct))))))
(let ((anon40_Else_correct  (=> (! (and %lbl%+736 true) :lblpos +736) (=> (<= pivot (select a@14 i@8)) (and anon41_Then_correct anon41_Else_correct)))))
(let ((anon40_Then_correct  (=> (! (and %lbl%+726 true) :lblpos +726) (=> (and (< (select a@14 i@8) pivot) (= t@6 (select a@14 low@5))) (=> (and (and (and (= a@15 (store a@14 low@5 (select a@14 i@8))) (= a@16 (store a@15 i@8 t@6))) (and (= low@6 (+ low@5 1)) (= i@9 (+ i@8 1)))) (and (and (= high@7 high@5) (= i@11 i@9)) (and (= a@19 a@16) (= low@7 low@6)))) (and anon42_Then_correct anon42_Else_correct))))))
(let ((anon39_Else_correct  (=> (! (and %lbl%+717 true) :lblpos +717) (=> (<= i@8 high@5) (=> (and (=> bad@3 bad@2) (=> bad@2 bad@3)) (and anon40_Then_correct anon40_Else_correct))))))
(let ((anon39_Then_correct  (=> (! (and %lbl%+715 true) :lblpos +715) (=> (not (<= i@8 high@5)) (=> (and (=> bad@3 true) (=> true bad@3)) (and anon40_Then_correct anon40_Else_correct))))))
(let ((anon38_Else_correct  (=> (! (and %lbl%+707 true) :lblpos +707) (=> (and (>= pivot (select a@9 i@5)) (= i@7 (+ i@5 1))) (=> (and (and (= high@5 high@3) (= a@14 a@9)) (and (= i@8 i@7) (= low@5 low@3))) (and anon39_Then_correct anon39_Else_correct))))))
(let ((anon38_Then_correct  (=> (! (and %lbl%+705 true) :lblpos +705) (=> (> (select a@9 i@5) pivot) (=> (and (and (and (= t@5 (select a@9 i@5)) (= a@12 (store a@9 i@5 (select a@9 high@3)))) (and (= a@13 (store a@12 high@3 t@5)) (= high@4 (- high@3 1)))) (and (and (= high@5 high@4) (= a@14 a@13)) (and (= i@8 i@5) (= low@5 low@3)))) (and anon39_Then_correct anon39_Else_correct))))))
(let ((anon37_Else_correct  (=> (! (and %lbl%+703 true) :lblpos +703) (=> (<= pivot (select a@9 i@5)) (and anon38_Then_correct anon38_Else_correct)))))
(let ((anon37_Then_correct  (=> (! (and %lbl%+693 true) :lblpos +693) (=> (and (< (select a@9 i@5) pivot) (= t@4 (select a@9 low@3))) (=> (and (and (and (= a@10 (store a@9 low@3 (select a@9 i@5))) (= a@11 (store a@10 i@5 t@4))) (and (= low@4 (+ low@3 1)) (= i@6 (+ i@5 1)))) (and (and (= high@5 high@3) (= a@14 a@11)) (and (= i@8 i@6) (= low@5 low@4)))) (and anon39_Then_correct anon39_Else_correct))))))
(let ((anon36_Else_correct  (=> (! (and %lbl%+684 true) :lblpos +684) (=> (<= i@5 high@3) (=> (and (=> bad@2 bad@1) (=> bad@1 bad@2)) (and anon37_Then_correct anon37_Else_correct))))))
(let ((anon36_Then_correct  (=> (! (and %lbl%+682 true) :lblpos +682) (=> (not (<= i@5 high@3)) (=> (and (=> bad@2 true) (=> true bad@2)) (and anon37_Then_correct anon37_Else_correct))))))
(let ((anon35_Else_correct  (=> (! (and %lbl%+674 true) :lblpos +674) (=> (and (>= pivot (select a@4 i@2)) (= i@4 (+ i@2 1))) (=> (and (and (= i@5 i@4) (= a@9 a@4)) (and (= high@3 high@1) (= low@3 low@1))) (and anon36_Then_correct anon36_Else_correct))))))
(let ((anon35_Then_correct  (=> (! (and %lbl%+672 true) :lblpos +672) (=> (> (select a@4 i@2) pivot) (=> (and (and (and (= t@3 (select a@4 i@2)) (= a@7 (store a@4 i@2 (select a@4 high@1)))) (and (= a@8 (store a@7 high@1 t@3)) (= high@2 (- high@1 1)))) (and (and (= i@5 i@2) (= a@9 a@8)) (and (= high@3 high@2) (= low@3 low@1)))) (and anon36_Then_correct anon36_Else_correct))))))
(let ((anon34_Else_correct  (=> (! (and %lbl%+670 true) :lblpos +670) (=> (<= pivot (select a@4 i@2)) (and anon35_Then_correct anon35_Else_correct)))))
(let ((anon34_Then_correct  (=> (! (and %lbl%+660 true) :lblpos +660) (=> (and (< (select a@4 i@2) pivot) (= t@2 (select a@4 low@1))) (=> (and (and (and (= a@5 (store a@4 low@1 (select a@4 i@2))) (= a@6 (store a@5 i@2 t@2))) (and (= low@2 (+ low@1 1)) (= i@3 (+ i@2 1)))) (and (and (= i@5 i@3) (= a@9 a@6)) (and (= high@3 high@1) (= low@3 low@2)))) (and anon36_Then_correct anon36_Else_correct))))))
(let ((anon33_Else_correct  (=> (! (and %lbl%+651 true) :lblpos +651) (=> (<= i@2 high@1) (=> (and (=> bad@1 bad@0) (=> bad@0 bad@1)) (and anon34_Then_correct anon34_Else_correct))))))
(let ((anon33_Then_correct  (=> (! (and %lbl%+649 true) :lblpos +649) (=> (not (<= i@2 high@1)) (=> (and (=> bad@1 true) (=> true bad@1)) (and anon34_Then_correct anon34_Else_correct))))))
(let ((anon32_Else_correct  (=> (! (and %lbl%+641 true) :lblpos +641) (=> (and (>= pivot (select a i)) (= i@1 (+ i 1))) (=> (and (and (= i@2 i@1) (= a@4 a)) (and (= high@1 high) (= low@1 low))) (and anon33_Then_correct anon33_Else_correct))))))
(let ((anon32_Then_correct  (=> (! (and %lbl%+639 true) :lblpos +639) (=> (> (select a i) pivot) (=> (and (and (and (= t@1 (select a i)) (= a@2 (store a i (select a high)))) (and (= a@3 (store a@2 high t@1)) (= high@0 (- high 1)))) (and (and (= i@2 i) (= a@4 a@3)) (and (= high@1 high@0) (= low@1 low)))) (and anon33_Then_correct anon33_Else_correct))))))
(let ((anon31_Else_correct  (=> (! (and %lbl%+637 true) :lblpos +637) (=> (<= pivot (select a i)) (and anon32_Then_correct anon32_Else_correct)))))
(let ((anon31_Then_correct  (=> (! (and %lbl%+627 true) :lblpos +627) (=> (and (< (select a i) pivot) (= t@0 (select a low))) (=> (and (and (and (= a@0 (store a low (select a i))) (= a@1 (store a@0 i t@0))) (and (= low@0 (+ low 1)) (= i@0 (+ i 1)))) (and (and (= i@2 i@0) (= a@4 a@1)) (and (= high@1 high) (= low@1 low@0)))) (and anon33_Then_correct anon33_Else_correct))))))
(let ((anon30_Else_correct  (=> (! (and %lbl%+618 true) :lblpos +618) (=> (<= i high) (=> (and (=> bad@0 bad) (=> bad bad@0)) (and anon31_Then_correct anon31_Else_correct))))))
(let ((anon30_Then_correct  (=> (! (and %lbl%+616 true) :lblpos +616) (=> (not (<= i high)) (=> (and (=> bad@0 true) (=> true bad@0)) (and anon31_Then_correct anon31_Else_correct))))))
(let ((anon0_correct  (=> (! (and %lbl%+1240 true) :lblpos +1240) (=> (>= n 0) (=> (and (and (and (and (and (<= 0 low) (<= low i)) (<= i (+ high 1))) (< high n)) (forall ((k@@4 Int) ) (!  (=> (and (<= 0 k@@4) (< k@@4 low)) (< (select a k@@4) pivot))
 :qid |dutchfla.16:20|
 :skolemid |0|
))) (and (forall ((k@@5 Int) ) (!  (=> (and (<= low k@@5) (< k@@5 i)) (= (select a k@@5) pivot))
 :qid |dutchfla.17:20|
 :skolemid |1|
)) (forall ((k@@6 Int) ) (!  (=> (and (< high k@@6) (< k@@6 n)) (> (select a k@@6) pivot))
 :qid |dutchfla.18:20|
 :skolemid |2|
)))) (and anon30_Then_correct anon30_Else_correct))))))
anon0_correct))))))))))))))))))))))))))))))))
))
(get-info :name)
(check-sat)
(get-info :name)
(pop 1)
; Valid
