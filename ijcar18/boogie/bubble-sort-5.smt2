(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.0)
(set-info :status unsat)
(set-option :AUTO_CONFIG false)
(set-option :pp.bv_literals false)
(set-option :MODEL.V2 true)
(set-option :smt.PHASE_SELECTION 0)
(set-option :smt.RESTART_STRATEGY 0)
(set-option :smt.RESTART_FACTOR |1.5|)
(set-option :smt.ARITH.RANDOM_INITIAL_VALUE true)
(set-option :smt.CASE_SPLIT 3)
(set-option :smt.DELAY_UNITS true)
(set-option :NNF.SK_HACK true)
(set-option :smt.MBQI false)
(set-option :smt.QI.EAGER_THRESHOLD 100)
(set-option :TYPE_CHECK true)
(set-option :smt.BV.REFLECT true)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun %lbl%+621 () Bool)
(declare-fun i@4 () Int)
(declare-fun i@3 () Int)
(declare-fun %lbl%@2366 () Bool)
(declare-fun bad@4 () Bool)
(declare-fun sortedUntil () Int)
(declare-fun n () Int)
(declare-fun %lbl%@2381 () Bool)
(declare-fun a@14 () (Array Int Int))
(declare-fun %lbl%@2431 () Bool)
(declare-fun %lbl%@2463 () Bool)
(declare-fun %lbl%+619 () Bool)
(declare-fun a@11 () (Array Int Int))
(declare-fun %lbl%+617 () Bool)
(declare-fun t@4 () Int)
(declare-fun a@12 () (Array Int Int))
(declare-fun a@13 () (Array Int Int))
(declare-fun %lbl%+608 () Bool)
(declare-fun bad@3 () Bool)
(declare-fun %lbl%+606 () Bool)
(declare-fun %lbl%+604 () Bool)
(declare-fun i@2 () Int)
(declare-fun %lbl%+598 () Bool)
(declare-fun a@8 () (Array Int Int))
(declare-fun %lbl%+596 () Bool)
(declare-fun t@3 () Int)
(declare-fun a@9 () (Array Int Int))
(declare-fun a@10 () (Array Int Int))
(declare-fun %lbl%+587 () Bool)
(declare-fun bad@2 () Bool)
(declare-fun %lbl%+585 () Bool)
(declare-fun %lbl%+583 () Bool)
(declare-fun i@1 () Int)
(declare-fun %lbl%+577 () Bool)
(declare-fun a@5 () (Array Int Int))
(declare-fun %lbl%+575 () Bool)
(declare-fun t@2 () Int)
(declare-fun a@6 () (Array Int Int))
(declare-fun a@7 () (Array Int Int))
(declare-fun %lbl%+566 () Bool)
(declare-fun bad@1 () Bool)
(declare-fun %lbl%+564 () Bool)
(declare-fun %lbl%+562 () Bool)
(declare-fun i@0 () Int)
(declare-fun %lbl%+556 () Bool)
(declare-fun a@2 () (Array Int Int))
(declare-fun %lbl%+554 () Bool)
(declare-fun t@1 () Int)
(declare-fun a@3 () (Array Int Int))
(declare-fun a@4 () (Array Int Int))
(declare-fun %lbl%+545 () Bool)
(declare-fun bad@0 () Bool)
(declare-fun %lbl%+543 () Bool)
(declare-fun %lbl%+541 () Bool)
(declare-fun i () Int)
(declare-fun %lbl%+535 () Bool)
(declare-fun a () (Array Int Int))
(declare-fun %lbl%+533 () Bool)
(declare-fun t@0 () Int)
(declare-fun a@0 () (Array Int Int))
(declare-fun a@1 () (Array Int Int))
(declare-fun %lbl%+524 () Bool)
(declare-fun bad () Bool)
(declare-fun %lbl%+522 () Bool)
(declare-fun %lbl%+1040 () Bool)
(push 1)
(set-info :boogie-vc-id main)
(assert (not
(let ((anon20_correct  (=> (! (and %lbl%+621 true) :lblpos +621) (=> (= i@4 (- i@3 1)) (and (! (or %lbl%@2366  (or bad@4 (and (<= sortedUntil i@4) (< i@4 n)))) :lblneg @2366) (=> (or bad@4 (and (<= sortedUntil i@4) (< i@4 n))) (and (! (or %lbl%@2381  (or bad@4 (forall ((j Int) (k Int) ) (!  (=> (and (and (and (<= 0 j) (< j sortedUntil)) (<= sortedUntil k)) (< k n)) (<= (select a@14 j) (select a@14 k)))
 :qid |bubbleso.18:26|
 :skolemid |5|
)))) :lblneg @2381) (=> (or bad@4 (forall ((j@@0 Int) (k@@0 Int) ) (!  (=> (and (and (and (<= 0 j@@0) (< j@@0 sortedUntil)) (<= sortedUntil k@@0)) (< k@@0 n)) (<= (select a@14 j@@0) (select a@14 k@@0)))
 :qid |bubbleso.18:26|
 :skolemid |5|
))) (and (! (or %lbl%@2431  (or bad@4 (forall ((j@@1 Int) ) (!  (=> (and (<= i@4 j@@1) (< j@@1 n)) (<= (select a@14 i@4) (select a@14 j@@1)))
 :qid |bubbleso.19:26|
 :skolemid |6|
)))) :lblneg @2431) (=> (or bad@4 (forall ((j@@2 Int) ) (!  (=> (and (<= i@4 j@@2) (< j@@2 n)) (<= (select a@14 i@4) (select a@14 j@@2)))
 :qid |bubbleso.19:26|
 :skolemid |6|
))) (! (or %lbl%@2463  (or bad@4 (forall ((j@@3 Int) (k@@1 Int) ) (!  (=> (and (and (<= 0 j@@3) (< j@@3 k@@1)) (< k@@1 sortedUntil)) (<= (select a@14 j@@3) (select a@14 k@@1)))
 :qid |bubbleso.20:26|
 :skolemid |7|
)))) :lblneg @2463)))))))))))
(let ((anon30_Else_correct  (=> (! (and %lbl%+619 true) :lblpos +619) (=> (and (< (select a@11 (- i@3 1)) (select a@11 i@3)) (= a@14 a@11)) anon20_correct))))
(let ((anon30_Then_correct  (=> (! (and %lbl%+617 true) :lblpos +617) (=> (<= (select a@11 i@3) (select a@11 (- i@3 1))) (=> (and (and (= t@4 (select a@11 i@3)) (= a@12 (store a@11 i@3 (select a@11 (- i@3 1))))) (and (= a@13 (store a@12 (- i@3 1) t@4)) (= a@14 a@13))) anon20_correct)))))
(let ((anon29_Else_correct  (=> (! (and %lbl%+608 true) :lblpos +608) (=> (> i@3 sortedUntil) (=> (and (=> bad@4 bad@3) (=> bad@3 bad@4)) (and anon30_Then_correct anon30_Else_correct))))))
(let ((anon29_Then_correct  (=> (! (and %lbl%+606 true) :lblpos +606) (=> (not (> i@3 sortedUntil)) (=> (and (=> bad@4 true) (=> true bad@4)) (and anon30_Then_correct anon30_Else_correct))))))
(let ((anon16_correct  (=> (! (and %lbl%+604 true) :lblpos +604) (=> (= i@3 (- i@2 1)) (and anon29_Then_correct anon29_Else_correct)))))
(let ((anon28_Else_correct  (=> (! (and %lbl%+598 true) :lblpos +598) (=> (and (< (select a@8 (- i@2 1)) (select a@8 i@2)) (= a@11 a@8)) anon16_correct))))
(let ((anon28_Then_correct  (=> (! (and %lbl%+596 true) :lblpos +596) (=> (<= (select a@8 i@2) (select a@8 (- i@2 1))) (=> (and (and (= t@3 (select a@8 i@2)) (= a@9 (store a@8 i@2 (select a@8 (- i@2 1))))) (and (= a@10 (store a@9 (- i@2 1) t@3)) (= a@11 a@10))) anon16_correct)))))
(let ((anon27_Else_correct  (=> (! (and %lbl%+587 true) :lblpos +587) (=> (> i@2 sortedUntil) (=> (and (=> bad@3 bad@2) (=> bad@2 bad@3)) (and anon28_Then_correct anon28_Else_correct))))))
(let ((anon27_Then_correct  (=> (! (and %lbl%+585 true) :lblpos +585) (=> (not (> i@2 sortedUntil)) (=> (and (=> bad@3 true) (=> true bad@3)) (and anon28_Then_correct anon28_Else_correct))))))
(let ((anon12_correct  (=> (! (and %lbl%+583 true) :lblpos +583) (=> (= i@2 (- i@1 1)) (and anon27_Then_correct anon27_Else_correct)))))
(let ((anon26_Else_correct  (=> (! (and %lbl%+577 true) :lblpos +577) (=> (and (< (select a@5 (- i@1 1)) (select a@5 i@1)) (= a@8 a@5)) anon12_correct))))
(let ((anon26_Then_correct  (=> (! (and %lbl%+575 true) :lblpos +575) (=> (<= (select a@5 i@1) (select a@5 (- i@1 1))) (=> (and (and (= t@2 (select a@5 i@1)) (= a@6 (store a@5 i@1 (select a@5 (- i@1 1))))) (and (= a@7 (store a@6 (- i@1 1) t@2)) (= a@8 a@7))) anon12_correct)))))
(let ((anon25_Else_correct  (=> (! (and %lbl%+566 true) :lblpos +566) (=> (> i@1 sortedUntil) (=> (and (=> bad@2 bad@1) (=> bad@1 bad@2)) (and anon26_Then_correct anon26_Else_correct))))))
(let ((anon25_Then_correct  (=> (! (and %lbl%+564 true) :lblpos +564) (=> (not (> i@1 sortedUntil)) (=> (and (=> bad@2 true) (=> true bad@2)) (and anon26_Then_correct anon26_Else_correct))))))
(let ((anon8_correct  (=> (! (and %lbl%+562 true) :lblpos +562) (=> (= i@1 (- i@0 1)) (and anon25_Then_correct anon25_Else_correct)))))
(let ((anon24_Else_correct  (=> (! (and %lbl%+556 true) :lblpos +556) (=> (and (< (select a@2 (- i@0 1)) (select a@2 i@0)) (= a@5 a@2)) anon8_correct))))
(let ((anon24_Then_correct  (=> (! (and %lbl%+554 true) :lblpos +554) (=> (<= (select a@2 i@0) (select a@2 (- i@0 1))) (=> (and (and (= t@1 (select a@2 i@0)) (= a@3 (store a@2 i@0 (select a@2 (- i@0 1))))) (and (= a@4 (store a@3 (- i@0 1) t@1)) (= a@5 a@4))) anon8_correct)))))
(let ((anon23_Else_correct  (=> (! (and %lbl%+545 true) :lblpos +545) (=> (> i@0 sortedUntil) (=> (and (=> bad@1 bad@0) (=> bad@0 bad@1)) (and anon24_Then_correct anon24_Else_correct))))))
(let ((anon23_Then_correct  (=> (! (and %lbl%+543 true) :lblpos +543) (=> (not (> i@0 sortedUntil)) (=> (and (=> bad@1 true) (=> true bad@1)) (and anon24_Then_correct anon24_Else_correct))))))
(let ((anon4_correct  (=> (! (and %lbl%+541 true) :lblpos +541) (=> (= i@0 (- i 1)) (and anon23_Then_correct anon23_Else_correct)))))
(let ((anon22_Else_correct  (=> (! (and %lbl%+535 true) :lblpos +535) (=> (and (< (select a (- i 1)) (select a i)) (= a@2 a)) anon4_correct))))
(let ((anon22_Then_correct  (=> (! (and %lbl%+533 true) :lblpos +533) (=> (<= (select a i) (select a (- i 1))) (=> (and (and (= t@0 (select a i)) (= a@0 (store a i (select a (- i 1))))) (and (= a@1 (store a@0 (- i 1) t@0)) (= a@2 a@1))) anon4_correct)))))
(let ((anon21_Else_correct  (=> (! (and %lbl%+524 true) :lblpos +524) (=> (> i sortedUntil) (=> (and (=> bad@0 bad) (=> bad bad@0)) (and anon22_Then_correct anon22_Else_correct))))))
(let ((anon21_Then_correct  (=> (! (and %lbl%+522 true) :lblpos +522) (=> (not (> i sortedUntil)) (=> (and (=> bad@0 true) (=> true bad@0)) (and anon22_Then_correct anon22_Else_correct))))))
(let ((anon0_correct  (=> (! (and %lbl%+1040 true) :lblpos +1040) (=> (>= n 0) (=> (and (and (<= 0 sortedUntil) (<= sortedUntil n)) (and (forall ((j@@4 Int) (k@@2 Int) ) (!  (=> (and (and (and (<= 0 j@@4) (< j@@4 sortedUntil)) (<= sortedUntil k@@2)) (< k@@2 n)) (<= (select a j@@4) (select a k@@2)))
 :qid |bubbleso.10:20|
 :skolemid |0|
)) (forall ((j@@5 Int) (k@@3 Int) ) (!  (=> (and (and (<= 0 j@@5) (< j@@5 k@@3)) (< k@@3 sortedUntil)) (<= (select a j@@5) (select a k@@3)))
 :qid |bubbleso.11:20|
 :skolemid |1|
)))) (=> (and (and (and (<= sortedUntil i) (< i n)) (forall ((j@@6 Int) (k@@4 Int) ) (!  (=> (and (and (and (<= 0 j@@6) (< j@@6 sortedUntil)) (<= sortedUntil k@@4)) (< k@@4 n)) (<= (select a j@@6) (select a k@@4)))
 :qid |bubbleso.13:20|
 :skolemid |2|
))) (and (forall ((j@@7 Int) ) (!  (=> (and (<= i j@@7) (< j@@7 n)) (<= (select a i) (select a j@@7)))
 :qid |bubbleso.14:20|
 :skolemid |3|
)) (forall ((j@@8 Int) (k@@5 Int) ) (!  (=> (and (and (<= 0 j@@8) (< j@@8 k@@5)) (< k@@5 sortedUntil)) (<= (select a j@@8) (select a k@@5)))
 :qid |bubbleso.15:20|
 :skolemid |4|
)))) (and anon21_Then_correct anon21_Else_correct)))))))
anon0_correct))))))))))))))))))))))))))
))
(get-info :name)
(check-sat)
(get-info :name)
(pop 1)
; Valid
